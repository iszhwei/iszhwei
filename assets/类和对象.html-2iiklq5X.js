const t=JSON.parse('{"key":"v-e41f0618","path":"/ccpp/03%20%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1/%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1.html","title":"类和对象","lang":"zh-CN","frontmatter":{"title":"类和对象","icon":"file","order":1,"headerDepth":4,"category":["c/c++"],"tag":["类和对象"],"description":"类和对象 img 什么是OOP思想？ 面向对象的程序设计语言必须有描述对象及其相互之间关系的语言成分。这些程序设计语言可以归纳为以下几类：系统中一切事物皆为对象；对象是属性及其操作的封装体；对象可按其性质划分为类，对象成为类的实例；实例关系和继承关系是对象之间的静态关系；消息传递是对象之间动态联系的唯一形式，也是计算的唯一形式；方法是消息的序列。 oop编程方法： 先确定有哪些实体，根据实体的属性和行为抽象出 ADT(abstract data type) 类（属性-&gt;成员变量，行为-&gt;成员方法）实例化得到对象","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/ccpp/03%20%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1/%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"类和对象"}],["meta",{"property":"og:description","content":"类和对象 img 什么是OOP思想？ 面向对象的程序设计语言必须有描述对象及其相互之间关系的语言成分。这些程序设计语言可以归纳为以下几类：系统中一切事物皆为对象；对象是属性及其操作的封装体；对象可按其性质划分为类，对象成为类的实例；实例关系和继承关系是对象之间的静态关系；消息传递是对象之间动态联系的唯一形式，也是计算的唯一形式；方法是消息的序列。 oop编程方法： 先确定有哪些实体，根据实体的属性和行为抽象出 ADT(abstract data type) 类（属性-&gt;成员变量，行为-&gt;成员方法）实例化得到对象"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"类和对象"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类和对象\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"什么是OOP思想？","slug":"什么是oop思想","link":"#什么是oop思想","children":[]},{"level":2,"title":"oop编程方法：","slug":"oop编程方法","link":"#oop编程方法","children":[]},{"level":2,"title":"面向对象基本概念","slug":"面向对象基本概念","link":"#面向对象基本概念","children":[]},{"level":2,"title":"oop语言的四大特征是什么？","slug":"oop语言的四大特征是什么","link":"#oop语言的四大特征是什么","children":[]},{"level":2,"title":"C++中类的定义","slug":"c-中类的定义","link":"#c-中类的定义","children":[{"level":3,"title":"class与struct的区别","slug":"class与struct的区别","link":"#class与struct的区别","children":[]}]}],"git":{},"readingTime":{"minutes":4.49,"words":1347},"filePathRelative":"ccpp/03 类和对象/类和对象.md","excerpt":"<h1> 类和对象</h1>\\n<figure><figcaption>img</figcaption></figure>\\n<!--more-->\\n<h2> 什么是OOP思想？</h2>\\n<p>面向对象的程序设计语言必须有描述对象及其相互之间关系的语言成分。这些程序设计语言可以归纳为以下几类：<strong>系统中一切事物皆为对象；对象是属性及其操作的封装体；对象可按其性质划分为类，对象成为类的实例；实例关系和继承关系是对象之间的静态关系；消息传递是对象之间动态联系的唯一形式，也是计算的唯一形式；方法是消息的序列。</strong></p>\\n<h2> oop编程方法：</h2>\\n<ol>\\n<li>先确定有哪些实体，根据实体的属性和行为抽象出 ADT(abstract data type)</li>\\n<li>类（属性-&gt;成员变量，行为-&gt;成员方法）实例化得到对象</li>\\n</ol>","autoDesc":true}');export{t as data};
