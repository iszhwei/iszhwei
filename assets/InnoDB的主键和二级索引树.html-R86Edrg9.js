import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as t,c as i,d as s,f as n,w as e,a as o,e as l}from"./app-9OmaxHRC.js";const c="/assets/image-20240418160830101-DF0UyCH0.png",d="/assets/image-20240418161002922-fM2eseRv.png",B="/assets/image-20240418162100913-1WZiZ-TR.png",y="/assets/image-20240418162504627-YvZSMyeC.png",g="/assets/image-20240418162435099-Hi2k7l5O.png",u="/assets/image-20240418164234270-2DGPK_yV.png",D="/assets/image-20240418165538873-uENTLsR3.png",m={},f=o('<h1 id="innodb的主键和二级索引树" tabindex="-1"><a class="header-anchor" href="#innodb的主键和二级索引树" aria-hidden="true">#</a> InnoDB的主键和二级索引树</h1><h2 id="主键" tabindex="-1"><a class="header-anchor" href="#主键" aria-hidden="true">#</a> 主键</h2><p>​ <img src="'+c+'" alt="" loading="lazy"></p><figure><img src="'+d+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>主键树中叶子节点key是主键值，data是主键所在行的数据</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> * </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> student; #在有序链表中进行全文搜索</span></span>
<span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> * </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> stduent </span><span style="color:#C678DD;">where</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">uid</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">; #等值搜索，从根节点开始在B+树上进行二分搜索</span></span>
<span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> * </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> stduent </span><span style="color:#C678DD;">where</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">uid</span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">; #范围查询，在有序链表中查找</span></span>
<span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> * </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> stduent </span><span style="color:#C678DD;">where</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;liuxiang&#39;</span><span style="color:#ABB2BF;">; #没有索引，在有序链表上进行整表搜索</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+B+'" alt="image-20240418162100913" tabindex="0" loading="lazy"><figcaption>image-20240418162100913</figcaption></figure><h2 id="二级索引" tabindex="-1"><a class="header-anchor" href="#二级索引" aria-hidden="true">#</a> 二级索引</h2><figure><img src="'+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+g+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> student </span><span style="color:#C678DD;">where</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;liuxiang&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">uid</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> student </span><span style="color:#C678DD;">where</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;liuxiang&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> * </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> student </span><span style="color:#C678DD;">where</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;liuxiang&#39;</span><span style="color:#ABB2BF;">; #回表</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="回表的过程" tabindex="-1"><a class="header-anchor" href="#回表的过程" aria-hidden="true">#</a> 回表的过程</h3>',13),h=o(`<h3 id="练习" tabindex="-1"><a class="header-anchor" href="#练习" aria-hidden="true">#</a> 练习</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> * </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> student </span><span style="color:#C678DD;">where</span><span style="color:#ABB2BF;"> age</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">order by</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Q:name现在是索引，如果只给age添加索引行不行？还有什么没考虑得到呢？</strong></p><p>A：不行，由于<strong>一张表</strong>的<strong>一次sql</strong>查询<strong>只能用一个索引</strong>，之创建age键索引，会有Using filesort！！需要创建age,name的多列索引（先按age排序，age相同再按name排序）</p><figure><img src="`+D+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>遇到外部排序Using filesort一定要优化</li></ul>',6);function C(_,A){const a=r("font");return t(),i("div",null,[f,s("ol",null,[s("li",null,[n(a,{color:"cornflowerblue"},{default:e(()=>[l("**搜索name的二级索引树，找到liuxiang对应的主键uid;**")]),_:1})]),s("li",null,[n(a,{color:"cornflowerblue"},{default:e(()=>[l("**再拿uid=5回表在主键索引树上搜索uid那一行的记录**")]),_:1})])]),h])}const v=p(m,[["render",C],["__file","InnoDB的主键和二级索引树.html.vue"]]);export{v as default};
