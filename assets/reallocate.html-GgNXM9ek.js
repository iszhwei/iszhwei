import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as l,a}from"./app-mYdPlPhZ.js";const p={},e=a(`<h1 id="reallocate" tabindex="-1"><a class="header-anchor" href="#reallocate" aria-hidden="true">#</a> reallocate</h1><p><strong>作用：</strong> 对内存池中的__chuck块进行<strong>扩容或缩容</strong>，一般用的比较少</p><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">template</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">threads</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">inst</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">void*</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">__default_alloc_template</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">threads</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">inst</span><span style="color:#ABB2BF;">&gt;::</span><span style="color:#61AFEF;">reallocate</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">void*</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">__p</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">                                                    </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">__old_sz</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">                                                    </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">__new_sz</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 参数:chunk块的其实地址、调整前chunk块的大小、调整后chunk块的大小</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">void</span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> __result;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> __copy_sz;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (__old_sz </span><span style="color:#C678DD;">&gt;</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;">) _MAX_BYTES </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> __new_sz </span><span style="color:#C678DD;">&gt;</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;">) _MAX_BYTES) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    	// __old_sz和__new_sz都大于128字节，并不是从内存池分配的内存，直接调用库函数realloc </span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">realloc</span><span style="color:#ABB2BF;">(__p, __new_sz));</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // __old_sz和__new_sz处于同一数量区间，不用扩容或缩容</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#61AFEF;">_S_round_up</span><span style="color:#ABB2BF;">(__old_sz) </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">_S_round_up</span><span style="color:#ABB2BF;">(__new_sz)) </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;">(__p);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // __result指向重新分配的空间</span></span>
<span class="line"><span style="color:#ABB2BF;">    __result </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">allocate</span><span style="color:#ABB2BF;">(__new_sz);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // __copy_sz 保存最小值</span></span>
<span class="line"><span style="color:#ABB2BF;">    __copy_sz </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> __new_sz </span><span style="color:#C678DD;">&gt;</span><span style="color:#ABB2BF;"> __old_sz</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> __old_sz </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> __new_sz;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 从__p拷贝到__result，扩容拷贝__old_sz字节，缩容拷贝__new_sz</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">memcpy</span><span style="color:#ABB2BF;">(__result, __p, __copy_sz);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 归还原来的chunk块到内存池</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">deallocate</span><span style="color:#ABB2BF;">(__p, __old_sz);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;">(__result);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),o=[e];function c(t,r){return n(),l("div",null,o)}const _=s(p,[["render",c],["__file","reallocate.html.vue"]]);export{_ as default};
