const e=JSON.parse('{"key":"v-c5721e08","path":"/redis/%E4%BA%8B%E5%8A%A1%E5%92%8C%E4%BA%8B%E5%8A%A1%E9%94%81.html","title":"事务和事务锁","lang":"zh-CN","frontmatter":{"title":"事务和事务锁","icon":"file","order":10,"headerDepth":4,"category":["redis"],"tag":["redis事务"],"description":"事务和事务锁 一、事务简介 Redis执行指令过程中，多条连续执行的指令被干扰，打断，插队，这font&gt; 由于客户端2中断了客户端1两条连续的指令执行，导致客户端1获取到itcast redis事务就是一个命令执行的****，将一系列预定义命令包装成一个整体（一个队列）。当执行时，一次性按照添加顺序依次执行，中间不会被打断或者干扰。 一个队列中，的执行一系列命令","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/redis/%E4%BA%8B%E5%8A%A1%E5%92%8C%E4%BA%8B%E5%8A%A1%E9%94%81.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"事务和事务锁"}],["meta",{"property":"og:description","content":"事务和事务锁 一、事务简介 Redis执行指令过程中，多条连续执行的指令被干扰，打断，插队，这font&gt; 由于客户端2中断了客户端1两条连续的指令执行，导致客户端1获取到itcast redis事务就是一个命令执行的****，将一系列预定义命令包装成一个整体（一个队列）。当执行时，一次性按照添加顺序依次执行，中间不会被打断或者干扰。 一个队列中，的执行一系列命令"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"redis事务"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"事务和事务锁\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"一、事务简介","slug":"一、事务简介","link":"#一、事务简介","children":[]},{"level":2,"title":"二、事务基本指令","slug":"二、事务基本指令","link":"#二、事务基本指令","children":[]},{"level":2,"title":"三、事务的工作流程","slug":"三、事务的工作流程","link":"#三、事务的工作流程","children":[]},{"level":2,"title":"四、事务中指令出错处理","slug":"四、事务中指令出错处理","link":"#四、事务中指令出错处理","children":[]},{"level":2,"title":"五、事务锁","slug":"五、事务锁","link":"#五、事务锁","children":[{"level":3,"title":"1. 业务场景一：多个客户端想操作同一数据，保证数据不被重复操作","slug":"_1-业务场景一-多个客户端想操作同一数据-保证数据不被重复操作","link":"#_1-业务场景一-多个客户端想操作同一数据-保证数据不被重复操作","children":[]},{"level":3,"title":"2. 业务场景二：setnx操作一个变量，然后再操作对应数据","slug":"_2-业务场景二-setnx操作一个变量-然后再操作对应数据","link":"#_2-业务场景二-setnx操作一个变量-然后再操作对应数据","children":[]},{"level":3,"title":"3. 业务场景三：给上述setnx的变量设置有效时间","slug":"_3-业务场景三-给上述setnx的变量设置有效时间","link":"#_3-业务场景三-给上述setnx的变量设置有效时间","children":[]}]}],"git":{},"readingTime":{"minutes":7.14,"words":2141},"filePathRelative":"redis/事务和事务锁.md","excerpt":"<h1> 事务和事务锁</h1>\\n<h2> 一、事务简介</h2>\\n<p>Redis执行指令过程中，多条连续执行的指令被干扰，打断，插队，这font&gt;</p>\\n<p>由于客户端2中断了客户端1两条连续的指令执行，导致客户端1获取到itcast</p>\\n<figure><figcaption></figcaption></figure>\\n<p><strong>redis事务</strong>就是一个命令执行的****，<u>将一系列预定义命令包装成一个整体（一个队列）。当执行时，一次性按照添加顺序依次执行，中间不会被打断或者干扰。</u></p>\\n<p>一个队列中，的执行一系列命令</p>","autoDesc":true}');export{e as data};
