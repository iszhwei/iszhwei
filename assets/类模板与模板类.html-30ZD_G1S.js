import{_ as B}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as t,d as s,e as n,f as l,w as p,a as r}from"./app-2pke9_a8.js";const i={},y=s("h1",{id:"类模板与模板类",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#类模板与模板类","aria-hidden":"true"},"#"),n(" 类模板与模板类")],-1),F=s("u",null,"使用与函数模板也差不多，只是要",-1),d=s("u",null,"注意模板的嵌套",-1),A=s("strong",null,"函数模板",-1),v=s("strong",null,"类模板",-1),D=r(`<div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//类模板</span></span>
<span class="line"><span style="color:#C678DD;">template</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#C678DD;">typename</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">kSize</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#7F848E;font-style:italic;">//类型参数T与非类型参数kSize</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Stack</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#C678DD;">public:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">Stack</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">    : </span><span style="color:#61AFEF;">_top</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    , </span><span style="color:#61AFEF;">_data</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">[kSize]())</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">~Stack</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">empty</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">full</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#E06C75;font-style:italic;">t</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">pop</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">top</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">private:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> _top;</span></span>
<span class="line"><span style="color:#ABB2BF;">    T </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;">_data;</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//类模板在类外面定义成员函数时候需要注意，模板是有类型的，需要使用参数加类型</span></span>
<span class="line"><span style="color:#C678DD;">template</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#C678DD;">typename</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">kSize</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">Stack&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">kSize</span><span style="color:#ABB2BF;">&gt;::</span><span style="color:#56B6C2;">~</span><span style="color:#61AFEF;">Stack</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(_data)</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">delete</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">[]</span><span style="color:#ABB2BF;"> _data;</span></span>
<span class="line"><span style="color:#ABB2BF;">        _data </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">nullptr</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">template</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#C678DD;">typename</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">kSize</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Stack</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">kSize</span><span style="color:#ABB2BF;">&gt;::</span><span style="color:#61AFEF;">empty</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> _top;</span><span style="color:#7F848E;font-style:italic;">//_top = -1</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">template</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#C678DD;">typename</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">kSize</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Stack</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">kSize</span><span style="color:#ABB2BF;">&gt;::</span><span style="color:#61AFEF;">full</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> _top </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> kSize </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">template</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#C678DD;">typename</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">kSize</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Stack</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">kSize</span><span style="color:#ABB2BF;">&gt;::</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#E06C75;font-style:italic;">t</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">!</span><span style="color:#61AFEF;">full</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">_data</span><span style="color:#ABB2BF;">[</span><span style="color:#C678DD;">++</span><span style="color:#ABB2BF;">_top] </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> t;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">else</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">        cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;The Stack is full, cannot push any data&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">template</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#C678DD;">typename</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">kSize</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Stack</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">kSize</span><span style="color:#ABB2BF;">&gt;::</span><span style="color:#61AFEF;">pop</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">!</span><span style="color:#61AFEF;">empty</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">--</span><span style="color:#ABB2BF;">_top;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">else</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">        cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;The Stack is empty&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">template</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#C678DD;">typename</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">kSize</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Stack</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">kSize</span><span style="color:#ABB2BF;">&gt;::</span><span style="color:#61AFEF;">top</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">_data</span><span style="color:#ABB2BF;">[_top];</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    Stack</span><span style="color:#C678DD;">&lt;int</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">8</span><span style="color:#C678DD;">&gt;</span><span style="color:#ABB2BF;"> st;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">test1</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    Stack</span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;">string</span><span style="color:#C678DD;">&gt;</span><span style="color:#ABB2BF;"> st;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="模板的嵌套" tabindex="-1"><a class="header-anchor" href="#模板的嵌套" aria-hidden="true">#</a> 模板的嵌套</h2><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">template</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Outside</span><span style="color:#ABB2BF;">       </span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#C678DD;">public:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">template</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">R</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Inside</span><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">public:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">Inside</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">R</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">) </span></span>
<span class="line"><span style="color:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#ABB2BF;">            r </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> x;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">disp</span><span style="color:#ABB2BF;">() {cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;Inside: &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> r </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;}</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">private:</span></span>
<span class="line"><span style="color:#ABB2BF;">        R r;</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">Outside</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">) : </span><span style="color:#61AFEF;">t</span><span style="color:#ABB2BF;">(x) </span></span>
<span class="line"><span style="color:#ABB2BF;">    {}</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">disp</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">        cout</span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#98C379;">&quot;Outside:&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">t</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">disp</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">private:</span></span>
<span class="line"><span style="color:#ABB2BF;">    Inside</span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;">T</span><span style="color:#C678DD;">&gt;</span><span style="color:#ABB2BF;"> t;</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    Outside&lt;</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;">&gt;::Inside</span><span style="color:#C678DD;">&lt;double&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">obin</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3.5</span><span style="color:#ABB2BF;">); </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">obin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">disp</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    Outside</span><span style="color:#C678DD;">&lt;int&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">obout</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);  </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">obout</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">disp</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),u={href:"https://blog.csdn.net/weixin_43744293/article/details/123919688",target:"_blank",rel:"noopener noreferrer"};function C(m,b){const a=o("font"),e=o("ExternalLinkIcon");return c(),t("div",null,[y,s("p",null,[s("strong",null,[n("类模板：仅仅"),l(a,{color:"green"},{default:p(()=>[n("成员数据类型不同")]),_:1}),n("的类的抽象")])]),s("p",null,[s("strong",null,[n("类模板的实例化就是"),l(a,{color:"red"},{default:p(()=>[n("模板类")]),_:1})])]),s("p",null,[F,l(a,{color:"red"},{default:p(()=>[d,n("("),A,n("与"),v,n("都可以嵌套，比如函数参数是模 板，类模板里面还有类模板)")]),_:1}),n("，直接使用例子看类模板。")]),D,s("p",null,[s("a",u,[n("C++模板的特化(specialization)和偏特化(partial specialization)_模板偏特化-CSDN博客"),l(e)])])])}const k=B(i,[["render",C],["__file","类模板与模板类.html.vue"]]);export{k as default};
