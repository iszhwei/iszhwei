const o=JSON.parse('{"key":"v-403714d4","path":"/mysql/08%20MySQL%E6%97%A5%E5%BF%97/MySQL%E9%87%8D%E5%81%9A%E6%97%A5%E5%BF%97redo%20log.html","title":"MySQL重做日志redo log","lang":"zh-CN","frontmatter":{"title":"MySQL重做日志redo log","icon":"file","order":3,"headerDepth":4,"category":["mysql"],"tag":["mysql日志"],"description":"MySQL重做日志redo log 在事务的ACID特性中，原子性（A）、一致性（C）、持久性（D）由undo log和redo log实现，隔离性（I）由锁+MVCC实现 undo log：事务还没有commit，中途执行异常，可以使用undo log把数据恢复到事务执行前的状态，确保事务的原子性 redo log：事务commit成功，，此时若发生异常，就要使用redo log重新执行这一事务的SQL，确保事务的持久性（只要事务commit成功，不管发生什么异常事件，只要下一次MySQL服务正常进行，那上一次commit的数据一定要恢复回来）","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/mysql/08%20MySQL%E6%97%A5%E5%BF%97/MySQL%E9%87%8D%E5%81%9A%E6%97%A5%E5%BF%97redo%20log.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"MySQL重做日志redo log"}],["meta",{"property":"og:description","content":"MySQL重做日志redo log 在事务的ACID特性中，原子性（A）、一致性（C）、持久性（D）由undo log和redo log实现，隔离性（I）由锁+MVCC实现 undo log：事务还没有commit，中途执行异常，可以使用undo log把数据恢复到事务执行前的状态，确保事务的原子性 redo log：事务commit成功，，此时若发生异常，就要使用redo log重新执行这一事务的SQL，确保事务的持久性（只要事务commit成功，不管发生什么异常事件，只要下一次MySQL服务正常进行，那上一次commit的数据一定要恢复回来）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"mysql日志"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL重做日志redo log\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"一、redo log概念","slug":"一、redo-log概念","link":"#一、redo-log概念","children":[]},{"level":2,"title":"二、缓存、磁盘结构","slug":"二、缓存、磁盘结构","link":"#二、缓存、磁盘结构","children":[{"level":3,"title":"是不是commit的时候，buffer pool里面的脏数据（数据有被修改）同步被写入磁盘？","slug":"是不是commit的时候-buffer-pool里面的脏数据-数据有被修改-同步被写入磁盘","link":"#是不是commit的时候-buffer-pool里面的脏数据-数据有被修改-同步被写入磁盘","children":[]},{"level":3,"title":"undo log本身也是记录在redo log中","slug":"undo-log本身也是记录在redo-log中","link":"#undo-log本身也是记录在redo-log中","children":[]},{"level":3,"title":"什么是真正的事务commit成功？","slug":"什么是真正的事务commit成功","link":"#什么是真正的事务commit成功","children":[]},{"level":3,"title":"什么叫事务commit成功？（和上面的问题一样）","slug":"什么叫事务commit成功-和上面的问题一样","link":"#什么叫事务commit成功-和上面的问题一样","children":[]}]}],"git":{},"readingTime":{"minutes":7.27,"words":2180},"filePathRelative":"mysql/08 MySQL日志/MySQL重做日志redo log.md","excerpt":"<h1> MySQL重做日志redo log</h1>\\n<p>在事务的ACID特性中，原子性（A）、一致性（C）、持久性（D）由undo log和redo log实现，隔离性（I）由锁+MVCC实现</p>\\n<p><strong>undo log</strong>：<u>事务还没有commit，中途执行异常，可以使用undo log把数据恢复到事务执行前的状态，确保事务的原子性</u>\\n<strong>redo log</strong>：<u>事务commit成功，，此时若发生异常，就要使用redo log重新执行这一事务的SQL，<strong>确保事务的持久性</strong></u>（只要事务commit成功，不管发生什么异常事件，只要下一次MySQL服务正常进行，那上一次commit的数据一定要恢复回来）</p>","autoDesc":true}');export{o as data};
