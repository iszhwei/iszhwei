const e=JSON.parse('{"key":"v-0072b68a","path":"/algo/01%20%E6%95%B0%E7%BB%84/344.%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2.html","title":"leetcode 344. 反转字符串","lang":"zh-CN","frontmatter":{"title":"leetcode 344. 反转字符串","icon":"code","order":7,"category":["数据结构与算法"],"tag":["数组","双指针","字符串"],"description":"leetcode344. 反转字符串 题目描述：编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。 不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。 **原地算法（in-place algorithm）**基本上不需要额外辅助的数据结构,然而,允许少量额外的辅助变量来转换数据的算法。当算法运行时，输入的数据通常会被要输出的部分覆盖掉，","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/algo/01%20%E6%95%B0%E7%BB%84/344.%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"leetcode 344. 反转字符串"}],["meta",{"property":"og:description","content":"leetcode344. 反转字符串 题目描述：编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。 不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。 **原地算法（in-place algorithm）**基本上不需要额外辅助的数据结构,然而,允许少量额外的辅助变量来转换数据的算法。当算法运行时，输入的数据通常会被要输出的部分覆盖掉，"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"数组"}],["meta",{"property":"article:tag","content":"双指针"}],["meta",{"property":"article:tag","content":"字符串"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"leetcode 344. 反转字符串\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":0.97,"words":290},"filePathRelative":"algo/01 数组/344.反转字符串.md","excerpt":"<p><a href=\\"https://leetcode.cn/problems/reverse-string/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">leetcode344. 反转字符串</a></p>\\n<p><strong>题目描述</strong>：编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 <code>s</code> 的形式给出。</p>\\n<p>不要给另外的数组分配额外的空间，你必须<strong>原地修改输入数组</strong>、使用 O(1) 的额外空间解决这一问题。</p>\\n<blockquote>\\n<p>**原地算法（in-place algorithm）**基本上不需要额外辅助的数据结构,然而,允许少量额外的辅助变量来转换数据的算法。当算法运行时，输入的数据通常会被要输出的部分覆盖掉，</p>\\n</blockquote>","autoDesc":true}');export{e as data};
