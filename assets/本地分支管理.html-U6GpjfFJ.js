import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as c,o as d,c as n,d as e,e as t,f as a,w as o,a as s}from"./app-2pke9_a8.js";const l="/assets/07cc01eec19e4ac9bcd3f560dfef839e-dFXbfUT_.png",g="/assets/d9ed0612c6f546f499fd14510cba1efe-QFqL0Pov.png",f="/assets/1b40bed03d804a5496003028f306c006-PJB_2h_W.png",p="/assets/73bd6b4be2bf4bf09ff9b5ba799308d4-h_AS6yJi.png",u="/assets/3fec24fea6894a4397c8d36553178acd-rYApsJIe.png",_="/assets/b7e4332d0ced45d9aa01332f8fc2a2c2-PPgid8ig.png",m="/assets/ae1198005d974e40be624169ef604e2d-CcqZRV8F.png",b="/assets/6b5fe430082e480894e5658784d6867a-M3ySpngR.png",h="/assets/762eb0328b7b4a90b79787be152f28d1-n6u6ntb7.png",x="/assets/8628334b421240d89a60df263b05c83b-pBpq0nwT.png",v="/assets/5a2869f5dd5c4938a39aded8732c791e-_pHFX1N7.png",y="/assets/d48a4087fe7e4c3fbec79c9329dd474a-u_7YJzTP.png",z="/assets/3d2cf220364842f4abcbbb1f5b636b1a-Wj4OwE0v.png",k="/assets/6178bf69c92f4ddebf71d15517cb9b7d-mIv5PUIw.png",w="/assets/fec174536cee4559b94bdf59150bab57-iqfayYke.png",B="/assets/2faf006d0df241a681e00cfd7ac5ff44-HS-jT0aM.png",P="/assets/bd4674ec84ec40af9e72408da9c15d96-7iBLIH4R.png",N={},T=e("h1",{id:"本地分支管理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#本地分支管理","aria-hidden":"true"},"#"),t(" 本地分支管理")],-1),V=e("strong",null,"应该尽可能多地建立分支，在分支上进行开发，功能测试稳定后，再将分支上地代码合并到指定的分支",-1),q=s('<figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><code>git branch</code>：查看本地分支</li><li><code>git branch -r</code>：查看remote分支</li><li><code>git remote</code>：查看remote分支</li><li><code>git branch -a</code>：查看本地分支以及remote分支</li></ul><p>小张在Windows操作，发现冒泡排序的效率太低，希望能改成快速排序。小张可以直接在本地master分支上进行代码修改，<u>为了避免自己修改了master，然后push的时候和别人产生冲突，小张决定建立一个新的分支，在新分支上写自己的代码</u></p><ul><li><code>git branch -vv</code>：<strong>查看本地和远程分支的对应关系</strong></li></ul><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="一、master分支没有改变-合并其他分支" tabindex="-1"><a class="header-anchor" href="#一、master分支没有改变-合并其他分支" aria-hidden="true">#</a> 一、master分支没有改变，合并其他分支</h2><ul><li><code>git checkout -b 分支名</code>：<strong>创建新分支并切换</strong></li></ul><p>小张创建新分支sortdev，并切换到sortdev分支</p><figure><img src="'+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>小张这时已经工作在本地的sortdev分支，<u>git pull同步远程和本地的分支</u></p><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',12),D=e("figure",null,[e("img",{src:_,alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),E=e("p",null,"切换回master分支，git pull同步代码后，切换回sortdev分支",-1),F=e("figure",null,[e("img",{src:m,alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),I=e("p",null,"小张将冒泡排序修改为快速排序后",-1),J=e("figure",null,[e("img",{src:b,alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),M=e("figure",null,[e("img",{src:h,alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),R=s('<ul><li><code>git merge 分支名</code>：<strong>将指定分支的修改合并到本地分支</strong></li></ul><figure><img src="'+x+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>其实在master分支merge后，本地仓库就已经是合并sortdev后的结果了，<strong>由于在sortdev分支已经进行了add、commit，merge后不需要再在master上进行add、commit了，直接push即可</strong></p><figure><img src="'+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>其实就是这样：<strong>我们在本地新建分支后，新建一个分支，然后在新的分支上修改代码，修改测试完成后再merge到master分支，然后从本地的master分支push</strong></p>',5),S=e("code",null,"git branch -d 分支名",-1),A=e("strong",null,"删除分支",-1),C=s('<figure><img src="'+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>除了切换到master分支再push，还可以指定push到哪个远程分支</p><figure><img src="'+z+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="二、master分支有改变-合并其他分支" tabindex="-1"><a class="header-anchor" href="#二、master分支有改变-合并其他分支" aria-hidden="true">#</a> 二、master分支有改变，合并其他分支</h2><p>上一小节把sortdev01分支合并到master分支上时一切顺利，是因为sortdev01分支在合并的时候， master分支没有做过任何改动，看图：</p><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>实际上有可能发生这样的情况：</p>',7),H=e("li",null,"啊亮从master分支创建了一个新的分支sortdev01，进行代码开发测试，提交",-1),W=e("li",null,"小张更新了master分支上的代码",-1),Y=e("li",null,"啊亮直接git merge sortdev01就发生冲突了",-1),j=s('<figure><img src="'+w+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>实际操作如下</p><figure><img src="'+B+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>通过<code>git diff</code>命令查看一下README.MD文件的冲突，在master主干上手动解决冲突，并提交远程仓库</p><figure><img src="'+P+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后再通过git add、git commit、git push把修改推送到远程origin仓库的master主干分支上，冲突就解决完了</p><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2><ul><li>查看分支： <code>git branch</code></li><li>创建分支： <code>git branch</code></li><li>切换分支： <code>git checkout</code></li><li>创建+切换分支： <code>git checkout -b</code></li><li>合并某分支到当前分支： <code>git merge</code></li><li>删除本地分支： <code>git branch -d</code> 如果分支上有更新没有merge，git会提示你merge，强制删除用<code>-D</code></li><li>本地分支推送到远程分支：<code>git push &lt;远程仓库名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</code></li><li>远程分支合并到本地分支：<code>git pull &lt;远程仓库名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</code></li></ul>',8);function L(U,X){const i=c("font");return d(),n("div",null,[T,e("p",null,[t("作为开发人员，我们"),a(i,{color:"green"},{default:o(()=>[V]),_:1})]),q,a(i,{color:"red"},{default:o(()=>[t("报错了，查看一下本地分支和远程分支的对应关系（这里指定对应关系即可pull，比如git pull origin master:sortdev）")]),_:1}),D,e("ul",null,[e("li",null,[t("我们发现"),a(i,{color:"red"},{default:o(()=>[t("本地的sortdev分支并没有远程的分支与之对应")]),_:1}),t("，因为我们只在本地创建了sortdev，并没有指定远程的对应分支。而"),a(i,{color:"green"},{default:o(()=>[t("我们如果切换回本地的master分支，再次git pull就能成功，因为本地master分支和远程分支是有对应关系的")]),_:1})])]),E,F,I,J,e("p",null,[t("修改代码后，从本地的sortdev分支"),a(i,{color:"red"},{default:o(()=>[t("push到远程的master分支")]),_:1})]),M,e("p",null,[t("这样是"),a(i,{color:"red"},{default:o(()=>[t("无法完成的，本地的sortdev和远程分支没有对应关系")]),_:1}),t("，而输入的git push origin master的意思是把本地的master分支推送到远程的master，但是"),a(i,{color:"green"},{default:o(()=>[t("我们的修改是在sortdev分支上完成的。需要用本地的master分支merge本地的sortdev分支，然后从本地master分支push到远程master分支")]),_:1})]),R,e("ul",null,[e("li",null,[S,t("："),A,t("，如果要删除分支上还"),a(i,{color:"red"},{default:o(()=>[t("有修改没有合并到当前分支，小写的d不能删除，需要用大写的D强制删除")]),_:1})])]),C,e("ul",null,[H,W,e("li",null,[a(i,{color:"red"},{default:o(()=>[t("啊亮切换分支到master，git pull同步远程仓库master主干的最新代码，发现有变化")]),_:1})]),Y]),j])}const Z=r(N,[["render",L],["__file","本地分支管理.html.vue"]]);export{Z as default};
