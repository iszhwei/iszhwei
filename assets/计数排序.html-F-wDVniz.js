const t=JSON.parse('{"key":"v-85d8c71c","path":"/algo/04%20%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F.html","title":"计数排序","lang":"zh-CN","frontmatter":{"title":"计数排序","icon":"file","order":9,"headerDepth":4,"category":["数据结构与算法"],"tag":["排序算法"],"description":"计数排序 计数排序应用场景 计数排序只适用于**的序列的排序**，若待排序列的数据较分散，则会造成空间浪费，并且计数排序只适用于整型排序，不适用与浮点型排序。 步骤 先找出序列中最大值和最小值，计算出计数数组的范围 遍历序列，统计出现的次数 为了使排序具有稳定性（保证相同值的前后顺序），计数数组累计求和，累计和就是该元素要存放的位置 倒叙遍历序列，查找该元素存放的位置（） 代码实现","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/algo/04%20%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"计数排序"}],["meta",{"property":"og:description","content":"计数排序 计数排序应用场景 计数排序只适用于**的序列的排序**，若待排序列的数据较分散，则会造成空间浪费，并且计数排序只适用于整型排序，不适用与浮点型排序。 步骤 先找出序列中最大值和最小值，计算出计数数组的范围 遍历序列，统计出现的次数 为了使排序具有稳定性（保证相同值的前后顺序），计数数组累计求和，累计和就是该元素要存放的位置 倒叙遍历序列，查找该元素存放的位置（） 代码实现"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"排序算法"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"计数排序\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"计数排序应用场景","slug":"计数排序应用场景","link":"#计数排序应用场景","children":[]},{"level":2,"title":"步骤","slug":"步骤","link":"#步骤","children":[]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]}],"git":{},"readingTime":{"minutes":1.9,"words":570},"filePathRelative":"algo/04 排序算法/计数排序.md","excerpt":"<h1> 计数排序</h1>\\n<h2> 计数排序应用场景</h2>\\n<p>计数排序只适用于**的序列的排序**，若待排序列的数据较分散，则会造成空间浪费，并且计数排序只适用于<strong>整型排序</strong>，不适用与浮点型排序。</p>\\n<h2> 步骤</h2>\\n<ol>\\n<li>先找出序列中最大值和最小值，计算出计数数组的范围</li>\\n<li>遍历序列，统计出现的次数</li>\\n<li>为了使排序具有稳定性（保证相同值的前后顺序），计数数组累计求和，累计和就是该元素要存放的位置</li>\\n<li>倒叙遍历序列，查找该元素存放的位置（）</li>\\n</ol>\\n<h2> 代码实现</h2>","autoDesc":true}');export{t as data};
