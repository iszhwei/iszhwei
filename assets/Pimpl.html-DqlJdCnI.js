import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as i,d as n,e as s,f as a,w as p,a as B}from"./app-2pke9_a8.js";const t={},r=n("h1",{id:"pimpl",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pimpl","aria-hidden":"true"},"#"),s(" Pimpl")],-1),y=n("strong",null,"编译防火墙",-1),d=n("strong",null,"嵌套类",-1),F=B(`<ol><li><p>提高编译速度；</p><ul><li>数据成员只有一个指针，使得每个对象占用内存较小</li><li>可以将实现文件编译成库文件</li></ul></li><li><p>实现信息隐藏；</p><ul><li>头文件只有接口和一个数据指针，无法推断出底层的实现</li></ul></li><li><p>减小编译依赖，可以用最小的代价平滑的升级库文件；</p><ul><li><p>不需要重新编译就可以替换库文件，便于软件升级</p><p>如果用户代码需要使用这个类，它就需要 include 这个头文件，根据 C++ 的头文件展开原则，其他的代码也需要 include 这个头文件里面涉及到的所有的头文件。因此，一旦这里面相关的代码有变动，不止变动的代码需要重新编译，用户代码也需要重新编译，这会使编译速度变得很慢。</p></li></ul></li><li><p>接口与实现进行解耦；</p></li><li><p>移动语义友好。</p></li></ol><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//Line.h</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Line</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#C678DD;">public:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">Line</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">~Line</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">printLine</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">private:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">LineImpl</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//类的前向声明   </span></span>
<span class="line"><span style="color:#ABB2BF;">    LineImple </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;">_pimpl;</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//Line.cc</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;Line.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//功能实现由嵌套类实现</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Line</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">LineImpl</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#C678DD;">public:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">LineImpl</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">x1</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">y1</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">x2</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">y2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">printLineImpl</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">private:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Point</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">public:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">Point</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">y</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        : </span><span style="color:#61AFEF;">_x</span><span style="color:#ABB2BF;">(x), </span><span style="color:#61AFEF;">_y</span><span style="color:#ABB2BF;">(y)</span></span>
<span class="line"><span style="color:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">print</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">private:</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> _x;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> _y;</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    Point _pt1;</span></span>
<span class="line"><span style="color:#ABB2BF;">    Point _pt2;    </span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">Line</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">LineImpl</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">LineImpl</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> x1, </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> y1, </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> x2, </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> y2)</span></span>
<span class="line"><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">_pt1</span><span style="color:#ABB2BF;">(x1, y1)</span></span>
<span class="line"><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">_pt2</span><span style="color:#ABB2BF;">(x2, y2)</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Line</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">LineImpl</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">printLineImpl</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">_pt1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">print</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot; ---&gt; &quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">_pt2</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">print</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl; </span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//外部接口</span></span>
<span class="line"><span style="color:#E5C07B;">Line</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">Line</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> x1, </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> y1, </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> x2, </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> y2)</span></span>
<span class="line"><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">_pimpl</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">LineImpl</span><span style="color:#ABB2BF;">(x1, y1, x2, y2))</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">Line::</span><span style="color:#56B6C2;">~</span><span style="color:#61AFEF;">Line</span><span style="color:#ABB2BF;">() </span></span>
<span class="line"><span style="color:#ABB2BF;">{   </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">delete</span><span style="color:#ABB2BF;"> _pimpl; </span></span>
<span class="line"><span style="color:#ABB2BF;">    _pimpl </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> nullpter;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Line</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">printLine</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">_pimpl</span><span style="color:#ABB2BF;">-&gt;</span><span style="color:#61AFEF;">printLineImpl</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function v(A,m){const l=o("font");return c(),i("div",null,[r,n("p",null,[s("PIMPL（Private Implementation 或Pointer to Implementation）是通过一个"),a(l,{color:"green"},{default:p(()=>[s("私有的成员指针")]),_:1}),s("，将指针所指向的类的内部"),a(l,{color:"red"},{default:p(()=>[s("实现数据进行隐藏")]),_:1}),s("。PIMPL又称作“"),y,s("”，它的实现中就用到了"),d,s("。PIMPL设计模式有如下优点：")]),F])}const b=e(t,[["render",v],["__file","Pimpl.html.vue"]]);export{b as default};
