const s=JSON.parse('{"key":"v-13ade0aa","path":"/algo/02%20%E9%93%BE%E8%A1%A8/Leetcode142.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8II(%E6%9F%A5%E6%89%BE%E7%8E%AF%E7%9A%84%E5%85%A5%E5%8F%A3%E5%9C%B0%E5%9D%80).html","title":"Leetcode 142. 环形链表 II (查找环的入口地址)","lang":"zh-CN","frontmatter":{"title":"Leetcode 142. 环形链表 II (查找环的入口地址)","icon":"code","order":10,"category":["数据结构与算法"],"tag":["链表","双指针"],"description":"Leetcode 142. 环形链表 II (查找环的入口地址) **题目描述：**给定一个链表的头节点 head ，返回链表开始入环的第一个节点。 如果链表无环，则返回 null。 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public: ListNode *detectCycle(ListNode *head) { ListNode* fast = head; \\t ListNode* slow = head; // 快指针到尾部时停止 \\t while(fast &amp;&amp; fast-&gt;next) { // 慢指针走一步，快指针走两步 \\t\\t fast = fast-&gt;next-&gt;next; \\t\\t slow = slow-&gt;next; // 快慢指针相遇，说明含有环 if(fast == slow) { \\t\\t\\t slow = head; while(fast != slow) { fast = fast-&gt;next; slow = slow-&gt;next; } return slow; \\t\\t } \\t } \\t // 不包含环 \\t return nullptr; } };","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/algo/02%20%E9%93%BE%E8%A1%A8/Leetcode142.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8II(%E6%9F%A5%E6%89%BE%E7%8E%AF%E7%9A%84%E5%85%A5%E5%8F%A3%E5%9C%B0%E5%9D%80).html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"Leetcode 142. 环形链表 II (查找环的入口地址)"}],["meta",{"property":"og:description","content":"Leetcode 142. 环形链表 II (查找环的入口地址) **题目描述：**给定一个链表的头节点 head ，返回链表开始入环的第一个节点。 如果链表无环，则返回 null。 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public: ListNode *detectCycle(ListNode *head) { ListNode* fast = head; \\t ListNode* slow = head; // 快指针到尾部时停止 \\t while(fast &amp;&amp; fast-&gt;next) { // 慢指针走一步，快指针走两步 \\t\\t fast = fast-&gt;next-&gt;next; \\t\\t slow = slow-&gt;next; // 快慢指针相遇，说明含有环 if(fast == slow) { \\t\\t\\t slow = head; while(fast != slow) { fast = fast-&gt;next; slow = slow-&gt;next; } return slow; \\t\\t } \\t } \\t // 不包含环 \\t return nullptr; } };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"链表"}],["meta",{"property":"article:tag","content":"双指针"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Leetcode 142. 环形链表 II (查找环的入口地址)\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":0.8,"words":241},"filePathRelative":"algo/02 链表/Leetcode142.环形链表II(查找环的入口地址).md","excerpt":"<p><a href=\\"https://leetcode.cn/problems/linked-list-cycle-ii/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Leetcode 142. 环形链表 II (查找环的入口地址)</a></p>\\n<p>**题目描述：**给定一个链表的头节点  <code>head</code> ，返回链表开始入环的第一个节点。 <em>如果链表无环，则返回 <code>null</code>。</em></p>\\n<!--more-->\\n<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">/**</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\"> * Definition for singly-linked list.</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\"> * struct ListNode {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\"> *     int val;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\"> *     ListNode *next;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\"> *     ListNode(int x) : val(x), next(NULL) {}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\"> * };</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\"> */</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">class</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">Solution</span><span style=\\"color: #ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">public:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #E5C07B\\">ListNode</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">*</span><span style=\\"color: #61AFEF\\">detectCycle</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">ListNode</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">*</span><span style=\\"color: #E06C75; font-style: italic\\">head</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">       ListNode</span><span style=\\"color: #56B6C2\\">*</span><span style=\\"color: #ABB2BF\\"> fast </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> head;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t    ListNode</span><span style=\\"color: #56B6C2\\">*</span><span style=\\"color: #ABB2BF\\"> slow </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> head;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">        // 快指针到尾部时停止</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t    </span><span style=\\"color: #C678DD\\">while</span><span style=\\"color: #ABB2BF\\">(fast </span><span style=\\"color: #56B6C2\\">&amp;&amp;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">fast</span><span style=\\"color: #ABB2BF\\">-&gt;</span><span style=\\"color: #E06C75\\">next</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">        // 慢指针走一步，快指针走两步</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t\\t    fast </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">fast</span><span style=\\"color: #ABB2BF\\">-&gt;</span><span style=\\"color: #E5C07B\\">next</span><span style=\\"color: #ABB2BF\\">-&gt;</span><span style=\\"color: #E06C75\\">next</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t\\t    slow </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">slow</span><span style=\\"color: #ABB2BF\\">-&gt;</span><span style=\\"color: #E06C75\\">next</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">        // 快慢指针相遇，说明含有环</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\">(fast </span><span style=\\"color: #C678DD\\">==</span><span style=\\"color: #ABB2BF\\">  slow) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t\\t\\t    slow </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> head;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">                </span><span style=\\"color: #C678DD\\">while</span><span style=\\"color: #ABB2BF\\">(fast </span><span style=\\"color: #C678DD\\">!=</span><span style=\\"color: #ABB2BF\\"> slow) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">                    fast </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">fast</span><span style=\\"color: #ABB2BF\\">-&gt;</span><span style=\\"color: #E06C75\\">next</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">                    slow </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">slow</span><span style=\\"color: #ABB2BF\\">-&gt;</span><span style=\\"color: #E06C75\\">next</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">                }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">                </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> slow;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t\\t    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">\\t    // 不包含环</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t    </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">nullptr</span><span style=\\"color: #ABB2BF\\">; </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">};</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{s as data};
