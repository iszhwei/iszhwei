import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as r,c,d as s,e as n,f as e,w as p,a as l}from"./app-9OmaxHRC.js";const t="/assets/image-20240417212212066-LZ1MWt4k.png",B="/assets/image-20240417213740631-VFuUP8Yr.png",d="/assets/image-20240418101351370-oK7SO9yh.png",y="/assets/image-20240418101735582-k0--eTbP.png",u="/assets/image-20240418102355225-VOFJz5HA.png",A="/assets/image-20240418103240384-5yzw9Lw2.png",m={},F=l(`<h1 id="索引的使用和分析" tabindex="-1"><a class="header-anchor" href="#索引的使用和分析" aria-hidden="true">#</a> 索引的使用和分析</h1><h2 id="索引的创建和删除" tabindex="-1"><a class="header-anchor" href="#索引的创建和删除" aria-hidden="true">#</a> 索引的创建和删除</h2><p>创建表的时候指定索引字段，会自动给 primary key 和 unique 创建索引。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">TABLE</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">index1</span><span style="color:#ABB2BF;">(id </span><span style="color:#C678DD;">INT</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">VARCHAR</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">        sex ENUM(</span><span style="color:#98C379;">&#39;male&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;female&#39;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">INDEX</span><span style="color:#ABB2BF;"> (id)); #普通索引，单列索引</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">TABLE</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">index1</span><span style="color:#ABB2BF;">(id </span><span style="color:#C678DD;">INT</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">VARCHAR</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">        sex ENUM(</span><span style="color:#98C379;">&#39;male&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;female&#39;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">INDEX</span><span style="color:#ABB2BF;">(id, </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">));#普通索引，多列索引</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">TABLE</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">index1</span><span style="color:#ABB2BF;">(id </span><span style="color:#C678DD;">INT</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">VARCHAR</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">        sex ENUM(</span><span style="color:#98C379;">&#39;male&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;female&#39;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">INDEX</span><span style="color:#ABB2BF;">(id, </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">INDEX</span><span style="color:#ABB2BF;">(sex));#创建多个索引</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">TABLE</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">index1</span><span style="color:#ABB2BF;">(id </span><span style="color:#C678DD;">INT</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">VARCHAR</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">        sex ENUM(</span><span style="color:#98C379;">&#39;male&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;female&#39;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">INDEX</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;index_name&#39;</span><span style="color:#ABB2BF;"> (id)); #还可以自定义一个索引名</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查看默认的索引名-<code>show create table 表名</code></li></ul><p>在已经创建的表上添加索引：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">[UNIQUE]</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">INDEX</span><span style="color:#ABB2BF;"> 索引名 </span><span style="color:#C678DD;">ON</span><span style="color:#ABB2BF;"> 表名（属性名（</span><span style="color:#C678DD;">length</span><span style="color:#ABB2BF;">） </span><span style="color:#E06C75;">[ASC | DESC]</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>常针对<u>字符串类型</u>的数据的索引优化，<strong><code>lenght</code>指定前多少个字符建立索引</strong>，只要能区分开就行</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">create</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">index</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">nameidx</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">on</span><span style="color:#ABB2BF;"> student(</span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除索引:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">DROP</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">INDEX</span><span style="color:#ABB2BF;"> 索引名 </span><span style="color:#C678DD;">ON</span><span style="color:#ABB2BF;"> 表名;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="索引的优化" tabindex="-1"><a class="header-anchor" href="#索引的优化" aria-hidden="true">#</a> 索引的优化</h2><blockquote><p>面试回答问题，结合实践，不要背课文1... 2... 3...</p></blockquote><ol><li><p>经常作为where条件过滤的字段考虑添加索引</p></li><li><p>字符串列创建索引时，尽量规定索引的长度，而不能让索引值的长度key_len过长</p></li><li><p>索引字段涉及类型强转、mysql函数调用、表达式计算等，索引就用不上了</p></li></ol><h2 id="mysql端口号的查看" tabindex="-1"><a class="header-anchor" href="#mysql端口号的查看" aria-hidden="true">#</a> MySQL端口号的查看</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#查看MySQL的端口号</span></span>
<span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">netstat</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-tanp</span><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">grep</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">mysqld</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+t+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="索引的执行过程" tabindex="-1"><a class="header-anchor" href="#索引的执行过程" aria-hidden="true">#</a> 索引的执行过程</h2><figure><img src="'+B+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',19),D=s("ul",null,[s("li",null,"使用索引会读取索引文件-花费磁盘IO，如果数据取不完还要去数据表去取数据"),s("li",null,[n("即，"),s("strong",null,"先进行比较，如果使用索引得到的数据量和扫表得到的数据量接近，就不会使用索引，因为使用索引的步骤比较繁琐")])],-1),g=l('<figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><strong>索引的好处是，无论数据的位置在哪里，都是常量级的时间</strong></li></ul><figure><img src="'+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><strong>第二次速度快是因为有数据缓存和索引缓冲</strong></li><li>即使有缓存，对于2000000的数据查询时间仍然很长，可以加索引</li></ul><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+A+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',6),v=s("code",null,"where password=1000000",-1),b=s("strong",null,"类型转换",-1),h=l('<h3 id="explain结果字段分析" tabindex="-1"><a class="header-anchor" href="#explain结果字段分析" aria-hidden="true">#</a> explain结果字段分析</h3><ul><li><p>select_type</p><ul><li>simple：表示<u>不需要union操作或者不包含子查询</u>的简单select语句。有连接查询时，外层的查询为simple且只有一个。</li><li>primary：一个<u>需要union操作或者含有子查询的select</u>，位于最外层的单位查询的select_type即为primary且只有一个。</li><li>union：union连接的两个select查询，除了第一个表外，第二个以后的表的select_type都是 union。</li><li>union result：包含union的结果集，在union和union all语句中，因为它不需要参与查询，所以id字段为null。</li></ul></li><li><p>table</p><ul><li><p>显示查询的表名；</p></li><li><p>如果不涉及对数据库操作，这里显示null；</p></li><li><p>如果显示为尖括号就表示这是个临时表，后边的N就是执行计划中的id，表示结果来自于这个查询产生的；</p></li><li><p>如果是尖括号括起来&lt;union M,N&gt;也是一个临时表，表示这个结果来自于union查询的id为M，N的结果集；</p></li></ul></li><li><p>type</p><ul><li><p>const：使用唯一索引或者主键，返回记录一定是1行记录的等值where条件时，通常type就是const。</p></li><li><p>ref：常见于辅助索引的等值查找，或者多列主键、唯一索引中，使用第一个列之外的列作为等值查找会出现；返回数据不唯一的等值查找也会出现。</p></li><li><p>range：索引范围扫描，常见于使用&lt;、&gt;、is null、between、in、like等运算符的查询中。</p></li><li><p>index：索引全表扫描，把索引从头到尾扫一遍；常见于使用索引列就可以处理不需要读取数据文件的查询，可以使用索引排序或者分组的查询。</p></li><li><p>all：全表扫描数据文件，然后在server层进行过滤返回符合要求的记录。</p></li></ul></li><li><p>ref</p><ul><li><p>如果使用常数等值查询，这里显示const；</p></li><li><p>如果是连接查询，被驱动表的执行计划这里会显示驱动表的关联字段；</p></li></ul></li><li><p>Extra</p><ul><li>using ﬁlesort：排序时无法用到索引，常见于order by和group by语句中。</li><li>using index：查询时不需要回表查询，直接通过索引就可以获取查询的数据。</li></ul></li></ul>',2);function C(_,f){const a=i("font");return r(),c("div",null,[F,s("ul",null,[s("li",null,[n("需要注意的是，"),e(a,{color:"red"},{default:p(()=>[n("不一定")]),_:1}),n("给该字段加了索引并且以该字段作为过滤条件就能用到该索引，因为mysql server有自己的优化，如果使用索引最后得到的数据占总数据的70-81%左右，便不会使用索引 "),D])]),g,s("ul",null,[s("li",null,[n("由于password设置的是字符串类型，而我们输入"),v,n("中password是整型，会涉及到"),b,s("ul",null,[s("li",null,[e(a,{color:"red"},{default:p(()=>[n("作为过滤条件的字段，如果涉及到**类型强转**、**mysql的函数**、**表达式计算**等，此时就不会用到索引")]),_:1})])])])]),h])}const N=o(m,[["render",C],["__file","索引的使用和分析.html.vue"]]);export{N as default};
