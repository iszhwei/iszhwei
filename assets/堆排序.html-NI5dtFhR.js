const s=JSON.parse('{"key":"v-00fc7494","path":"/algo/04%20%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E5%A0%86%E6%8E%92%E5%BA%8F.html","title":"🍖堆排序","lang":"zh-CN","frontmatter":{"title":"🍖堆排序","order":7,"category":["数据结构与算法"],"tag":["排序算法"],"description":"堆排序 堆排序 = 建堆 +排序（交换） //heapSort.h #ifndef _HEAP_SORT_H_ #define _HEAP_SORT_H_ #include &lt;vector&gt; #include &lt;iostream&gt; using std::cout; using std::endl; using std::vector; using std::swap; void heapify(vector&lt;int&gt;&amp;nums, size_t N, size_t parent); //大顶堆,下沉 void heapSort(vector&lt;int&gt;&amp; nums); #endif //_HEAP_SORT_H_","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/algo/04%20%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E5%A0%86%E6%8E%92%E5%BA%8F.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"🍖堆排序"}],["meta",{"property":"og:description","content":"堆排序 堆排序 = 建堆 +排序（交换） //heapSort.h #ifndef _HEAP_SORT_H_ #define _HEAP_SORT_H_ #include &lt;vector&gt; #include &lt;iostream&gt; using std::cout; using std::endl; using std::vector; using std::swap; void heapify(vector&lt;int&gt;&amp;nums, size_t N, size_t parent); //大顶堆,下沉 void heapSort(vector&lt;int&gt;&amp; nums); #endif //_HEAP_SORT_H_"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"排序算法"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"🍖堆排序\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"性能","slug":"性能","link":"#性能","children":[]},{"level":2,"title":"为何堆排序是不稳定排序?","slug":"为何堆排序是不稳定排序","link":"#为何堆排序是不稳定排序","children":[]}],"git":{},"readingTime":{"minutes":1.23,"words":370},"filePathRelative":"algo/04 排序算法/堆排序.md","excerpt":"<h1> 堆排序</h1>\\n<p><strong>堆排序 = 建堆 +排序（交换）</strong></p>\\n<!--more-->\\n<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">//heapSort.h</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#ifndef</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">_HEAP_SORT_H_</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#define</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">_HEAP_SORT_H_</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;vector&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;iostream&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::cout;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::vector;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::swap;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">heapify</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">vector</span><span style=\\"color: #ABB2BF\\">&lt;</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\">&gt;</span><span style=\\"color: #C678DD\\">&amp;</span><span style=\\"color: #E06C75; font-style: italic\\">nums</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #C678DD\\">size_t</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">N</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #C678DD\\">size_t</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">parent</span><span style=\\"color: #ABB2BF\\">);</span><span style=\\"color: #7F848E; font-style: italic\\"> //大顶堆,下沉</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">heapSort</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">vector</span><span style=\\"color: #ABB2BF\\">&lt;</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\">&gt;</span><span style=\\"color: #C678DD\\">&amp;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">nums</span><span style=\\"color: #ABB2BF\\">);</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#endif</span><span style=\\"color: #7F848E; font-style: italic\\"> //_HEAP_SORT_H_</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{s as data};
