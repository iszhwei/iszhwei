const e=JSON.parse('{"key":"v-f0f10ec2","path":"/ccpp/05%20%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/%E5%A4%8D%E6%95%B0%E7%B1%BBCComplex.html","title":"复数类CComplex","lang":"zh-CN","frontmatter":{"title":"复数类CComplex","icon":"file","order":1,"headerDepth":4,"category":["c/c++"],"tag":["运算符重载"],"description":"复数类CComplex 运算符重载：运算符不仅能实现原有的功能，而且能实现在函数中指定的新的功能。本质还是函数重载或函数多态 //格式 函数类型 operator 运算符名称(形参表) { \\t对运算符的重载处理 }","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/ccpp/05%20%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/%E5%A4%8D%E6%95%B0%E7%B1%BBCComplex.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"复数类CComplex"}],["meta",{"property":"og:description","content":"复数类CComplex 运算符重载：运算符不仅能实现原有的功能，而且能实现在函数中指定的新的功能。本质还是函数重载或函数多态 //格式 函数类型 operator 运算符名称(形参表) { \\t对运算符的重载处理 }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"运算符重载"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"复数类CComplex\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"运算符重载的规则","slug":"运算符重载的规则","link":"#运算符重载的规则","children":[{"level":3,"title":"测试sizeof是运算符","slug":"测试sizeof是运算符","link":"#测试sizeof是运算符","children":[]}]},{"level":2,"title":"究竟把运算符重载作为类的成员函数好，还是友元函数好？","slug":"究竟把运算符重载作为类的成员函数好-还是友元函数好","link":"#究竟把运算符重载作为类的成员函数好-还是友元函数好","children":[]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]}],"git":{},"readingTime":{"minutes":2.91,"words":872},"filePathRelative":"ccpp/05 运算符重载/复数类CComplex.md","excerpt":"<h1> 复数类CComplex</h1>\\n<p>运算符重载：运算符<u>不仅能实现原有的功能，而且能实现在函数中指定的新的功能</u>。本质还是<strong>函数重载</strong>或<strong>函数多态</strong></p>\\n<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">//格式</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">函数类型 operator 运算符名称(形参表) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t对运算符的重载处理</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
