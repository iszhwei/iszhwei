const s=JSON.parse('{"key":"v-f0bb9d16","path":"/algo/04%20%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/STL%20sort()%E8%AF%A6%E8%A7%A3.html","title":"STL sort()详解","lang":"zh-CN","frontmatter":{"title":"STL sort()详解","icon":"file","order":11,"headerDepth":4,"category":["数据结构与算法"],"tag":["排序算法","STL"],"description":"函数原型（stl_algo.h） template &lt;class RandomAccessIterator&gt; inline void sort(RandomAccessIterator first, RandomAccessIterator last) { if (first != last) { __introsort_loop(first, last, value_type(first), __lg(last - first) * 2); __final_insertion_sort(first, last); } } template &lt;class RandomAccessIterator, class Compare&gt; inline void sort(RandomAccessIterator first, RandomAccessIterator last, Compare comp) { if (first != last) { __introsort_loop(first, last, value_type(first), __lg(last - first) * 2, comp); __final_insertion_sort(first, last, comp); } }","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/algo/04%20%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/STL%20sort()%E8%AF%A6%E8%A7%A3.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"STL sort()详解"}],["meta",{"property":"og:description","content":"函数原型（stl_algo.h） template &lt;class RandomAccessIterator&gt; inline void sort(RandomAccessIterator first, RandomAccessIterator last) { if (first != last) { __introsort_loop(first, last, value_type(first), __lg(last - first) * 2); __final_insertion_sort(first, last); } } template &lt;class RandomAccessIterator, class Compare&gt; inline void sort(RandomAccessIterator first, RandomAccessIterator last, Compare comp) { if (first != last) { __introsort_loop(first, last, value_type(first), __lg(last - first) * 2, comp); __final_insertion_sort(first, last, comp); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"排序算法"}],["meta",{"property":"article:tag","content":"STL"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"STL sort()详解\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"函数原型（stl_algo.h）","slug":"函数原型-stl-algo-h","link":"#函数原型-stl-algo-h","children":[]},{"level":2,"title":"策略","slug":"策略","link":"#策略","children":[]}],"git":{},"readingTime":{"minutes":1.34,"words":403},"filePathRelative":"algo/04 排序算法/STL sort()详解.md","excerpt":"<h2> 函数原型（stl_algo.h）</h2>\\n<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #C678DD\\">template</span><span style=\\"color: #ABB2BF\\"> &lt;</span><span style=\\"color: #C678DD\\">class</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">RandomAccessIterator</span><span style=\\"color: #ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">inline</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">sort</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">RandomAccessIterator</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">first</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #E5C07B\\">RandomAccessIterator</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">last</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">  </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\"> (first </span><span style=\\"color: #C678DD\\">!=</span><span style=\\"color: #ABB2BF\\"> last) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #61AFEF\\">__introsort_loop</span><span style=\\"color: #ABB2BF\\">(first, last, </span><span style=\\"color: #61AFEF\\">value_type</span><span style=\\"color: #ABB2BF\\">(first), </span><span style=\\"color: #61AFEF\\">__lg</span><span style=\\"color: #ABB2BF\\">(last </span><span style=\\"color: #56B6C2\\">-</span><span style=\\"color: #ABB2BF\\"> first) </span><span style=\\"color: #56B6C2\\">*</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">2</span><span style=\\"color: #ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #61AFEF\\">__final_insertion_sort</span><span style=\\"color: #ABB2BF\\">(first, last);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">template</span><span style=\\"color: #ABB2BF\\"> &lt;</span><span style=\\"color: #C678DD\\">class</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">RandomAccessIterator</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #C678DD\\">class</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">Compare</span><span style=\\"color: #ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">inline</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">sort</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">RandomAccessIterator</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">first</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #E5C07B\\">RandomAccessIterator</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">last</span><span style=\\"color: #ABB2BF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">                 </span><span style=\\"color: #E5C07B\\">Compare</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">comp</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">  </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\"> (first </span><span style=\\"color: #C678DD\\">!=</span><span style=\\"color: #ABB2BF\\"> last) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #61AFEF\\">__introsort_loop</span><span style=\\"color: #ABB2BF\\">(first, last, </span><span style=\\"color: #61AFEF\\">value_type</span><span style=\\"color: #ABB2BF\\">(first), </span><span style=\\"color: #61AFEF\\">__lg</span><span style=\\"color: #ABB2BF\\">(last </span><span style=\\"color: #56B6C2\\">-</span><span style=\\"color: #ABB2BF\\"> first) </span><span style=\\"color: #56B6C2\\">*</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">2</span><span style=\\"color: #ABB2BF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">                     comp);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #61AFEF\\">__final_insertion_sort</span><span style=\\"color: #ABB2BF\\">(first, last, comp);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{s as data};
