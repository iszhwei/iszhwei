const e=JSON.parse('{"key":"v-11fe42b7","path":"/ccpp/06%20%E7%BB%A7%E6%89%BF/%E6%B4%BE%E7%94%9F%E7%B1%BB%E7%9A%84%E6%9E%84%E9%80%A0%E8%BF%87%E7%A8%8B.html","title":"派生类的构造和销毁过程","lang":"zh-CN","frontmatter":{"title":"派生类的构造和销毁过程","icon":"file","order":3,"headerDepth":4,"category":["c/c++"],"tag":["继承"],"description":"派生类的构造和销毁过程 构造函数和析构函数是不能继承的，为了对数据成员进行初始化，派生类必须。 由于派生类对象通过继承而包含了基类数据成员，因此，创建派生类对象时，系统首先通过派生类的构造函数来调用 而后对。 形式 派生类名(总参数表): 基类构造函数(参数表) { //函数体 };","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/ccpp/06%20%E7%BB%A7%E6%89%BF/%E6%B4%BE%E7%94%9F%E7%B1%BB%E7%9A%84%E6%9E%84%E9%80%A0%E8%BF%87%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"派生类的构造和销毁过程"}],["meta",{"property":"og:description","content":"派生类的构造和销毁过程 构造函数和析构函数是不能继承的，为了对数据成员进行初始化，派生类必须。 由于派生类对象通过继承而包含了基类数据成员，因此，创建派生类对象时，系统首先通过派生类的构造函数来调用 而后对。 形式 派生类名(总参数表): 基类构造函数(参数表) { //函数体 };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"继承"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"派生类的构造和销毁过程\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"形式","slug":"形式","link":"#形式","children":[]},{"level":2,"title":"如何初始化基类的成员变量","slug":"如何初始化基类的成员变量","link":"#如何初始化基类的成员变量","children":[]},{"level":2,"title":"派生类构造调用基类构造","slug":"派生类构造调用基类构造","link":"#派生类构造调用基类构造","children":[{"level":3,"title":"派生类有显式定义构造函数，而基类没有显示定义构造函数","slug":"派生类有显式定义构造函数-而基类没有显示定义构造函数","link":"#派生类有显式定义构造函数-而基类没有显示定义构造函数","children":[]},{"level":3,"title":"如果派生类没有显式定义构造函数，而基类有显示定义构造函数","slug":"如果派生类没有显式定义构造函数-而基类有显示定义构造函数","link":"#如果派生类没有显式定义构造函数-而基类有显示定义构造函数","children":[]},{"level":3,"title":"派生类有构造函数，基类有默认构造函数","slug":"派生类有构造函数-基类有默认构造函数","link":"#派生类有构造函数-基类有默认构造函数","children":[]},{"level":3,"title":"派生类和基类都有构造函数，但基类没有默认的无参构造函数","slug":"派生类和基类都有构造函数-但基类没有默认的无参构造函数","link":"#派生类和基类都有构造函数-但基类没有默认的无参构造函数","children":[]},{"level":3,"title":"结论","slug":"结论","link":"#结论","children":[]}]},{"level":2,"title":"派生类构造函数调用顺序","slug":"派生类构造函数调用顺序","link":"#派生类构造函数调用顺序","children":[]},{"level":2,"title":"派生类对象的销毁","slug":"派生类对象的销毁","link":"#派生类对象的销毁","children":[]}],"git":{},"readingTime":{"minutes":4.91,"words":1472},"filePathRelative":"ccpp/06 继承/派生类的构造过程.md","excerpt":"<h1> 派生类的构造和销毁过程</h1>\\n<ol>\\n<li><strong>构造函数和析构函数是不能继承的</strong>，为了对数据成员进行初始化，<strong>派生类必须。</strong></li>\\n<li>由于派生类对象通过<u>继承而包含了基类数据成员</u>，因此，<strong>创建派生类对象时，系统首先通过派生类的构造函数来调用</strong></li>\\n<li>而<strong>后对</strong>。</li>\\n</ol>\\n<h2> 形式</h2>\\n<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #ABB2BF\\">派生类名(总参数表): 基类构造函数(参数表)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">    //函数体</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">};</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
