const s=JSON.parse('{"key":"v-68c3f3ca","path":"/ccpp/07%20%E5%A4%9A%E6%80%81/%E8%99%9A%E5%87%BD%E6%95%B0%E7%9A%84%E8%AE%BF%E9%97%AE.html","title":"虚函数的访问","lang":"zh-CN","frontmatter":{"title":"虚函数的访问","icon":"file","order":3,"headerDepth":4,"category":["c/c++"],"tag":["多态"],"description":"虚函数的访问 class Base { public: \\tBase(int data = 0):ma(data){} \\tvirtual void show() \\t{ \\t\\tcout &lt;&lt; \\"Base::show()\\" &lt;&lt; endl; \\t} protected: \\tint ma; }; class Derive : public Base { public: \\tDerive(int data = 0):Base(data), mb(data){} \\tvoid show() \\t{ \\t\\tcout &lt;&lt; \\"Derive::show()\\" &lt;&lt; endl; \\t} private: \\tint mb; };","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/ccpp/07%20%E5%A4%9A%E6%80%81/%E8%99%9A%E5%87%BD%E6%95%B0%E7%9A%84%E8%AE%BF%E9%97%AE.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"虚函数的访问"}],["meta",{"property":"og:description","content":"虚函数的访问 class Base { public: \\tBase(int data = 0):ma(data){} \\tvirtual void show() \\t{ \\t\\tcout &lt;&lt; \\"Base::show()\\" &lt;&lt; endl; \\t} protected: \\tint ma; }; class Derive : public Base { public: \\tDerive(int data = 0):Base(data), mb(data){} \\tvoid show() \\t{ \\t\\tcout &lt;&lt; \\"Derive::show()\\" &lt;&lt; endl; \\t} private: \\tint mb; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"多态"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"虚函数的访问\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"指针访问","slug":"指针访问","link":"#指针访问","children":[{"level":3,"title":"向下强转（不安全）","slug":"向下强转-不安全","link":"#向下强转-不安全","children":[]}]},{"level":2,"title":"引用访问","slug":"引用访问","link":"#引用访问","children":[]},{"level":2,"title":"对象访问","slug":"对象访问","link":"#对象访问","children":[]},{"level":2,"title":"成员函数中访问","slug":"成员函数中访问","link":"#成员函数中访问","children":[]},{"level":2,"title":"构造函数和析构函数中访问","slug":"构造函数和析构函数中访问","link":"#构造函数和析构函数中访问","children":[]},{"level":2,"title":"注意","slug":"注意","link":"#注意","children":[{"level":3,"title":"虚函数的调用一定就是动态绑定吗？","slug":"虚函数的调用一定就是动态绑定吗","link":"#虚函数的调用一定就是动态绑定吗","children":[]}]}],"git":{},"readingTime":{"minutes":3.71,"words":1113},"filePathRelative":"ccpp/07 多态/虚函数的访问.md","excerpt":"<h1> 虚函数的访问</h1>\\n<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #C678DD\\">class</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">Base</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">public:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t</span><span style=\\"color: #61AFEF\\">Base</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">data</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">0</span><span style=\\"color: #ABB2BF\\">):</span><span style=\\"color: #61AFEF\\">ma</span><span style=\\"color: #ABB2BF\\">(data){}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t</span><span style=\\"color: #C678DD\\">virtual</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">show</span><span style=\\"color: #ABB2BF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t\\tcout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"Base::show()\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">protected:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> ma;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">};</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">class</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">Derive</span><span style=\\"color: #ABB2BF\\"> : </span><span style=\\"color: #C678DD\\">public</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">Base</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">public:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t</span><span style=\\"color: #61AFEF\\">Derive</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">data</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">0</span><span style=\\"color: #ABB2BF\\">):</span><span style=\\"color: #61AFEF\\">Base</span><span style=\\"color: #ABB2BF\\">(data), </span><span style=\\"color: #61AFEF\\">mb</span><span style=\\"color: #ABB2BF\\">(data){}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t</span><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">show</span><span style=\\"color: #ABB2BF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t\\tcout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"Derive::show()\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">private:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> mb;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">};</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{s as data};
