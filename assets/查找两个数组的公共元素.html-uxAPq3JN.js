const s=JSON.parse(`{"key":"v-98398990","path":"/algo/01%20%E6%95%B0%E7%BB%84/%E6%9F%A5%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E5%85%AC%E5%85%B1%E5%85%83%E7%B4%A0.html","title":"查找两个有序数组的公共部分","lang":"zh-CN","frontmatter":{"title":"查找两个有序数组的公共部分","icon":"file","order":11,"headerDepth":4,"category":["数据结构与算法"],"tag":["数组","双指针","哈希"],"description":"#include &lt;iostream&gt; #include &lt;vector&gt; #include &lt;unordered_set&gt; using std::cout; using std::endl; using std::cin; using std::vector; using std::unordered_set; //查找两个有序数组的公共部分 //不去重版本 vector&lt;int&gt; getIntersection(const vector&lt;int&gt;&amp; nums1, const vector&lt;int&gt;&amp; nums2) { vector&lt;int&gt; result; int p1 = 0; int p2 = 0; while(p1 &lt; nums1.size() || p2 &lt; nums2.size()) { if(nums1[p1] == nums2[p2]) { result.push_back(nums1[p1]); ++p1; ++p2; } else if(nums1[p1] &gt; nums2[p2]) { ++p2; } else { ++p1; } } return result; } void print(const vector&lt;int&gt;&amp; vec) { for(int i : vec) { cout &lt;&lt; i &lt;&lt; ' '; } cout &lt;&lt; endl; } int main() { vector&lt;int&gt; v1 = { 1,2,2,3,4,5,5,5,8,9,11,13 }; vector&lt;int&gt; v2 = { 2,2,2,3,5,6,7,7,8,9,10,12,12,13,13,14 }; print(v1); print(v2); vector&lt;int&gt; ret = getIntersection(v1, v2); print(ret); vector&lt;int&gt; ret2 = getIntersection2(v1, v2); print(ret2); vector&lt;int&gt; ret3 = getIntersection3(v1, v2); print(ret3); }","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/algo/01%20%E6%95%B0%E7%BB%84/%E6%9F%A5%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E5%85%AC%E5%85%B1%E5%85%83%E7%B4%A0.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"查找两个有序数组的公共部分"}],["meta",{"property":"og:description","content":"#include &lt;iostream&gt; #include &lt;vector&gt; #include &lt;unordered_set&gt; using std::cout; using std::endl; using std::cin; using std::vector; using std::unordered_set; //查找两个有序数组的公共部分 //不去重版本 vector&lt;int&gt; getIntersection(const vector&lt;int&gt;&amp; nums1, const vector&lt;int&gt;&amp; nums2) { vector&lt;int&gt; result; int p1 = 0; int p2 = 0; while(p1 &lt; nums1.size() || p2 &lt; nums2.size()) { if(nums1[p1] == nums2[p2]) { result.push_back(nums1[p1]); ++p1; ++p2; } else if(nums1[p1] &gt; nums2[p2]) { ++p2; } else { ++p1; } } return result; } void print(const vector&lt;int&gt;&amp; vec) { for(int i : vec) { cout &lt;&lt; i &lt;&lt; ' '; } cout &lt;&lt; endl; } int main() { vector&lt;int&gt; v1 = { 1,2,2,3,4,5,5,5,8,9,11,13 }; vector&lt;int&gt; v2 = { 2,2,2,3,5,6,7,7,8,9,10,12,12,13,13,14 }; print(v1); print(v2); vector&lt;int&gt; ret = getIntersection(v1, v2); print(ret); vector&lt;int&gt; ret2 = getIntersection2(v1, v2); print(ret2); vector&lt;int&gt; ret3 = getIntersection3(v1, v2); print(ret3); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"数组"}],["meta",{"property":"article:tag","content":"双指针"}],["meta",{"property":"article:tag","content":"哈希"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"查找两个有序数组的公共部分\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":1.47,"words":442},"filePathRelative":"algo/01 数组/查找两个数组的公共元素.md","excerpt":"<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;iostream&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;vector&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;unordered_set&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::cout;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::cin;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::vector;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::unordered_set;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\"> //查找两个有序数组的公共部分</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\"> //不去重版本</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">vector</span><span style=\\"color: #ABB2BF\\">&lt;</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\">&gt; </span><span style=\\"color: #61AFEF\\">getIntersection</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">const</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">vector</span><span style=\\"color: #ABB2BF\\">&lt;</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\">&gt;</span><span style=\\"color: #C678DD\\">&amp;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">nums1</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #C678DD\\">const</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">vector</span><span style=\\"color: #ABB2BF\\">&lt;</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\">&gt;</span><span style=\\"color: #C678DD\\">&amp;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">nums2</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     vector</span><span style=\\"color: #C678DD\\">&lt;int&gt;</span><span style=\\"color: #ABB2BF\\"> result;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> p1 </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">0</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> p2 </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">0</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     </span><span style=\\"color: #C678DD\\">while</span><span style=\\"color: #ABB2BF\\">(p1 </span><span style=\\"color: #C678DD\\">&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">nums1</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">size</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #56B6C2\\">||</span><span style=\\"color: #ABB2BF\\"> p2 </span><span style=\\"color: #C678DD\\">&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">nums2</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">size</span><span style=\\"color: #ABB2BF\\">()) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">         </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">nums1</span><span style=\\"color: #ABB2BF\\">[p1] </span><span style=\\"color: #C678DD\\">==</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">nums2</span><span style=\\"color: #ABB2BF\\">[p2]) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">             </span><span style=\\"color: #E5C07B\\">result</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">push_back</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">nums1</span><span style=\\"color: #ABB2BF\\">[p1]);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">             </span><span style=\\"color: #C678DD\\">++</span><span style=\\"color: #ABB2BF\\">p1;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">             </span><span style=\\"color: #C678DD\\">++</span><span style=\\"color: #ABB2BF\\">p2;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">         }   </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">         </span><span style=\\"color: #C678DD\\">else</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">nums1</span><span style=\\"color: #ABB2BF\\">[p1] </span><span style=\\"color: #C678DD\\">&gt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">nums2</span><span style=\\"color: #ABB2BF\\">[p2]) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">             </span><span style=\\"color: #C678DD\\">++</span><span style=\\"color: #ABB2BF\\">p2;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">         }   </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">         </span><span style=\\"color: #C678DD\\">else</span><span style=\\"color: #ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">             </span><span style=\\"color: #C678DD\\">++</span><span style=\\"color: #ABB2BF\\">p1;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">         }   </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     }   </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> result;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">print</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">const</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">vector</span><span style=\\"color: #ABB2BF\\">&lt;</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\">&gt;</span><span style=\\"color: #C678DD\\">&amp;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">vec</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     </span><span style=\\"color: #C678DD\\">for</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> i : vec) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">         cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> i </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">' '</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">main</span><span style=\\"color: #ABB2BF\\">() {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     vector</span><span style=\\"color: #C678DD\\">&lt;int&gt;</span><span style=\\"color: #ABB2BF\\"> v1 </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> { </span><span style=\\"color: #D19A66\\">1</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">2</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">2</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">3</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">4</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">5</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">5</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">5</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">8</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">9</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">11</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">13</span><span style=\\"color: #ABB2BF\\"> };</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     vector</span><span style=\\"color: #C678DD\\">&lt;int&gt;</span><span style=\\"color: #ABB2BF\\"> v2 </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> { </span><span style=\\"color: #D19A66\\">2</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">2</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">2</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">3</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">5</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">6</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">7</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">7</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">8</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">9</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">10</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">12</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">12</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">13</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">13</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #D19A66\\">14</span><span style=\\"color: #ABB2BF\\"> };</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     </span><span style=\\"color: #61AFEF\\">print</span><span style=\\"color: #ABB2BF\\">(v1);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     </span><span style=\\"color: #61AFEF\\">print</span><span style=\\"color: #ABB2BF\\">(v2);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     vector</span><span style=\\"color: #C678DD\\">&lt;int&gt;</span><span style=\\"color: #ABB2BF\\"> ret </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">getIntersection</span><span style=\\"color: #ABB2BF\\">(v1, v2);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     </span><span style=\\"color: #61AFEF\\">print</span><span style=\\"color: #ABB2BF\\">(ret);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     vector</span><span style=\\"color: #C678DD\\">&lt;int&gt;</span><span style=\\"color: #ABB2BF\\"> ret2 </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">getIntersection2</span><span style=\\"color: #ABB2BF\\">(v1, v2);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     </span><span style=\\"color: #61AFEF\\">print</span><span style=\\"color: #ABB2BF\\">(ret2);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     vector</span><span style=\\"color: #C678DD\\">&lt;int&gt;</span><span style=\\"color: #ABB2BF\\"> ret3 </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">getIntersection3</span><span style=\\"color: #ABB2BF\\">(v1, v2);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     </span><span style=\\"color: #61AFEF\\">print</span><span style=\\"color: #ABB2BF\\">(ret3);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> }   </span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{s as data};
