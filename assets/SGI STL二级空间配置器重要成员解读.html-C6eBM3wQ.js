const e=JSON.parse('{"key":"v-30a2e42b","path":"/ccpp/19%20SGI%20STL%E4%BA%8C%E7%BA%A7%E7%A9%BA%E9%97%B4%E9%85%8D%E7%BD%AE%E5%99%A8%E5%86%85%E5%AD%98%E6%B1%A0%E6%BA%90%E7%A0%81/SGI%20STL%E4%BA%8C%E7%BA%A7%E7%A9%BA%E9%97%B4%E9%85%8D%E7%BD%AE%E5%99%A8%E9%87%8D%E8%A6%81%E6%88%90%E5%91%98%E8%A7%A3%E8%AF%BB.html","title":"SGI STL二级空间配置器重要成员解读","lang":"zh-CN","frontmatter":{"title":"SGI STL二级空间配置器重要成员解读","icon":"file","order":2,"headerDepth":4,"category":["c/c++"],"tag":["SGI STL源码"],"description":"SGI STL二级空间配置器重要成员解读 为了。所以对于进行管理。 SGI STL提供了一级空间配置器和二级空间配置器，而SGI STL一级空间配置器也和STL标准模板库的实现是一样的（都是malloc/free） 其中一级空间配置器allocator采用malloc和free来管理内存，和C++标准库中提供的allocator是一样的，如果我们频繁对内存进行申请和释放，每次都使用malloc和free，效率就很低了 但其二级空间配置器allocator采用了基于freelist自由链表原理的 内存池机制 实现内存管理，只管理不大于128字节的小块内存分配","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/ccpp/19%20SGI%20STL%E4%BA%8C%E7%BA%A7%E7%A9%BA%E9%97%B4%E9%85%8D%E7%BD%AE%E5%99%A8%E5%86%85%E5%AD%98%E6%B1%A0%E6%BA%90%E7%A0%81/SGI%20STL%E4%BA%8C%E7%BA%A7%E7%A9%BA%E9%97%B4%E9%85%8D%E7%BD%AE%E5%99%A8%E9%87%8D%E8%A6%81%E6%88%90%E5%91%98%E8%A7%A3%E8%AF%BB.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"SGI STL二级空间配置器重要成员解读"}],["meta",{"property":"og:description","content":"SGI STL二级空间配置器重要成员解读 为了。所以对于进行管理。 SGI STL提供了一级空间配置器和二级空间配置器，而SGI STL一级空间配置器也和STL标准模板库的实现是一样的（都是malloc/free） 其中一级空间配置器allocator采用malloc和free来管理内存，和C++标准库中提供的allocator是一样的，如果我们频繁对内存进行申请和释放，每次都使用malloc和free，效率就很低了 但其二级空间配置器allocator采用了基于freelist自由链表原理的 内存池机制 实现内存管理，只管理不大于128字节的小块内存分配"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"SGI STL源码"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SGI STL二级空间配置器重要成员解读\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"一级空间配置器","slug":"一级空间配置器","link":"#一级空间配置器","children":[]},{"level":2,"title":"二级空间配置器","slug":"二级空间配置器","link":"#二级空间配置器","children":[]},{"level":2,"title":"二级空间配置器重要成员解读","slug":"二级空间配置器重要成员解读","link":"#二级空间配置器重要成员解读","children":[]}],"git":{},"readingTime":{"minutes":4.47,"words":1342},"filePathRelative":"ccpp/19 SGI STL二级空间配置器内存池源码/SGI STL二级空间配置器重要成员解读.md","excerpt":"<h1> SGI STL二级空间配置器重要成员解读</h1>\\n<p>为了。所以对于进行管理。</p>\\n<p>SGI STL提供了一级空间配置器和二级空间配置器，而SGI STL一级空间配置器也和STL标准模板库的实现是一样的（都是malloc/free）</p>\\n<p>其中<strong>一级空间配置器allocator采用malloc和free来管理内存</strong>，和C++标准库中提供的allocator是一样的，如果我们频繁对内存进行申请和释放，每次都使用malloc和free，效率就很低了\\n但其<strong>二级空间配置器allocator采用了基于freelist自由链表原理的 内存池机制</strong> 实现内存管理，只管理不大于128字节的小块内存分配</p>","autoDesc":true}');export{e as data};
