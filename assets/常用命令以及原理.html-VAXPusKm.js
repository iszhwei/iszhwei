import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as t,c as o,a as e}from"./app-mYdPlPhZ.js";const g="/assets/f5e4c9f8721c49b3a3c559af7aeebf83-pwXeZ0iX.png",a="/assets/image-20240503032633199-pjCV1NIs.png",n="/assets/1fc3d175406c4109ad69260db4651831-i_h2r3gQ.png",c="/assets/275f3cb6bac44400b5cd8ba007145421-erXzI5Yr.png",s="/assets/d2e0621b78544a2c9c4d0a5e5115ce47-UdQWHwYJ.png",r="/assets/455a1bd7155d482e92ad62700532a850-Yzgo2dkv.png",d="/assets/1674f73d847e463b9b4e8ad681a69983-djIDZCH_.png",l="/assets/image-20240503034053850-XxOmDoPu.png",p="/assets/8ae11d194a9e4b0da75bcfe95316eff8-qqLaMXm9.png",f="/assets/f1b86214b83f4dee8a626d66ef03713f-OECbTrp5.png",u={},m=e('<h1 id="常用命令以及原理" tabindex="-1"><a class="header-anchor" href="#常用命令以及原理" aria-hidden="true">#</a> 常用命令以及原理</h1><p><strong>项目负责人创建新的项目后，项目组成员会clone项目到本地进行开发</strong></p><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>windows客户端先clone代码</strong></p><figure><img src="'+a+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+n+'" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><p><code>git clone</code>之后，</p><ol><li>会把远程仓库的文件<strong>拉取一份到本地仓库</strong>，</li><li>然后给<strong>远程仓库起了个名字，默认就叫origin（名字可在config中改）</strong>，</li><li><u>然后在本地仓库生成默认分支master，与远程的master<strong>分支对应</strong></u></li></ol><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+s+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在本地git工作区添加<code>main.cpp</code></p><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>git add</code>：将<strong>工作区</strong>代码的改动，提交到<strong>暂存区</strong><code>git commit</code>：将暂存区代码的改动，提交到<strong>本地分支</strong><code>git push</code>：将本地仓库代码的改动，提交到<strong>远程仓库</strong></p><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>HEAD指针</strong>：在<u>仓库的每个分支上，<code>git log</code>会记录所有提交的信息，每次<strong>commit提交</strong>都会生成一次记录以及一个<code>commit id</code>，HEAD指针指向的就是当前分支最新的一次修改</u>，我们可以<strong>通过调整HEAD指针指向不同的commit id，来任意切换到不同的版本上</strong></p><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>ubuntu客户端clone代码后，用**<code>git pull</code>同步本地和远程的代码**，然后修改main.cpp，并提交到远程</p><blockquote><p>修改代码前最好先执行git pull 获取最新版本的代码</p></blockquote><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结：</h2><ul><li><code>git clone</code>命令的作用是，可以把指定的<u>远程仓库代码拉取到本地</u></li><li><code>git pull</code> 把<u>远程代码拉取到本地</u></li><li><code>git status</code> 查看当前操作的<u>状态信息</u></li><li><code>git log</code> 查看代码<u>修改日志</u></li><li><code>git add</code> 把git工作区的代码改动<u>添加到暂存区</u></li><li><code>git commit -m “xxx”</code> 把暂存区的代码<u>提交到本地分支</u></li><li><code>git push</code> 把本地分支的代码推送（<u>提交）到远程分支</u>上去</li><li><strong>工作区</strong>：当前<u>存放项目代码的目录</u></li><li><strong>暂存区</strong>：git add把工作区修改的内容添加到暂存区当中</li><li><strong>本地仓库</strong>：git commit把本地暂存区的修改提交到本地代码仓库分支中（<u>不同分支代表不同的代码版本</u>）</li><li><strong>远程仓库</strong>：通过git push把本地仓库的某一个分支上的代码推送到远程仓库的某个分支上</li><li><strong>HEAD指针</strong>：本地仓库每一个分支上的代码修改都会生成一个commit id信息，HEAD指针指向最近一次的commit提交，通过这个commit id可以进行版本回退</li></ul>',22),_=[m];function b(h,x){return t(),o("div",null,_)}const D=i(u,[["render",b],["__file","常用命令以及原理.html.vue"]]);export{D as default};
