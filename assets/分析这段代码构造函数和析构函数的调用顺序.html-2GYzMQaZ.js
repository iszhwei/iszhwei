const s=JSON.parse('{"key":"v-57c1626a","path":"/ccpp/14%20%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%88%86%E6%9E%90%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%92%8C%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%E9%A1%BA%E5%BA%8F.html","title":"分析这段代码构造函数和析构函数的调用顺序","lang":"zh-CN","frontmatter":{"title":"分析这段代码构造函数和析构函数的调用顺序","icon":"file","order":2,"headerDepth":4,"category":["c/c++"],"tag":["c++补充"],"description":"分析这段代码构造函数和析构函数的调用顺序 注意返回临时对象或用临时对象构造对象时，会被编译器优化 别忘了第六步s的析构 因此优化一下： string fun(string&amp; s1, string&amp; s2) { \\treturn s1 + s2; } int main() { \\tstring s = fun(s1, s2); }","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/ccpp/14%20%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%88%86%E6%9E%90%E8%BF%99%E6%AE%B5%E4%BB%A3%E7%A0%81%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%92%8C%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%E9%A1%BA%E5%BA%8F.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"分析这段代码构造函数和析构函数的调用顺序"}],["meta",{"property":"og:description","content":"分析这段代码构造函数和析构函数的调用顺序 注意返回临时对象或用临时对象构造对象时，会被编译器优化 别忘了第六步s的析构 因此优化一下： string fun(string&amp; s1, string&amp; s2) { \\treturn s1 + s2; } int main() { \\tstring s = fun(s1, s2); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"c++补充"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分析这段代码构造函数和析构函数的调用顺序\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"对于对象的优化：","slug":"对于对象的优化","link":"#对于对象的优化","children":[]}],"git":{},"readingTime":{"minutes":0.95,"words":284},"filePathRelative":"ccpp/14 面试题/分析这段代码构造函数和析构函数的调用顺序.md","excerpt":"<h1> 分析这段代码构造函数和析构函数的调用顺序</h1>\\n<figure><figcaption></figcaption></figure>\\n<ul>\\n<li>注意返回临时对象或用临时对象构造对象时，会被编译器优化</li>\\n<li>别忘了第六步s的析构</li>\\n</ul>\\n<p>因此优化一下：</p>\\n<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #E5C07B\\">string</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">fun</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">string</span><span style=\\"color: #C678DD\\">&amp;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">s1</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #E5C07B\\">string</span><span style=\\"color: #C678DD\\">&amp;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">s2</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t</span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> s1 </span><span style=\\"color: #56B6C2\\">+</span><span style=\\"color: #ABB2BF\\"> s2;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">main</span><span style=\\"color: #ABB2BF\\">() {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\tstring s </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">fun</span><span style=\\"color: #ABB2BF\\">(s1, s2);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{s as data};
