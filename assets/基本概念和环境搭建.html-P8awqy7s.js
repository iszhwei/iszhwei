const t=JSON.parse('{"key":"v-971795b6","path":"/others/git%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%A1%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E5%92%8C%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html","title":"基本概念和环境搭建","lang":"zh-CN","frontmatter":{"title":"基本概念和环境搭建","icon":"file","order":1,"headerDepth":4,"category":["git"],"tag":["git"],"description":"基本概念和环境搭建 一、不使用版本控制工具带来的问题 大家在开发项目的过程中，如果直接在本地系统上维护源码目录，经常会碰见下面的问题： 把源代码的目录或文件，写了好久的代码没了！ 按需求添加新功能，写了好多代码，但净是，想回到之前的版本，开始大面积删除或者屏蔽代码，很崩溃，如果此时有个代码版本管理工具，该多好！ 新功能添加完了，编译运行一切很顺利，功能也正常，但有时候运行会出现以前没见过的运行错误，非必现的，想查看和之前代码的差异，看看都在哪些源文件中修改了代码，该怎么办？ 团队开发项目，但是项目成员都不在一起，各自写的代码该如何添加到一块，还能避免错误，不会出现谁把谁的代码给覆盖了？","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/others/git%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E7%AE%A1%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E5%92%8C%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"基本概念和环境搭建"}],["meta",{"property":"og:description","content":"基本概念和环境搭建 一、不使用版本控制工具带来的问题 大家在开发项目的过程中，如果直接在本地系统上维护源码目录，经常会碰见下面的问题： 把源代码的目录或文件，写了好久的代码没了！ 按需求添加新功能，写了好多代码，但净是，想回到之前的版本，开始大面积删除或者屏蔽代码，很崩溃，如果此时有个代码版本管理工具，该多好！ 新功能添加完了，编译运行一切很顺利，功能也正常，但有时候运行会出现以前没见过的运行错误，非必现的，想查看和之前代码的差异，看看都在哪些源文件中修改了代码，该怎么办？ 团队开发项目，但是项目成员都不在一起，各自写的代码该如何添加到一块，还能避免错误，不会出现谁把谁的代码给覆盖了？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"git"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基本概念和环境搭建\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"一、不使用版本控制工具带来的问题","slug":"一、不使用版本控制工具带来的问题","link":"#一、不使用版本控制工具带来的问题","children":[]},{"level":2,"title":"二、git分布式介绍","slug":"二、git分布式介绍","link":"#二、git分布式介绍","children":[{"level":3,"title":"1.SVN集中式版本控制系统","slug":"_1-svn集中式版本控制系统","link":"#_1-svn集中式版本控制系统","children":[]}]},{"level":2,"title":"三、GitHub介绍","slug":"三、github介绍","link":"#三、github介绍","children":[]},{"level":2,"title":"四、windows搭建git环境","slug":"四、windows搭建git环境","link":"#四、windows搭建git环境","children":[]},{"level":2,"title":"五、ubuntu搭建git环境","slug":"五、ubuntu搭建git环境","link":"#五、ubuntu搭建git环境","children":[]}],"git":{},"readingTime":{"minutes":3.82,"words":1146},"filePathRelative":"others/git的分布式管理/基本概念和环境搭建.md","excerpt":"<h1> 基本概念和环境搭建</h1>\\n<h2> 一、不使用版本控制工具带来的问题</h2>\\n<p>大家在开发项目的过程中，如果直接在本地系统上维护源码目录，经常会碰见下面的问题：</p>\\n<ol>\\n<li>\\n把源代码的目录或文件，写了好久的代码没了！</li>\\n<li>按需求添加新功能，写了好多代码，但净是，<strong>想回到之前的版本</strong>，开始大面积删除或者屏蔽代码，很崩溃，如果此时有个代码版本管理工具，该多好！</li>\\n<li>新功能添加完了，编译运行一切很顺利，功能也正常，但有时候运行会出现以前没见过的运行错误，非必现的，<strong>想查看和之前代码的差异</strong>，看看都在哪些源文件中修改了代码，该怎么办？</li>\\n<li>团队开发项目，但是项目成员都不在一起，<strong>各自写的代码该如何添加到一块</strong>，还能避免错误，不会出现谁把谁的代码给覆盖了？</li>\\n</ol>","autoDesc":true}');export{t as data};
