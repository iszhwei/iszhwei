const e=JSON.parse('{"key":"v-6dabb7d0","path":"/network/%E5%BA%8F%E5%88%97%E5%8C%96/Json%E7%AE%80%E4%BB%8B%E5%8F%8A%E4%BD%BF%E7%94%A8.html","title":"Json简介及使用","lang":"zh-CN","frontmatter":{"title":"Json简介及使用","icon":"file","order":1,"headerDepth":4,"category":["network"],"tag":["数据序列化"],"description":"Json简介及使用 一、Json简介 ：是一种轻量级的)，采用完全独立于编程语言的来存储和表示数据。 简洁和清晰的层次结构使得 Json 成为理想的数据交换语言，易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。 例如：聊天软件的业务，消息种类分为很多种，例如：登录消息、注册消息、聊天消息、加好友消息等等，。而网络中TCP传输数据时为字节流，因此我们需要数据序列化将其转为字节流发送到对端主机，对端主机读取字节流上报应用服务，再将数据反序列化出来解析使用。","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/network/%E5%BA%8F%E5%88%97%E5%8C%96/Json%E7%AE%80%E4%BB%8B%E5%8F%8A%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"Json简介及使用"}],["meta",{"property":"og:description","content":"Json简介及使用 一、Json简介 ：是一种轻量级的)，采用完全独立于编程语言的来存储和表示数据。 简洁和清晰的层次结构使得 Json 成为理想的数据交换语言，易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。 例如：聊天软件的业务，消息种类分为很多种，例如：登录消息、注册消息、聊天消息、加好友消息等等，。而网络中TCP传输数据时为字节流，因此我们需要数据序列化将其转为字节流发送到对端主机，对端主机读取字节流上报应用服务，再将数据反序列化出来解析使用。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"数据序列化"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Json简介及使用\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"一、Json简介","slug":"一、json简介","link":"#一、json简介","children":[]},{"level":2,"title":"二、Json语法","slug":"二、json语法","link":"#二、json语法","children":[{"level":3,"title":"2.1 Json语法","slug":"_2-1-json语法","link":"#_2-1-json语法","children":[]},{"level":3,"title":"2.2 Json的两种结构：","slug":"_2-2-json的两种结构","link":"#_2-2-json的两种结构","children":[]},{"level":3,"title":"2.3 书写格式","slug":"_2-3-书写格式","link":"#_2-3-书写格式","children":[]}]},{"level":2,"title":"三、数据序列化实例","slug":"三、数据序列化实例","link":"#三、数据序列化实例","children":[{"level":3,"title":"3.1 普通数据序列化","slug":"_3-1-普通数据序列化","link":"#_3-1-普通数据序列化","children":[]},{"level":3,"title":"3.2 Json添加数组类型","slug":"_3-2-json添加数组类型","link":"#_3-2-json添加数组类型","children":[]},{"level":3,"title":"3.3 容器序列化：","slug":"_3-3-容器序列化","link":"#_3-3-容器序列化","children":[]}]},{"level":2,"title":"四、json::parse()数据反序列化实例","slug":"四、json-parse-数据反序列化实例","link":"#四、json-parse-数据反序列化实例","children":[{"level":3,"title":"4.1 普通数据反序列化","slug":"_4-1-普通数据反序列化","link":"#_4-1-普通数据反序列化","children":[]},{"level":3,"title":"4.2 数组类型数据反序列化：","slug":"_4-2-数组类型数据反序列化","link":"#_4-2-数组类型数据反序列化","children":[]},{"level":3,"title":"容器反序列化","slug":"容器反序列化","link":"#容器反序列化","children":[]}]}],"git":{},"readingTime":{"minutes":5.88,"words":1765},"filePathRelative":"network/序列化/Json简介及使用.md","excerpt":"<h1> Json简介及使用</h1>\\n<h2> 一、Json简介</h2>\\n<p><strong></strong>：<strong>是一种轻量级的)，采用完全<u>独立于编程语言的来存储和表示数据</u>。 简洁和清晰的层次结构使得 Json 成为理想的数据交换语言，易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率</strong>。</p>\\n<p>例如：聊天软件的业务，消息种类分为很多种，例如：登录消息、注册消息、聊天消息、加好友消息等等，<strong></strong>。而<u>网络中TCP传输数据时为字节流，因此我们需要数据序列化将其转为字节流发送到对端主机，对端主机读取字节流上报应用服务，再将数据反序列化出来解析使用</u>。</p>","autoDesc":true}');export{e as data};
