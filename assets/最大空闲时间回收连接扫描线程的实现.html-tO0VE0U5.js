const s=JSON.parse('{"key":"v-874c376e","path":"/mysql/12%20%E8%BF%9E%E6%8E%A5%E6%B1%A0/%E6%9C%80%E5%A4%A7%E7%A9%BA%E9%97%B2%E6%97%B6%E9%97%B4%E5%9B%9E%E6%94%B6%E8%BF%9E%E6%8E%A5%E6%89%AB%E6%8F%8F%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%AE%9E%E7%8E%B0.html","title":"最大空闲时间回收连接扫描线程的实现","lang":"zh-CN","frontmatter":{"title":"最大空闲时间回收连接扫描线程的实现","icon":"file","order":3,"headerDepth":4,"category":["mysql"],"tag":["mysql连接池"],"description":"最大空闲时间回收连接扫描线程的实现 给对象添加一个属性-记录时间 /* * 实现MySQL数据库的操作 */ #ifndef _CONNECTION_H #define _CONNECTION_H #include &lt;string&gt; #include &lt;mysql/mysql.h&gt; #include &lt;ctime&gt; using std::string; class Connection { public: ... \\t// 刷新一下连接的起始的空闲时间点 void refreshAliveTime() { _aliveTime = clock(); } \\t// 返回存活的时间 clock_t getAliveTime() { return clock() - _aliveTime; } private: MYSQL* _conn; //表示和MySQL的一条连接 clock_t _aliveTime; // 记录进入空闲状态后的起始存活时间 }; #endif // _CONNECTION_H","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/mysql/12%20%E8%BF%9E%E6%8E%A5%E6%B1%A0/%E6%9C%80%E5%A4%A7%E7%A9%BA%E9%97%B2%E6%97%B6%E9%97%B4%E5%9B%9E%E6%94%B6%E8%BF%9E%E6%8E%A5%E6%89%AB%E6%8F%8F%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%AE%9E%E7%8E%B0.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"最大空闲时间回收连接扫描线程的实现"}],["meta",{"property":"og:description","content":"最大空闲时间回收连接扫描线程的实现 给对象添加一个属性-记录时间 /* * 实现MySQL数据库的操作 */ #ifndef _CONNECTION_H #define _CONNECTION_H #include &lt;string&gt; #include &lt;mysql/mysql.h&gt; #include &lt;ctime&gt; using std::string; class Connection { public: ... \\t// 刷新一下连接的起始的空闲时间点 void refreshAliveTime() { _aliveTime = clock(); } \\t// 返回存活的时间 clock_t getAliveTime() { return clock() - _aliveTime; } private: MYSQL* _conn; //表示和MySQL的一条连接 clock_t _aliveTime; // 记录进入空闲状态后的起始存活时间 }; #endif // _CONNECTION_H"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"mysql连接池"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"最大空闲时间回收连接扫描线程的实现\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":4.03,"words":1208},"filePathRelative":"mysql/12 连接池/最大空闲时间回收连接扫描线程的实现.md","excerpt":"<h1> 最大空闲时间回收连接扫描线程的实现</h1>\\n<p>给对象添加一个属性-记录时间</p>\\n<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">/*</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\"> * 实现MySQL数据库的操作</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">*/</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#ifndef</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">_CONNECTION_H</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#define</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">_CONNECTION_H</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;string&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;mysql/mysql.h&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;ctime&gt;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::string;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">class</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">Connection</span><span style=\\"color: #ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">public:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    ...</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">\\t// 刷新一下连接的起始的空闲时间点</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">refreshAliveTime</span><span style=\\"color: #ABB2BF\\">() {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        _aliveTime </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">clock</span><span style=\\"color: #ABB2BF\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">\\t// 返回存活的时间</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">clock_t</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">getAliveTime</span><span style=\\"color: #ABB2BF\\">() {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">clock</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #56B6C2\\">-</span><span style=\\"color: #ABB2BF\\"> _aliveTime;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">private:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    MYSQL</span><span style=\\"color: #56B6C2\\">*</span><span style=\\"color: #ABB2BF\\"> _conn;</span><span style=\\"color: #7F848E; font-style: italic\\">    //表示和MySQL的一条连接</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">clock_t</span><span style=\\"color: #ABB2BF\\"> _aliveTime;</span><span style=\\"color: #7F848E; font-style: italic\\"> // 记录进入空闲状态后的起始存活时间</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">};</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#endif</span><span style=\\"color: #7F848E; font-style: italic\\">  // _CONNECTION_H</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{s as data};
