import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as p,c as o,d as s,f as e,w as B,a as c,e as r}from"./app-mYdPlPhZ.js";const t={},i=c(`<h1 id="数组基础" tabindex="-1"><a class="header-anchor" href="#数组基础" aria-hidden="true">#</a> 数组基础</h1><p><strong>特点</strong>：内存是<u>连续</u>的</p><ul><li><p><strong>优点</strong></p><ul><li><u>下标访问（随机访问）</u>时间复杂度是<code>O(1)</code></li><li><u>末尾位置增加/删除</u>元素时间复杂度是<code>O(1)</code></li><li><u>访问</u>元素前后相邻位置的元素非常方便</li></ul></li><li><p><strong>缺点</strong></p><ul><li><p>非末尾位置增加/删除元素需要进行大量的数据移动<code>O(n)</code></p></li><li><p>搜索的时间复杂度</p><ul><li>无序数组-线性搜索<code>O(n)</code></li><li>有序数组-二分搜索<code>O(logn)</code></li></ul></li><li><p>数组扩容消耗比较大</p><ul><li>扩容</li></ul></li></ul></li></ul><h2 id="数组的实现" tabindex="-1"><a class="header-anchor" href="#数组的实现" aria-hidden="true">#</a> 数组的实现</h2><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;iostream&gt;</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;time.h&gt;</span><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">//time()</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;stdlib.h&gt;</span><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">//srand()</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;string.h&gt;</span><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">//memcpy()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::cout;</span></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::endl;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//using std::time;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//using std::srand;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Arrary</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">public:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">Arrary</span><span style="color:#ABB2BF;">():</span><span style="color:#61AFEF;">_size</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">), </span><span style="color:#61AFEF;">_capacity</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">) {</span><span style="color:#7F848E;font-style:italic;">	//默认容量大小为10</span></span>
<span class="line"><span style="color:#ABB2BF;">        _data </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">]();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">~Arrary</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">delete[]</span><span style="color:#ABB2BF;"> _data;</span></span>
<span class="line"><span style="color:#ABB2BF;">        _data </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">nullptr</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">public:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //尾插</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">push_back</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">val</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(_size </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> _capacity) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#61AFEF;">expand</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> _capacity);</span><span style="color:#7F848E;font-style:italic;">	// O(n)</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">_data</span><span style="color:#ABB2BF;">[_size] </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> val;</span><span style="color:#7F848E;font-style:italic;">	//O(1)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //操作完，看一下是否需要修改属性</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">++</span><span style="color:#ABB2BF;">_size;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //尾删</span></span>
<span class="line"><span style="color:#ABB2BF;">     </span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">pop_back</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(_size </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">--</span><span style="color:#ABB2BF;">_size;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //按位置插</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">insert</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">pos</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">val</span><span style="color:#ABB2BF;">) {</span><span style="color:#7F848E;font-style:italic;">	//pos下标</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //注意应先判断下标的有效性</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(pos </span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> pos </span><span style="color:#C678DD;">&gt;</span><span style="color:#ABB2BF;"> _size) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">	// throw &quot;pos invalid!&quot;;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(_size </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> _capacity) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#61AFEF;">expand</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;">_capacity);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 移动元素  O(n)</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> _size </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">; i </span><span style="color:#C678DD;">&gt;=</span><span style="color:#ABB2BF;"> pos; </span><span style="color:#C678DD;">--</span><span style="color:#ABB2BF;">i) {</span><span style="color:#7F848E;font-style:italic;">	//_size 不要写size_t（unsigned int）这里无法停止</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">_data</span><span style="color:#ABB2BF;">[i </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">] </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">_data</span><span style="color:#ABB2BF;">[i];</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">_data</span><span style="color:#ABB2BF;">[pos] </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> val;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">++</span><span style="color:#ABB2BF;">_size;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //按位置删除</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">erase</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">pos</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(pos </span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> pos </span><span style="color:#C678DD;">&gt;=</span><span style="color:#ABB2BF;"> _size) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // O(n)</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> pos </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">; i </span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;"> _size; </span><span style="color:#C678DD;">++</span><span style="color:#ABB2BF;">i) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">_data</span><span style="color:#ABB2BF;">[i </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">] </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">_data</span><span style="color:#ABB2BF;">[i];</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">--</span><span style="color:#ABB2BF;">_size;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //查找元素的位置</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">; i </span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;"> _size; </span><span style="color:#C678DD;">++</span><span style="color:#ABB2BF;">i) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">_data</span><span style="color:#ABB2BF;">[i] </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> data) {</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> i;</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //打印</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">show</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">; i </span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;"> _size; </span><span style="color:#C678DD;">++</span><span style="color:#ABB2BF;">i) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">_data</span><span style="color:#ABB2BF;">[i] </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot; &quot;</span><span style="color:#ABB2BF;"> ;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#C678DD;">private:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">expand</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">size</span><span style="color:#ABB2BF;">) {</span><span style="color:#7F848E;font-style:italic;">	//扩容</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">int</span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> temp </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;">[size];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        /*for(int i = 0; i &lt; _size; ++i) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            temp[i] = _data[i];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        }*/</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">memcpy</span><span style="color:#ABB2BF;">(temp, _data, </span><span style="color:#C678DD;">sizeof</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> _size);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">delete[]</span><span style="color:#ABB2BF;"> _data;</span></span>
<span class="line"><span style="color:#ABB2BF;">        _data </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> temp;</span></span>
<span class="line"><span style="color:#ABB2BF;">        _capacity </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> size;</span><span style="color:#7F848E;font-style:italic;">//记得修改属性</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">private:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> _size;</span><span style="color:#7F848E;font-style:italic;">//大小</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> _capacity;</span><span style="color:#7F848E;font-style:italic;">//容量</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">int</span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> _data;</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">main</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">    Arrary arr;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">srand</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">nullptr</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">; i </span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">; </span><span style="color:#C678DD;">++</span><span style="color:#ABB2BF;">i) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push_back</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">rand</span><span style="color:#ABB2BF;">()</span><span style="color:#56B6C2;">%</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">show</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;arr.push_back(666);arr.erase(0) = &quot;</span><span style="color:#ABB2BF;"> ;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push_back</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">666</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">erase</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">show</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;arr.erase(2);arr.insert(0, 100);arr.pop_back() = &quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">erase</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">insert</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">pop_back</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">show</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;arr.erase(arr.find(100)); = &quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> pos </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">!=</span><span style="color:#ABB2BF;"> pos) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">erase</span><span style="color:#ABB2BF;">(pos);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">show</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">} </span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$./main</span></span>
<span class="line"><span style="color:#61AFEF;">77</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">22</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">76</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">81</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">53</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">96</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">48</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">45</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">34</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#61AFEF;">arr.push_back(666</span><span style="color:#ABB2BF;">);</span><span style="color:#61AFEF;">arr.erase(0</span><span style="color:#ABB2BF;">) = 22 76 81 53 96 48 11 45 34 666 </span></span>
<span class="line"><span style="color:#61AFEF;">arr.erase(2</span><span style="color:#ABB2BF;">);</span><span style="color:#61AFEF;">arr.insert(0,</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">);</span><span style="color:#61AFEF;">arr.pop_back</span><span style="color:#ABB2BF;">() = 100 22 76 53 96 48 11 45 34 </span></span>
<span class="line"><span style="color:#ABB2BF;">arr.erase(</span><span style="color:#61AFEF;">arr.find(100</span><span style="color:#ABB2BF;">)); = </span><span style="color:#D19A66;">22</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">76</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">53</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">96</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">48</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">45</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">34</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),y=s("p",null,[s("strong",null,"注意：")],-1),F=s("p",null,"2.下标访问先判断下标的有效性",-1),A=s("p",null,"3.成员函数执行完操作后，要注意是否需要修改属性",-1);function d(v,D){const n=l("font");return p(),o("div",null,[i,s("blockquote",null,[y,e(n,{color:"red"},{default:B(()=>[r("1. 下标不要写size_t类型！！！")]),_:1}),F,A])])}const b=a(t,[["render",d],["__file","数组基础.html.vue"]]);export{b as default};
