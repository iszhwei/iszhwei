const e=JSON.parse('{"key":"v-0d093800","path":"/ccpp/19%20SGI%20STL%E4%BA%8C%E7%BA%A7%E7%A9%BA%E9%97%B4%E9%85%8D%E7%BD%AE%E5%99%A8%E5%86%85%E5%AD%98%E6%B1%A0%E6%BA%90%E7%A0%81/%E5%88%86%E9%85%8D%E5%86%85%E5%AD%98%E6%B1%A0_S_refill%E6%BA%90%E7%A0%81.html","title":"分配内存池_S_refill源码","lang":"zh-CN","frontmatter":{"title":"分配内存池_S_refill源码","icon":"file","order":5,"headerDepth":4,"category":["c/c++"],"tag":["SGI STL源码"],"description":"分配内存池_S_refill源码 作用： 根据__n，在_S_free_list中对应位置的元素指向一个__nobjs（默认为20）个__n字节chunk块的内存池 并且把第一个__chunk块分配出去，并填写剩下所有__chunk块的next域。 只有从备用内存中分配出来，并挂在_S_free_list 下的，才会填写chunk块头的_M_free_list_link","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/ccpp/19%20SGI%20STL%E4%BA%8C%E7%BA%A7%E7%A9%BA%E9%97%B4%E9%85%8D%E7%BD%AE%E5%99%A8%E5%86%85%E5%AD%98%E6%B1%A0%E6%BA%90%E7%A0%81/%E5%88%86%E9%85%8D%E5%86%85%E5%AD%98%E6%B1%A0_S_refill%E6%BA%90%E7%A0%81.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"分配内存池_S_refill源码"}],["meta",{"property":"og:description","content":"分配内存池_S_refill源码 作用： 根据__n，在_S_free_list中对应位置的元素指向一个__nobjs（默认为20）个__n字节chunk块的内存池 并且把第一个__chunk块分配出去，并填写剩下所有__chunk块的next域。 只有从备用内存中分配出来，并挂在_S_free_list 下的，才会填写chunk块头的_M_free_list_link"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"SGI STL源码"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分配内存池_S_refill源码\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":1.88,"words":563},"filePathRelative":"ccpp/19 SGI STL二级空间配置器内存池源码/分配内存池_S_refill源码.md","excerpt":"<h1> 分配内存池_S_refill源码</h1>\\n<p>作用：</p>\\n<ol>\\n<li><strong>根据<code>__n</code>，在<code>_S_free_list</code>中对应位置的元素指向一个<code>__nobjs</code>（默认为20）个<code>__n</code>字节chunk块的内存池</strong></li>\\n<li><strong>并且把第一个<code>__chunk</code>块分配出去，并填写剩下所有<code>__chunk</code>块的next域。</strong></li>\\n</ol>\\n<p>只有从备用内存中分配出来，并挂在<code>_S_free_list</code> 下的，才会填写chunk块头的<code>_M_free_list_link</code></p>","autoDesc":true}');export{e as data};
