const t=JSON.parse('{"key":"v-29824dbc","path":"/ccpp/16%20%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/%E5%B8%A6%E5%BC%95%E7%94%A8%E8%AE%A1%E6%95%B0%E7%9A%84%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88.html","title":"带引用计数的智能指针","lang":"zh-CN","frontmatter":{"title":"带引用计数的智能指针","icon":"file","order":2,"headerDepth":4,"category":["c/c++"],"tag":["智能指针"],"description":"带引用计数的智能指针 shared_ptr和weak_ptr； 带引用计数的好处：。 带引用计数的智能指针是怎么解决多个指针持有一个资源的？ 带引用计数： 当1个智能指针引用这个资源的时候，这个资源相应的引用计数就加1，当这个智能指针出作用域，不再使用这个资源的时候，这个资源的引用计数就减1。 当引用计数减1不为0的时候，这个智能指针不使用这个资源了，但是还有其他智能指针在使用这个资源，这个智能指针不能析构这个资源，只能直接走人。 当引用计数减1为0的时候，说明当前智能指针是最后使用这个资源的智能指针，所以它要负责这个资源的释放。（完美的解决了智能指针的浅拷贝—就是多个智能指针多次释放同一个资源）","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/ccpp/16%20%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/%E5%B8%A6%E5%BC%95%E7%94%A8%E8%AE%A1%E6%95%B0%E7%9A%84%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"带引用计数的智能指针"}],["meta",{"property":"og:description","content":"带引用计数的智能指针 shared_ptr和weak_ptr； 带引用计数的好处：。 带引用计数的智能指针是怎么解决多个指针持有一个资源的？ 带引用计数： 当1个智能指针引用这个资源的时候，这个资源相应的引用计数就加1，当这个智能指针出作用域，不再使用这个资源的时候，这个资源的引用计数就减1。 当引用计数减1不为0的时候，这个智能指针不使用这个资源了，但是还有其他智能指针在使用这个资源，这个智能指针不能析构这个资源，只能直接走人。 当引用计数减1为0的时候，说明当前智能指针是最后使用这个资源的智能指针，所以它要负责这个资源的释放。（完美的解决了智能指针的浅拷贝—就是多个智能指针多次释放同一个资源）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"智能指针"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"带引用计数的智能指针\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"带引用计数的智能指针是怎么解决多个指针持有一个资源的？","slug":"带引用计数的智能指针是怎么解决多个指针持有一个资源的","link":"#带引用计数的智能指针是怎么解决多个指针持有一个资源的","children":[]},{"level":2,"title":"带引用计数的智能指针的实现","slug":"带引用计数的智能指针的实现","link":"#带引用计数的智能指针的实现","children":[]},{"level":2,"title":"shared_ptr的交叉引用问题","slug":"shared-ptr的交叉引用问题","link":"#shared-ptr的交叉引用问题","children":[]},{"level":2,"title":"weak_ptr怎么使用资源","slug":"weak-ptr怎么使用资源","link":"#weak-ptr怎么使用资源","children":[]}],"git":{},"readingTime":{"minutes":5.53,"words":1659},"filePathRelative":"ccpp/16 智能指针/带引用计数的智能指针.md","excerpt":"<h1> 带引用计数的智能指针</h1>\\n<p>shared_ptr和weak_ptr；</p>\\n<p><strong>带引用计数的好处：。</strong></p>\\n<h2> 带引用计数的智能指针是怎么解决多个指针持有一个资源的？</h2>\\n<ul>\\n<li><strong>带引用计数：</strong></li>\\n<li>当1个智能指针<u>引用这个资源的时候，这个资源相应的引用计数就加1，当这个智能指针出作用域，不再使用这个资源的时候，这个资源的引用计数就减1。</u></li>\\n<li>当引用计数减1不为0的时候，这个智能指针不使用这个资源了，但是还有其他智能指针在使用这个资源，这个智能指针不能析构这个资源，只能直接走人。</li>\\n<li>当引用计数减1<u>为0的时候，说明当前智能指针是最后使用这个资源的智能指针，所以它要负责这个资源的释放</u>。（完美的解决了智能指针的浅拷贝—就是多个智能指针多次释放同一个资源）</li>\\n</ul>","autoDesc":true}');export{t as data};
