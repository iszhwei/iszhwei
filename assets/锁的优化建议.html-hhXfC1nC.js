const t=JSON.parse('{"key":"v-416fc51c","path":"/mysql/06%20MySQL%E7%9A%84%E9%94%81%E6%9C%BA%E5%88%B6/%E9%94%81%E7%9A%84%E4%BC%98%E5%8C%96%E5%BB%BA%E8%AE%AE.html","title":"锁的优化建议","lang":"zh-CN","frontmatter":{"title":"锁的优化建议","icon":"file","order":3,"headerDepth":4,"category":["mysql"],"tag":["mysql锁机制"],"description":"锁的优化建议 在能正确完成业务的前提下，为确保效率，尽量使用较低的隔离级别（必须避免脏读） 设计合理的索引并**引访问数据，使加锁更准确，减少锁冲突的机会，提高并发能力** 选择合理的事务大小，发生锁冲突的概率小（事务越大，包含的SQL越多，可能包含更多的表资源和行资源的锁，增大了锁冲突的概率） 不同的程序访问一组表时，应尽量约定以相同的访问各表，对一个表而言，尽可能以固定的顺序存取表中的行。这样可以大大减少死锁的机会 尽量用访问数据，这样可以避免对并发插入的影响（） 不要申请超过实际需要的锁级别 除非必须，查询时不要显示加锁（）","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/mysql/06%20MySQL%E7%9A%84%E9%94%81%E6%9C%BA%E5%88%B6/%E9%94%81%E7%9A%84%E4%BC%98%E5%8C%96%E5%BB%BA%E8%AE%AE.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"锁的优化建议"}],["meta",{"property":"og:description","content":"锁的优化建议 在能正确完成业务的前提下，为确保效率，尽量使用较低的隔离级别（必须避免脏读） 设计合理的索引并**引访问数据，使加锁更准确，减少锁冲突的机会，提高并发能力** 选择合理的事务大小，发生锁冲突的概率小（事务越大，包含的SQL越多，可能包含更多的表资源和行资源的锁，增大了锁冲突的概率） 不同的程序访问一组表时，应尽量约定以相同的访问各表，对一个表而言，尽可能以固定的顺序存取表中的行。这样可以大大减少死锁的机会 尽量用访问数据，这样可以避免对并发插入的影响（） 不要申请超过实际需要的锁级别 除非必须，查询时不要显示加锁（）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"mysql锁机制"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"锁的优化建议\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":1.31,"words":392},"filePathRelative":"mysql/06 MySQL的锁机制/锁的优化建议.md","excerpt":"<h1> 锁的优化建议</h1>\\n<ul>\\n<li>\\n<p>在能正确完成业务的前提下，为确保效率，<u>尽量使用较低的隔离级别（必须避免脏读）</u></p>\\n</li>\\n<li>\\n<p>设计合理的索引并**引访问数据，使加锁更准确，减少锁冲突的机会，提高并发能力**</p>\\n</li>\\n<li>\\n<p>选择合理的事务大小，<strong>发生锁冲突的概率小</strong>（<u>事务越大，包含的SQL越多，可能包含更多的表资源和行资源的锁，增大了锁冲突的概率</u>）</p>\\n</li>\\n<li>\\n<p>不同的程序访问一组表时，应尽量约定<strong>以相同的访问各表</strong>，对一个表而言，尽可能<strong>以固定的顺序存取表中的行</strong>。这样可以大大减少死锁的机会</p>\\n</li>\\n<li>\\n<p><strong>尽量用访问数据，这样可以避免对并发插入的影响</strong>（）</p>\\n</li>\\n<li>\\n<p><strong>不要申请超过实际需要的锁级别</strong></p>\\n</li>\\n<li>\\n<p><strong>除非必须，查询时不要显示加锁</strong>（）</p>\\n</li>\\n</ul>","autoDesc":true}');export{t as data};
