const t=JSON.parse('{"key":"v-2c413a2b","path":"/ccpp/09%20%E6%A0%87%E5%87%86%E5%BA%93STL/%E6%B3%9B%E5%9E%8B%E7%AE%97%E6%B3%95%E4%B8%8E%E7%BB%91%E5%AE%9A%E5%99%A8.html","title":"泛型算法与绑定器","lang":"zh-CN","frontmatter":{"title":"泛型算法与绑定器","icon":"file","order":6,"headerDepth":4,"category":["c/c++"],"tag":["STL"],"description":"泛型算法与绑定器 一、泛型算法 使用STL库中提供的泛型算法需要引入：#include &lt;algorithm&gt; 泛型算法：template + 迭代器 + 函数对象；用模板实现的，接收的是容器的迭代器，还可以更改运算结果（通过函数对象更改结果）。 特点： 泛型算法的参数接受的都是。(遍历各种容器) 泛型算法的参数还可以接受。","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/ccpp/09%20%E6%A0%87%E5%87%86%E5%BA%93STL/%E6%B3%9B%E5%9E%8B%E7%AE%97%E6%B3%95%E4%B8%8E%E7%BB%91%E5%AE%9A%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"泛型算法与绑定器"}],["meta",{"property":"og:description","content":"泛型算法与绑定器 一、泛型算法 使用STL库中提供的泛型算法需要引入：#include &lt;algorithm&gt; 泛型算法：template + 迭代器 + 函数对象；用模板实现的，接收的是容器的迭代器，还可以更改运算结果（通过函数对象更改结果）。 特点： 泛型算法的参数接受的都是。(遍历各种容器) 泛型算法的参数还可以接受。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"STL"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"泛型算法与绑定器\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"一、泛型算法","slug":"一、泛型算法","link":"#一、泛型算法","children":[]},{"level":2,"title":"二、绑定器","slug":"二、绑定器","link":"#二、绑定器","children":[]}],"git":{},"readingTime":{"minutes":2.84,"words":853},"filePathRelative":"ccpp/09 标准库STL/泛型算法与绑定器.md","excerpt":"<h1> 泛型算法与绑定器</h1>\\n<h2> 一、泛型算法</h2>\\n<p>使用STL库中提供的泛型算法需要引入：<code>#include &lt;algorithm&gt;</code>\\n<strong>泛型算法：template + 迭代器 + 函数对象</strong>；用模板实现的，接收的是容器的迭代器，还可以更改运算结果（通过函数对象更改结果）。</p>\\n<p>特点：</p>\\n<ol>\\n<li>\\n<p><strong>泛型算法的参数接受的都是。</strong>(遍历各种容器)</p>\\n</li>\\n<li>\\n<p><strong>泛型算法的参数还可以接受。</strong></p>\\n</li>\\n</ol>","autoDesc":true}');export{t as data};
