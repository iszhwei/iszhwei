import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as i,c as e,a}from"./app-m9pC5KT-.js";const o="/assets/95b1f5698d6a43ee982557e37fff1ec7-22klGHMG.png",c="/assets/2d0f9759a12448ee9f3fa5bcd48dfa63-zCLw7cSP.png",r="/assets/1b603e122340498883a20321f20860ae-0oD5itYJ.png",s="/assets/57c2c12632d44a2bb1442e61b70ce647-X2cpx0or.png",n="/assets/53158c8fb82b406eaa356c4234a0e8fb-iJ0Rq935.png",g="/assets/0926d19d10c44fecad6a91191bce0649-Y6_jYNE2.png",d={},l=a('<h1 id="远程分支管理" tabindex="-1"><a class="header-anchor" href="#远程分支管理" aria-hidden="true">#</a> 远程分支管理</h1><p>我们在github上创建一个代码仓库，默认就拉了一个master主干分支，我们在master主干分支上开发了一期项目以后，<u>再进行二期开发的时候，可以再拉一个dev分支出来，大家都在dev分支上开发，此时<strong>项目管理员可以把master分支的写权限关掉</strong></u></p><p>因为一期功能开发验证完成，很稳定，我们不会直接在以前的分支上继续进行开发，否则可能影响已经稳定运行的版本，此时管理员应设置<u>允许拉取master代码，不允许再push代码到master分支</u></p><p>一般远程分支的创建都是由项目管理员来创建的，其它员工没有创建远程分支的权限，而且每一个远程分支的读写权限也都是由管理员来控制的</p><p>我们在远程创建一个新的分支dev</p><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>本地查看一下远程的分支，可以看到多了一个新的dev分支</p><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>本地创建并切换到新的分支dev，并指定本地分支和远程分支的对应关系</p><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>我们这时再拉取代码，git就知道从远程的哪个分支拉取了</p><figure><img src="'+s+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>修改README.md，并推送到远程</p><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>我们再切换回master查看，发现master分支的代码并没有改变</p><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2><ul><li>查看远程仓库名称：<code>git remote</code> 一般远程仓库默认的名字是origin</li><li>查看本地分支：<code>git branch</code></li><li>查看远程分支：<code>git branch -r</code></li><li>查看本地分支和远程分支的<strong>映射关系</strong>：<code>git branch -vv</code></li><li><strong>创建本地分支并指定</strong>追踪哪个远程分支：<strong><code>git checkout -b &lt;本地分支名&gt; &lt;远程仓库名&gt;/&lt;远程分支名&gt;</code></strong></li><li>设置<strong>已经存在的本地分支</strong>追踪哪个远程分支：<strong><code>git branch -u &lt;远程仓库名&gt;/&lt;远程分支名&gt;</code></strong></li></ul>',18),p=[l];function f(_,m){return i(),e("div",null,p)}const h=t(d,[["render",f],["__file","远程分支管理.html.vue"]]);export{h as default};
