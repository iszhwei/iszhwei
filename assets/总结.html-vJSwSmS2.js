const e=JSON.parse('{"key":"v-a8d7b886","path":"/ccpp/19%20SGI%20STL%E4%BA%8C%E7%BA%A7%E7%A9%BA%E9%97%B4%E9%85%8D%E7%BD%AE%E5%99%A8%E5%86%85%E5%AD%98%E6%B1%A0%E6%BA%90%E7%A0%81/%E6%80%BB%E7%BB%93.html","title":"总结","lang":"zh-CN","frontmatter":{"title":"总结","icon":"file","order":9,"headerDepth":4,"category":["c/c++"],"tag":["SGI STL源码"],"description":"总结 SGI STL二级空间配置器内存池的实现优点： 对于每一个字节数的chunk块分配，都是给出一部分进行使用，另一部分作为备用，这个备用可以给当前字节数使用，也可以给其它字节数使用 对于备用内存池划分完chunk块以后，如果还有剩余的很小的内存块，再次分配的时候，会把这些小的内存块挂到_S_free_list的对应位置，再次分配出去，备用内存池使用的干干净净！ 当指定字节数内存分配失败以后，有一个异常处理的过程，查看_S_free_list从__size -&gt; 128字节所有的chunk块，如果哪个字节数有空闲的chunk块，直接借一个出去。如果上面操作失败，还会调用_S_oom_malloc，其内部有一个预先设置好的malloc内存分配失败的回调函数，若分配不成功则会不停地调用次回调函数释放空间。若没设置回调函数，则直接malloc throw bad_alloc","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/ccpp/19%20SGI%20STL%E4%BA%8C%E7%BA%A7%E7%A9%BA%E9%97%B4%E9%85%8D%E7%BD%AE%E5%99%A8%E5%86%85%E5%AD%98%E6%B1%A0%E6%BA%90%E7%A0%81/%E6%80%BB%E7%BB%93.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"总结"}],["meta",{"property":"og:description","content":"总结 SGI STL二级空间配置器内存池的实现优点： 对于每一个字节数的chunk块分配，都是给出一部分进行使用，另一部分作为备用，这个备用可以给当前字节数使用，也可以给其它字节数使用 对于备用内存池划分完chunk块以后，如果还有剩余的很小的内存块，再次分配的时候，会把这些小的内存块挂到_S_free_list的对应位置，再次分配出去，备用内存池使用的干干净净！ 当指定字节数内存分配失败以后，有一个异常处理的过程，查看_S_free_list从__size -&gt; 128字节所有的chunk块，如果哪个字节数有空闲的chunk块，直接借一个出去。如果上面操作失败，还会调用_S_oom_malloc，其内部有一个预先设置好的malloc内存分配失败的回调函数，若分配不成功则会不停地调用次回调函数释放空间。若没设置回调函数，则直接malloc throw bad_alloc"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"SGI STL源码"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"总结\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":1.31,"words":393},"filePathRelative":"ccpp/19 SGI STL二级空间配置器内存池源码/总结.md","excerpt":"<h1> 总结</h1>\\n<p>SGI STL二级空间配置器内存池的实现优点：</p>\\n<ol>\\n<li>对于每一个字节数的chunk块分配，都是给出一部分进行使用，另一部分作为备用，这个备用可以给当前字节数使用，也可以给其它字节数使用</li>\\n<li>对于备用内存池划分完chunk块以后，如果还有剩余的很小的内存块，再次分配的时候，会把这些小的内存块挂到<code>_S_free_list</code>的对应位置，再次分配出去，备用内存池使用的干干净净！</li>\\n<li>当指定字节数内存分配失败以后，有一个异常处理的过程，查看<code>_S_free_list</code>从<code>__size -&gt; 128</code>字节所有的chunk块，如果哪个字节数有空闲的chunk块，直接借一个出去。如果上面操作失败，还会调用<code>_S_oom_malloc</code>，其内部有一个预先设置好的malloc内存分配失败的回调函数，若分配不成功则会不停地调用次回调函数释放空间。若没设置回调函数，则直接<code>malloc throw bad_alloc</code></li>\\n</ol>","autoDesc":true}');export{e as data};
