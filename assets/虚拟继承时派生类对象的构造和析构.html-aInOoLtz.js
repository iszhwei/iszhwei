const s=JSON.parse('{"key":"v-0e539496","path":"/ccpp/07%20%E5%A4%9A%E6%80%81/%E8%99%9A%E6%8B%9F%E7%BB%A7%E6%89%BF%E6%97%B6%E6%B4%BE%E7%94%9F%E7%B1%BB%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%9E%84%E9%80%A0%E5%92%8C%E6%9E%90%E6%9E%84.html","title":"虚拟继承时派生类对象的构造和析构","lang":"zh-CN","frontmatter":{"title":"虚拟继承时派生类对象的构造和析构","icon":"file","order":11,"headerDepth":4,"category":["c/c++"],"tag":["多态"],"description":"虚拟继承时派生类对象的构造和析构 在普通的继承体系中，比如A派生出B，B派生出C，则创建C对象时，在C类构造函数的初始化列表中 用B类构造函数，然后在B类构造函数初始化列表中调用A类的构造函数，即可完成对象的创建操作。但。 class A { public: A() &nbsp; { &nbsp; &nbsp; &nbsp; &nbsp;cout &lt;&lt; \\"A()\\" &lt;&lt; endl; &nbsp; } &nbsp; &nbsp; &nbsp; &nbsp;A(int ia) &nbsp; : _ia(ia) &nbsp; { &nbsp; &nbsp; &nbsp; &nbsp;cout &lt;&lt; \\"A(int)\\" &lt;&lt; endl; &nbsp; } void f() &nbsp; { &nbsp; &nbsp; &nbsp; &nbsp;cout &lt;&lt; \\"A::f()\\" &lt;&lt; endl; &nbsp; } protected: int _ia; }; class B : virtual public A { public: B() &nbsp; { &nbsp; &nbsp; &nbsp; &nbsp;cout &lt;&lt; \\"B()\\" &lt;&lt; endl; &nbsp; } &nbsp; &nbsp; &nbsp; &nbsp;B(int ia, int ib) &nbsp; : A(ia) &nbsp; , _ib(ib) &nbsp; { &nbsp; &nbsp; &nbsp; &nbsp;cout &lt;&lt; \\"B(int,int)\\" &lt;&lt; endl; &nbsp; } protected: int _ib; }; class C : public B { public: &nbsp; &nbsp;C(int ia, int ib, int ic) &nbsp; : B(ia, ib) &nbsp; , _ic(ic) &nbsp; { &nbsp; &nbsp; &nbsp; &nbsp;cout &lt;&lt; \\"C(int,int,int)\\" &lt;&lt; endl; } &nbsp; &nbsp; &nbsp; &nbsp;void show() const &nbsp; { &nbsp; &nbsp; &nbsp; &nbsp;cout &lt;&lt; \\"_ia: \\" &lt;&lt; _ia &lt;&lt; endl &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; \\"_ib: \\" &lt;&lt; _ib &lt;&lt; endl &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; \\"_ic: \\" &lt;&lt; _ic &lt;&lt; endl; &nbsp; } private: &nbsp; &nbsp;int _ic; }; void test() { &nbsp; &nbsp;C c(10, 20, 30); &nbsp; &nbsp;c.show(); }","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/ccpp/07%20%E5%A4%9A%E6%80%81/%E8%99%9A%E6%8B%9F%E7%BB%A7%E6%89%BF%E6%97%B6%E6%B4%BE%E7%94%9F%E7%B1%BB%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%9E%84%E9%80%A0%E5%92%8C%E6%9E%90%E6%9E%84.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"虚拟继承时派生类对象的构造和析构"}],["meta",{"property":"og:description","content":"虚拟继承时派生类对象的构造和析构 在普通的继承体系中，比如A派生出B，B派生出C，则创建C对象时，在C类构造函数的初始化列表中 用B类构造函数，然后在B类构造函数初始化列表中调用A类的构造函数，即可完成对象的创建操作。但。 class A { public: A() &nbsp; { &nbsp; &nbsp; &nbsp; &nbsp;cout &lt;&lt; \\"A()\\" &lt;&lt; endl; &nbsp; } &nbsp; &nbsp; &nbsp; &nbsp;A(int ia) &nbsp; : _ia(ia) &nbsp; { &nbsp; &nbsp; &nbsp; &nbsp;cout &lt;&lt; \\"A(int)\\" &lt;&lt; endl; &nbsp; } void f() &nbsp; { &nbsp; &nbsp; &nbsp; &nbsp;cout &lt;&lt; \\"A::f()\\" &lt;&lt; endl; &nbsp; } protected: int _ia; }; class B : virtual public A { public: B() &nbsp; { &nbsp; &nbsp; &nbsp; &nbsp;cout &lt;&lt; \\"B()\\" &lt;&lt; endl; &nbsp; } &nbsp; &nbsp; &nbsp; &nbsp;B(int ia, int ib) &nbsp; : A(ia) &nbsp; , _ib(ib) &nbsp; { &nbsp; &nbsp; &nbsp; &nbsp;cout &lt;&lt; \\"B(int,int)\\" &lt;&lt; endl; &nbsp; } protected: int _ib; }; class C : public B { public: &nbsp; &nbsp;C(int ia, int ib, int ic) &nbsp; : B(ia, ib) &nbsp; , _ic(ic) &nbsp; { &nbsp; &nbsp; &nbsp; &nbsp;cout &lt;&lt; \\"C(int,int,int)\\" &lt;&lt; endl; } &nbsp; &nbsp; &nbsp; &nbsp;void show() const &nbsp; { &nbsp; &nbsp; &nbsp; &nbsp;cout &lt;&lt; \\"_ia: \\" &lt;&lt; _ia &lt;&lt; endl &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; \\"_ib: \\" &lt;&lt; _ib &lt;&lt; endl &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; \\"_ic: \\" &lt;&lt; _ic &lt;&lt; endl; &nbsp; } private: &nbsp; &nbsp;int _ic; }; void test() { &nbsp; &nbsp;C c(10, 20, 30); &nbsp; &nbsp;c.show(); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"多态"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"虚拟继承时派生类对象的构造和析构\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":2.41,"words":724},"filePathRelative":"ccpp/07 多态/虚拟继承时派生类对象的构造和析构.md","excerpt":"<h1> 虚拟继承时派生类对象的构造和析构</h1>\\n<p>在普通的继承体系中，比如A派生出B，B派生出C，则创建C对象时，在C类构造函数的初始化列表中\\n用B类构造函数，然后在B类构造函数初始化列表中调用A类的构造函数，即可完成对象的创建操作。但。</p>\\n<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #C678DD\\">class</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">A</span><span style=\\"color: #ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">public:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #61AFEF\\">A</span><span style=\\"color: #ABB2BF\\">() </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  {   </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp; &nbsp; &nbsp;cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"A()\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp;</span><span style=\\"color: #61AFEF\\">A</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">ia</span><span style=\\"color: #ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  : </span><span style=\\"color: #61AFEF\\">_ia</span><span style=\\"color: #ABB2BF\\">(ia)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  {   </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp; &nbsp; &nbsp;cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"A(int)\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">f</span><span style=\\"color: #ABB2BF\\">() </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  {   </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp; &nbsp; &nbsp;cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"A::f()\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">protected:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> _ia;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">};</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">class</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">B</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">: </span><span style=\\"color: #C678DD\\">virtual</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">public</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">A</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">public:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #61AFEF\\">B</span><span style=\\"color: #ABB2BF\\">() </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  {   </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp; &nbsp; &nbsp;cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"B()\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp;</span><span style=\\"color: #61AFEF\\">B</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">ia</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">ib</span><span style=\\"color: #ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  : </span><span style=\\"color: #61AFEF\\">A</span><span style=\\"color: #ABB2BF\\">(ia)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  , </span><span style=\\"color: #61AFEF\\">_ib</span><span style=\\"color: #ABB2BF\\">(ib)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  {   </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp; &nbsp; &nbsp;cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"B(int,int)\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">protected:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> _ib;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">};</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">class</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">C</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">: </span><span style=\\"color: #C678DD\\">public</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">B</span><span style=\\"color: #ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">public:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp;</span><span style=\\"color: #61AFEF\\">C</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">ia</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">ib</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">ic</span><span style=\\"color: #ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  : </span><span style=\\"color: #61AFEF\\">B</span><span style=\\"color: #ABB2BF\\">(ia, ib)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  , </span><span style=\\"color: #61AFEF\\">_ic</span><span style=\\"color: #ABB2BF\\">(ic)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  {   </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp; &nbsp; &nbsp;cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"C(int,int,int)\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;  </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp;</span><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">show</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #C678DD\\">const</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp; &nbsp; &nbsp;cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"_ia: \\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> _ia </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"_ib: \\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> _ib </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"_ic: \\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> _ic </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp;  }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">private:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp;</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> _ic;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">};</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">test</span><span style=\\"color: #ABB2BF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp;C </span><span style=\\"color: #61AFEF\\">c</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #D19A66\\">10</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #D19A66\\">20</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #D19A66\\">30</span><span style=\\"color: #ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> &nbsp; &nbsp;</span><span style=\\"color: #E5C07B\\">c</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">show</span><span style=\\"color: #ABB2BF\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{s as data};
