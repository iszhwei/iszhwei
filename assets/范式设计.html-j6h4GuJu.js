const e=JSON.parse('{"key":"v-cc05253e","path":"/mysql/01%20MySQL%E5%9F%BA%E7%A1%80/%E8%8C%83%E5%BC%8F%E8%AE%BE%E8%AE%A1.html","title":"范式设计","lang":"zh-CN","frontmatter":{"title":"范式设计","icon":"file","order":7,"headerDepth":4,"category":["mysql"],"tag":["mysql基础"],"description":"范式设计 范式设计好处 主要是为了减少数据冗余 如果冗余太多，那么数据插入、删除、更新的时候，要对多条记录的同样的数据进行更新删除，可能会产生问题 第一范式（1NF） 满足第一范式才被称为关系型数据库。每一列保持原子特性，不能再分割。 则设计成一对多的实体关系。例如地址字段，可以再细分为省，市，区等不可再分割（即原子特性）的字段","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/mysql/01%20MySQL%E5%9F%BA%E7%A1%80/%E8%8C%83%E5%BC%8F%E8%AE%BE%E8%AE%A1.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"范式设计"}],["meta",{"property":"og:description","content":"范式设计 范式设计好处 主要是为了减少数据冗余 如果冗余太多，那么数据插入、删除、更新的时候，要对多条记录的同样的数据进行更新删除，可能会产生问题 第一范式（1NF） 满足第一范式才被称为关系型数据库。每一列保持原子特性，不能再分割。 则设计成一对多的实体关系。例如地址字段，可以再细分为省，市，区等不可再分割（即原子特性）的字段"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"mysql基础"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"范式设计\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"范式设计好处","slug":"范式设计好处","link":"#范式设计好处","children":[]},{"level":2,"title":"第一范式（1NF）","slug":"第一范式-1nf","link":"#第一范式-1nf","children":[]},{"level":2,"title":"第二范式（2NF）","slug":"第二范式-2nf","link":"#第二范式-2nf","children":[]},{"level":2,"title":"第三范式（3NF）","slug":"第三范式-3nf","link":"#第三范式-3nf","children":[]},{"level":2,"title":"BC范式（BCNF）","slug":"bc范式-bcnf","link":"#bc范式-bcnf","children":[]},{"level":2,"title":"第四范式（4NF）","slug":"第四范式-4nf","link":"#第四范式-4nf","children":[]},{"level":2,"title":"不满足的范式的表怎么办","slug":"不满足的范式的表怎么办","link":"#不满足的范式的表怎么办","children":[]}],"git":{},"readingTime":{"minutes":2.87,"words":860},"filePathRelative":"mysql/01 MySQL基础/范式设计.md","excerpt":"<h1> 范式设计</h1>\\n<h2> 范式设计好处</h2>\\n<ol>\\n<li>主要是为了<strong>减少数据冗余</strong></li>\\n<li>如果冗余太多，那么数据插入、删除、更新的时候，要对多条记录的同样的数据进行更新删除，可能会产生问题</li>\\n</ol>\\n<h2> 第一范式（1NF）</h2>\\n<blockquote>\\n<p>满足第一范式才被称为关系型数据库。<strong>每一列保持原子特性</strong>，不能再分割。</p>\\n</blockquote>\\n则设计成<strong>一对多</strong>的实体关系。例如地址字段，可以再细分为省，市，区等不可再分割（即原子特性）的字段","autoDesc":true}');export{e as data};
