const n=JSON.parse('{"key":"v-f2fadc9e","path":"/mysql/04%20MYSQL%E7%B4%A2%E5%BC%95/InnoDB%E8%87%AA%E9%80%82%E5%BA%94%E5%93%88%E5%B8%8C%E7%B4%A2%E5%BC%95.html","title":"InnoDB自适应哈希索引","lang":"zh-CN","frontmatter":{"title":"InnoDB自适应哈希索引","icon":"file","order":6,"headerDepth":4,"category":["mysql"],"tag":["mysql索引"],"description":"InnoDB自适应哈希索引 自适应哈希索引作用：MySQL Server为避免频繁回表， 自动创建的 也是只能等值查询 是InnoDB对B+树二级索引的一个优化措施 假如name是有索引的，我们不断使用如下的方式查询，那就得先访问name的二级索引树，从二级索引树上取出主键uid，然后回表，用这个uid去主键索引树上取得对应的数据 select * from student where name = \\"zhangsan\\"; select * from student where name = \\"gaoyang\\"; select * from student where name = \\"linfeng\\"; ...","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/mysql/04%20MYSQL%E7%B4%A2%E5%BC%95/InnoDB%E8%87%AA%E9%80%82%E5%BA%94%E5%93%88%E5%B8%8C%E7%B4%A2%E5%BC%95.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"InnoDB自适应哈希索引"}],["meta",{"property":"og:description","content":"InnoDB自适应哈希索引 自适应哈希索引作用：MySQL Server为避免频繁回表， 自动创建的 也是只能等值查询 是InnoDB对B+树二级索引的一个优化措施 假如name是有索引的，我们不断使用如下的方式查询，那就得先访问name的二级索引树，从二级索引树上取出主键uid，然后回表，用这个uid去主键索引树上取得对应的数据 select * from student where name = \\"zhangsan\\"; select * from student where name = \\"gaoyang\\"; select * from student where name = \\"linfeng\\"; ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"mysql索引"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"InnoDB自适应哈希索引\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":2.95,"words":886},"filePathRelative":"mysql/04 MYSQL索引/InnoDB自适应哈希索引.md","excerpt":"<h1> InnoDB自适应哈希索引</h1>\\n<p><strong>自适应哈希索引作用</strong>：MySQL Server为<u>避免频繁回表</u>，</p>\\n<ul>\\n<li>自动创建的</li>\\n<li>也是只能等值查询</li>\\n<li>是InnoDB对B+树二级索引的一个优化措施</li>\\n</ul>\\n<p>假如name是有索引的，我们不断使用如下的方式查询，那就得先访问name的二级索引树，从二级索引树上取出主键uid，然后<strong>回表</strong>，用这个uid去主键索引树上取得对应的数据</p>\\n<div class=\\"language-sql line-numbers-mode\\" data-ext=\\"sql\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #C678DD\\">select</span><span style=\\"color: #ABB2BF\\"> * </span><span style=\\"color: #C678DD\\">from</span><span style=\\"color: #ABB2BF\\"> student </span><span style=\\"color: #C678DD\\">where</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">name</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"zhangsan\\"</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">select</span><span style=\\"color: #ABB2BF\\"> * </span><span style=\\"color: #C678DD\\">from</span><span style=\\"color: #ABB2BF\\"> student </span><span style=\\"color: #C678DD\\">where</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">name</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"gaoyang\\"</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">select</span><span style=\\"color: #ABB2BF\\"> * </span><span style=\\"color: #C678DD\\">from</span><span style=\\"color: #ABB2BF\\"> student </span><span style=\\"color: #C678DD\\">where</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">name</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"linfeng\\"</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">...</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
