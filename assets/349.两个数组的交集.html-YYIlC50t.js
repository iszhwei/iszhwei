import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as p,c as e,d as s,e as t,f as r,b as c,a as n}from"./app-rY1SOIco.js";const B={},i={href:"https://leetcode.cn/problems/intersection-of-two-arrays/",target:"_blank",rel:"noopener noreferrer"},y=n(`<p>给定两个数组 <code>nums1</code> 和 <code>nums2</code> ，返回 <em>它们的交集</em> 。输出结果中的每个元素一定是 <strong>唯一</strong> 的。我们可以 <strong>不考虑输出结果的顺序</strong> 。</p><p><strong>示例 1：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#abb2bf;">输入：nums1 = [1,2,2,1], nums2 = [2,2]</span></span>
<span class="line"><span style="color:#abb2bf;">输出：[2]</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">输入：nums1 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">], nums2 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">输出：[</span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">解释：[</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">] 也是可通过的</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),d=n(`<h2 id="数组做哈希表" tabindex="-1"><a class="header-anchor" href="#数组做哈希表" aria-hidden="true">#</a> 数组做哈希表</h2><p>数值范围：</p><ul><li>1 &lt;= nums1.length, nums2.length &lt;= 1000</li><li>0 &lt;= nums1[i], nums2[i] &lt;= 1000</li></ul><p>所以就可以 使用数组来做哈希表了， 因为数组都是 1000以内的</p><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Solution</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">public:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">vector</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#61AFEF;">intersection</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">vector</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">nums1</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">vector</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">nums2</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">hash</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1001</span><span style="color:#ABB2BF;">] </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> {</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">auto</span><span style="color:#ABB2BF;"> num : nums1) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">hash</span><span style="color:#ABB2BF;">[num] </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //使用unordered_set而不是vector是因为可能有多个相同的值出现，需要去重</span></span>
<span class="line"><span style="color:#ABB2BF;">        unordered_set</span><span style="color:#C678DD;">&lt;int&gt;</span><span style="color:#ABB2BF;"> resultSet;</span><span style="color:#7F848E;font-style:italic;">	//unordered_set 不是unorder_set</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">auto</span><span style="color:#ABB2BF;"> num : nums2) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">hash</span><span style="color:#ABB2BF;">[num] </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#E5C07B;">resultSet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">insert</span><span style="color:#ABB2BF;">(num);</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">vector</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">resultSet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">begin</span><span style="color:#ABB2BF;">(), </span><span style="color:#E5C07B;">resultSet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="unordered-set做哈希表" tabindex="-1"><a class="header-anchor" href="#unordered-set做哈希表" aria-hidden="true">#</a> unordered_set做哈希表</h2><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Solution</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">public:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">vector</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#61AFEF;">intersection</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">vector</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">nums1</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">vector</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">nums2</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        unordered_set</span><span style="color:#C678DD;">&lt;int&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Set1</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">nums1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">begin</span><span style="color:#ABB2BF;">(), </span><span style="color:#E5C07B;">nums1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">        unordered_set</span><span style="color:#C678DD;">&lt;int&gt;</span><span style="color:#ABB2BF;"> resultSet;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">auto</span><span style="color:#ABB2BF;"> num : nums2) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Set1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(num) </span><span style="color:#C678DD;">!=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Set1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">()) {</span><span style="color:#7F848E;font-style:italic;">  //注意std find返回的是迭代器不是bool</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#E5C07B;">resultSet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">insert</span><span style="color:#ABB2BF;">(num);</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">vector</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#E5C07B;">resultSet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">begin</span><span style="color:#ABB2BF;">(), </span><span style="color:#E5C07B;">resultSet</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function F(A,u){const a=o("ExternalLinkIcon");return p(),e("div",null,[s("p",null,[s("a",i,[t("349. 两个数组的交集（有相同的数字）"),r(a)])]),y,c("more"),d])}const D=l(B,[["render",F],["__file","349.两个数组的交集.html.vue"]]);export{D as default};
