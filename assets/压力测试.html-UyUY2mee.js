import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as l,a}from"./app-rY1SOIco.js";const p={},o=a(`<h1 id="连接池压力测试" tabindex="-1"><a class="header-anchor" href="#连接池压力测试" aria-hidden="true">#</a> 连接池压力测试</h1><h2 id="连接池代码" tabindex="-1"><a class="header-anchor" href="#连接池代码" aria-hidden="true">#</a> 连接池代码</h2><h3 id="mysql-cnf配置文件" tabindex="-1"><a class="header-anchor" href="#mysql-cnf配置文件" aria-hidden="true">#</a> <code>mysql.cnf</code>配置文件</h3><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#数据库连接池的配置文件，下面和宏一样就不要加多余的空格了</span></span>
<span class="line"><span style="color:#C678DD;">ip</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">127.0.0.1</span></span>
<span class="line"><span style="color:#C678DD;">port</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">3306</span></span>
<span class="line"><span style="color:#C678DD;">username</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">root</span></span>
<span class="line"><span style="color:#C678DD;">password</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">147258</span></span>
<span class="line"><span style="color:#C678DD;">dbname</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">chat</span></span>
<span class="line"><span style="color:#C678DD;">initSize</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">10</span></span>
<span class="line"><span style="color:#C678DD;">maxSize</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">1024</span></span>
<span class="line"><span style="color:#98C379;">// 连接池最大空闲时间默认单位是秒</span></span>
<span class="line"><span style="color:#C678DD;">maxIdleTime</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">60</span></span>
<span class="line"><span style="color:#98C379;">// 连接池获取连接的超时时间单位是毫秒</span></span>
<span class="line"><span style="color:#C678DD;">connectionTimeOut</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">100</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="public-h公共头文件" tabindex="-1"><a class="header-anchor" href="#public-h公共头文件" aria-hidden="true">#</a> <code>public.h</code>公共头文件</h3><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 这是一个公共的头文件</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C678DD;">#ifndef</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">_PUBLIC_H</span></span>
<span class="line"><span style="color:#C678DD;">#define</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">_PUBLIC_H</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">#define</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">LOG</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">str</span><span style="color:#ABB2BF;">) \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout &lt;&lt; __FILE__ &lt;&lt; &quot;:&quot; &lt;&lt; __LINE__ &lt;&lt; &quot; &quot; &lt;&lt;   \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    __TIMESTAMP__ &lt;&lt; &quot;:&quot; &lt;&lt; str &lt;&lt; endl;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">#endif</span><span style="color:#7F848E;font-style:italic;"> //_PUBLIC_H</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="connection-h数据库操作头文件" tabindex="-1"><a class="header-anchor" href="#connection-h数据库操作头文件" aria-hidden="true">#</a> <code>connection.h</code>数据库操作头文件</h3><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 实现MySQL数据库的操作</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">#ifndef</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">_CONNECTION_H</span></span>
<span class="line"><span style="color:#C678DD;">#define</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">_CONNECTION_H</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;string&gt;</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;mysql/mysql.h&gt;</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;ctime&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::string;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Connection</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">public:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">Connection</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">~Connection</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //数据库的连接操作</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">connection</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">ip</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">unsigned</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">short</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">port</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">user</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">passward</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">dbname</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //更新操作 insert delete update</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">update</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">sql</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //查询操作select</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">MYSQL_RES</span><span style="color:#C678DD;">*</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">query</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">sql</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 刷新一下连接的起始的空闲时间点</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">refreshAliveTime</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">        _aliveTime </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">clock</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 返回存活的时间</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">clock_t</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getAliveTime</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">clock</span><span style="color:#ABB2BF;">() </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> _aliveTime;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">private:</span></span>
<span class="line"><span style="color:#ABB2BF;">    MYSQL</span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> _conn;</span><span style="color:#7F848E;font-style:italic;">    //表示和MySQL的一条连接</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">clock_t</span><span style="color:#ABB2BF;"> _aliveTime;</span><span style="color:#7F848E;font-style:italic;"> // 记录进入空闲状态后的起始存活时间</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">#endif</span><span style="color:#7F848E;font-style:italic;">  // _CONNECTION_H</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="connection-cc数据库操作的封装实现" tabindex="-1"><a class="header-anchor" href="#connection-cc数据库操作的封装实现" aria-hidden="true">#</a> <code>connection.cc</code>数据库操作的封装实现</h3><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;iostream&gt;</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;connection.h&quot;</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;public.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::cout;</span></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::endl;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">Connection</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">Connection</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //初始化</span></span>
<span class="line"><span style="color:#ABB2BF;">    _conn </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">mysql_init</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">nullptr</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//释放资源</span></span>
<span class="line"><span style="color:#ABB2BF;">Connection::</span><span style="color:#56B6C2;">~</span><span style="color:#61AFEF;">Connection</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(_conn </span><span style="color:#C678DD;">!=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">nullptr</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">mysql_close</span><span style="color:#ABB2BF;">(_conn);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Connection</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">connection</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">ip</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">unsigned</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">short</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">port</span><span style="color:#ABB2BF;">, </span></span>
<span class="line"><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">user</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">passward</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">dbname</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //建立连接</span></span>
<span class="line"><span style="color:#ABB2BF;">    MYSQL</span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> p </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">mysql_real_connect</span><span style="color:#ABB2BF;">(_conn, </span><span style="color:#E5C07B;">ip</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">c_str</span><span style="color:#ABB2BF;">(), </span><span style="color:#E5C07B;">user</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">c_str</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">     </span><span style="color:#E5C07B;">passward</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">c_str</span><span style="color:#ABB2BF;">(),</span><span style="color:#E5C07B;">dbname</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">c_str</span><span style="color:#ABB2BF;">(), port, </span><span style="color:#D19A66;">nullptr</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">     </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> p </span><span style="color:#C678DD;">!=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">nullptr</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Connection</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">update</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">sql</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //更新操作 insert delete update</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">mysql_query</span><span style="color:#ABB2BF;">(_conn, </span><span style="color:#E5C07B;">sql</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">c_str</span><span style="color:#ABB2BF;">())) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">LOG</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;更新失败:&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;">  sql);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">MYSQL_RES</span><span style="color:#C678DD;">*</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Connection</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">query</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">sql</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">mysql_query</span><span style="color:#ABB2BF;">(_conn, </span><span style="color:#E5C07B;">sql</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">c_str</span><span style="color:#ABB2BF;">())) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">LOG</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;查询失败&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> sql);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">mysql_use_result</span><span style="color:#ABB2BF;">(_conn);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="connectionpool-h连接池的头文件" tabindex="-1"><a class="header-anchor" href="#connectionpool-h连接池的头文件" aria-hidden="true">#</a> <code>connectionPool.h</code>连接池的头文件</h3><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">#ifndef</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">_CONNECTIONPOOL_H</span></span>
<span class="line"><span style="color:#C678DD;">#define</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">_CONNECTIONPOOL_H</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;string&gt;</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;queue&gt;</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;mutex&gt;</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;atomic&gt;</span><span style="color:#ABB2BF;">   </span><span style="color:#7F848E;font-style:italic;">//atomic_int  原子类型</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;memory&gt;</span><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">//shared_ptr</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;thread&gt;</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;condition_variable&gt;</span><span style="color:#ABB2BF;">	</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;functional&gt;</span><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">//bind</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;connection.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::string;</span></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::queue;</span></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::mutex;</span></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::thread;</span></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::atomic_int;</span></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::shared_ptr;</span></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::bind;</span></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::condition_variable;</span></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::unique_lock;</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ConnectionPool</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">public:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 获取连接池对象实例</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">static</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ConnectionPool</span><span style="color:#C678DD;">*</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getConnectionPool</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 给外部提供接口，从连接池中获取一个可用的空闲连接</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E5C07B;">shared_ptr</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Connection</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#61AFEF;">getConnection</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">private:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">ConnectionPool</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">~ConnectionPool</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">#ifdef</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">TEST_LOAD_CONFIG_FILE</span></span>
<span class="line"><span style="color:#C678DD;">public:</span><span style="color:#7F848E;font-style:italic;"> //测试的时候可以先变成共有的</span></span>
<span class="line"><span style="color:#C678DD;">#endif</span><span style="color:#7F848E;font-style:italic;">	//TEST_LOAD_CONFIG_FILE</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">loadConfigFile</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 运行在独立的线程中，专门负责生产新连接</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//之所以写成成员函数而不是全局函数，是因为可以更好访问成员变量</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">produceConnectionTask</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 扫描超过maxIdleTime时间的空闲连接，进行对于的连接回收</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">scannerConnectionTask</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">private:</span></span>
<span class="line"><span style="color:#ABB2BF;">	string _ip;</span><span style="color:#7F848E;font-style:italic;"> // mysql的ip地址</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">unsigned</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">short</span><span style="color:#ABB2BF;"> _port;</span><span style="color:#7F848E;font-style:italic;"> // mysql的端口号 3306</span></span>
<span class="line"><span style="color:#ABB2BF;">	string _username;</span><span style="color:#7F848E;font-style:italic;"> // mysql登录用户名</span></span>
<span class="line"><span style="color:#ABB2BF;">	string _password;</span><span style="color:#7F848E;font-style:italic;"> // mysql登录密码</span></span>
<span class="line"><span style="color:#ABB2BF;">	string _dbname;</span><span style="color:#7F848E;font-style:italic;"> // 连接的数据库名称</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> _initSize;</span><span style="color:#7F848E;font-style:italic;"> // 连接池的初始连接量</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> _maxSize;</span><span style="color:#7F848E;font-style:italic;"> // 连接池的最大连接量</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> _maxIdleTime;</span><span style="color:#7F848E;font-style:italic;"> // 连接池最大空闲时间</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> _connectionTimeout;</span><span style="color:#7F848E;font-style:italic;"> // 连接池获取连接的超时时间</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    queue</span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;">Connection</span><span style="color:#56B6C2;">*</span><span style="color:#C678DD;">&gt;</span><span style="color:#ABB2BF;"> _connectionQue;</span><span style="color:#7F848E;font-style:italic;">  // 存储mysql连接的队列</span></span>
<span class="line"><span style="color:#ABB2BF;">    mutex _queueMutex;</span><span style="color:#7F848E;font-style:italic;">  // 维护连接队列的线程安全互斥锁</span></span>
<span class="line"><span style="color:#ABB2BF;">    atomic_int _connectionCnt;</span><span style="color:#7F848E;font-style:italic;"> // 记录连接所创建的connection连接的总数量 </span></span>
<span class="line"><span style="color:#ABB2BF;">	condition_variable cond;</span><span style="color:#7F848E;font-style:italic;">	// 设置条件变量，用于连接生产线程和连接消费线程的通信</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">#endif</span><span style="color:#7F848E;font-style:italic;"> //_CONNECTIONPOOL_H</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="connectionpool-cc连接池的实现" tabindex="-1"><a class="header-anchor" href="#connectionpool-cc连接池的实现" aria-hidden="true">#</a> <code>connectionPool.cc</code>连接池的实现</h3><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;connectionPool.h&quot;</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;public.h&quot;</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;iostream&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::cout;</span></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::endl;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 线程安全的懒汉单例函数接口</span></span>
<span class="line"><span style="color:#E5C07B;">ConnectionPool</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">*</span><span style="color:#E5C07B;">ConnectionPool</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">getConnectionPool</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span><span style="color:#7F848E;font-style:italic;">                               // 静态函数的实现，不写static</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">static</span><span style="color:#ABB2BF;"> ConnectionPool pool;</span><span style="color:#7F848E;font-style:italic;"> // 静态局部变量的初始化，编译器会生成lock和unlock</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;</span><span style="color:#ABB2BF;">pool;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 从配置文件中加载配置项</span></span>
<span class="line"><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ConnectionPool</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">loadConfigFile</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    FILE </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;">pf </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">fopen</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;mysql.cnf&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;r&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (pf </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">nullptr</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">LOG</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;mysql.cnf file is not exit!&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">while</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#61AFEF;">feof</span><span style="color:#ABB2BF;">(pf)) {</span><span style="color:#7F848E;font-style:italic;"> // 文件不为空</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">line</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1024</span><span style="color:#ABB2BF;">] </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> {</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">fgets</span><span style="color:#ABB2BF;">(line, </span><span style="color:#C678DD;">sizeof</span><span style="color:#ABB2BF;">(line), pf);</span></span>
<span class="line"><span style="color:#ABB2BF;">        string str </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> line;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> idx </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;=&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;"> // 从第0位开始找&#39;=&#39;的下标</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (idx </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) {</span><span style="color:#7F848E;font-style:italic;">            // 无效的配置项</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">continue</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // password=123456\\n</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> endidx </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;">, idx);</span><span style="color:#7F848E;font-style:italic;"> // 从第idx位开始找&#39;\\n&#39;的下标</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        string key </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">substr</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, idx);</span><span style="color:#7F848E;font-style:italic;"> // 从第0位开始idx个字符</span></span>
<span class="line"><span style="color:#ABB2BF;">        string value </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">substr</span><span style="color:#ABB2BF;">(idx </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, endidx </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> (idx </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#C678DD;">#ifdef</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">DEBUG</span></span>
<span class="line"><span style="color:#ABB2BF;">        cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> key </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;=&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> value </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#C678DD;">#endif</span><span style="color:#7F848E;font-style:italic;"> // DEBUG</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (key </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;ip&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            _ip </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> value;</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (key </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;port&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            _port </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">atoi</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">value</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">c_str</span><span style="color:#ABB2BF;">());</span><span style="color:#7F848E;font-style:italic;"> // string-&gt;const char* -&gt;int</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (key </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;username&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            _username </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> value;</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (key </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;password&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            _password </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> value;</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (key </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;dbname&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            _dbname </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> value;</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (key </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;initSize&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            _initSize </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">atoi</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">value</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">c_str</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (key </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;maxSize&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            _maxSize </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">atoi</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">value</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">c_str</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (key </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;maxIdleTime&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            _maxIdleTime </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">atoi</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">value</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">c_str</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (key </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;connectionTimeOut&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            _connectionTimeout </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">atoi</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">value</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">c_str</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ConnectionPool</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">ConnectionPool</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#61AFEF;">loadConfigFile</span><span style="color:#ABB2BF;">()) {</span><span style="color:#7F848E;font-style:italic;"> // 配置文件加载失败</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 创建初始的数量连接</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 这一块是在连接池启动的时候做的，不用考虑线程安全</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">; i </span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;"> _initSize; </span><span style="color:#C678DD;">++</span><span style="color:#ABB2BF;">i) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        Connection </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;">conn </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Connection</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">conn</span><span style="color:#ABB2BF;">-&gt;</span><span style="color:#61AFEF;">connection</span><span style="color:#ABB2BF;">(_ip, _port, _username, _password, _dbname);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">conn</span><span style="color:#ABB2BF;">-&gt;</span><span style="color:#61AFEF;">refreshAliveTime</span><span style="color:#ABB2BF;">();</span><span style="color:#7F848E;font-style:italic;"> // 刷新一下开始空闲的起始时间</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">_connectionQue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(conn);</span></span>
<span class="line"><span style="color:#ABB2BF;">        _connectionCnt</span><span style="color:#C678DD;">++</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 启动一个新的线程，作为连接的生产者 linux thread =&gt; pthread_create</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 因为本身还是c接口，所以线程处理函数void* (*)(void*)类型，需要使用bind</span></span>
<span class="line"><span style="color:#ABB2BF;">    thread </span><span style="color:#61AFEF;">produce</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">bind</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">&amp;</span><span style="color:#ABB2BF;">ConnectionPool::produceConnectionTask, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">));</span><span style="color:#7F848E;font-style:italic;"> // 线程对象</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">produce</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">detach</span><span style="color:#ABB2BF;">();</span><span style="color:#7F848E;font-style:italic;">                                                   // 设置成分离线程</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 启动一个新的定时线程，扫描超过maxIdleTime时间的空闲连接，进行对于的连接回收</span></span>
<span class="line"><span style="color:#ABB2BF;">    thread </span><span style="color:#61AFEF;">scanner</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">bind</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">&amp;</span><span style="color:#ABB2BF;">ConnectionPool::scannerConnectionTask, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">scanner</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">detach</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ConnectionPool</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">produceConnectionTask</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">while</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        unique_lock</span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;">mutex</span><span style="color:#C678DD;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">lock</span><span style="color:#ABB2BF;">(_queueMutex);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">while</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">_connectionQue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">empty</span><span style="color:#ABB2BF;">()) {</span><span style="color:#7F848E;font-style:italic;"> // 队列不为空</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">cond</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">wait</span><span style="color:#ABB2BF;">(lock);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (_connectionCnt </span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;"> _maxSize) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            Connection </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;">conn </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Connection</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">conn</span><span style="color:#ABB2BF;">-&gt;</span><span style="color:#61AFEF;">connection</span><span style="color:#ABB2BF;">(_ip, _port, _username, _password, _dbname);</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">conn</span><span style="color:#ABB2BF;">-&gt;</span><span style="color:#61AFEF;">refreshAliveTime</span><span style="color:#ABB2BF;">();</span><span style="color:#7F848E;font-style:italic;"> // 刷新一下开始空闲的起始时间</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">_connectionQue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(conn);</span></span>
<span class="line"><span style="color:#ABB2BF;">            _connectionCnt</span><span style="color:#C678DD;">++</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 通知消费者线程，可以消费连接了</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">cond</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">notify_all</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 扫描超过maxIdleTime时间的空闲连接，进行对于的连接回收</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ConnectionPool</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">scannerConnectionTask</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">while</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 通过sleep模拟定时效果</span></span>
<span class="line"><span style="color:#ABB2BF;">        std::</span><span style="color:#E5C07B;">this_thread</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">sleep_for</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">std</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">chrono</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">seconds</span><span style="color:#ABB2BF;">(_maxIdleTime));</span></span>
<span class="line"><span style="color:#ABB2BF;">       </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">       // 扫描整个队列，释放多余的连接</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">while</span><span style="color:#ABB2BF;"> (_connectionCnt </span><span style="color:#C678DD;">&gt;</span><span style="color:#ABB2BF;"> _initSize) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            Connection </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;">p </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">_connectionQue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">front</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">-&gt;</span><span style="color:#61AFEF;">getAliveTime</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">&gt;</span><span style="color:#ABB2BF;"> _maxIdleTime) {</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#E5C07B;">_connectionQue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">pop</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#C678DD;">delete</span><span style="color:#ABB2BF;"> p;</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#C678DD;">--</span><span style="color:#ABB2BF;">_connectionCnt;</span><span style="color:#7F848E;font-style:italic;">   // 调用~Connection()释放连接</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#C678DD;">break</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">  // 队头的连接没有超过_maxIdleTime，其它连接肯定没有</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">ConnectionPool::</span><span style="color:#56B6C2;">~</span><span style="color:#61AFEF;">ConnectionPool</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //{</span></span>
<span class="line"><span style="color:#ABB2BF;">        std::unique_lock</span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;">mutex</span><span style="color:#C678DD;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">lock</span><span style="color:#ABB2BF;">(_queueMutex);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">while</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">_connectionQue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">empty</span><span style="color:#ABB2BF;">()) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">delete</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">_connectionQue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">front</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">_connectionQue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">pop</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //}   </span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 消费者线程函数，从队列中获取连接</span></span>
<span class="line"><span style="color:#E5C07B;">shared_ptr</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Connection</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E5C07B;">ConnectionPool</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">getConnection</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    unique_lock</span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;">mutex</span><span style="color:#C678DD;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">lock</span><span style="color:#ABB2BF;">(_queueMutex);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">while</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">_connectionQue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">empty</span><span style="color:#ABB2BF;">()) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (std::cv_status::timeout </span><span style="color:#C678DD;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">cond</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">wait_for</span><span style="color:#ABB2BF;">(lock, std::</span><span style="color:#E5C07B;">chrono</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">milliseconds</span><span style="color:#ABB2BF;">(_connectionTimeout))) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">_connectionQue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">empty</span><span style="color:#ABB2BF;">()) {</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#61AFEF;">LOG</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;获取空闲连接超时了...获取连接失败!&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">nullptr</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    shared_ptr智能指针析构时，会把connection资源直接delete掉，相当于</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    调用connection的析构函数，connection就被close掉了。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    这里需要自定义shared_ptr的释放资源的方式，把connection直接归还到queue当中</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    */</span></span>
<span class="line"><span style="color:#ABB2BF;">    shared_ptr</span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;">Connection</span><span style="color:#C678DD;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">sp</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">_connectionQue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">front</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">                              [</span><span style="color:#56B6C2;">&amp;</span><span style="color:#ABB2BF;">](</span><span style="color:#E5C07B;">Connection</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">*</span><span style="color:#E06C75;font-style:italic;">pconn</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                                  // 这里是在服务器应用线程中调用的，所以一定要考虑队列的线程安全操作</span></span>
<span class="line"><span style="color:#ABB2BF;">                                  </span><span style="color:#E5C07B;">unique_lock</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">mutex</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#61AFEF;">lock</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">_queueMutex</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">                                  </span><span style="color:#E5C07B;">pconn</span><span style="color:#ABB2BF;">-&gt;</span><span style="color:#61AFEF;">refreshAliveTime</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">                                  </span><span style="color:#E5C07B;">_connectionQue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(pconn);</span></span>
<span class="line"><span style="color:#ABB2BF;">                              });</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">_connectionQue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">pop</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">_connectionQue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">empty</span><span style="color:#ABB2BF;">()) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">cond</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">notify_all</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> sp;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="压力测试" tabindex="-1"><a class="header-anchor" href="#压力测试" aria-hidden="true">#</a> 压力测试</h2><p>压力测试是设计优化类项目所必须的</p><h3 id="单线程" tabindex="-1"><a class="header-anchor" href="#单线程" aria-hidden="true">#</a> 单线程</h3><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> M </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">5000</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#C678DD;">clock_t</span><span style="color:#ABB2BF;"> begin </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">clock</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">; i </span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;"> M; </span><span style="color:#C678DD;">++</span><span style="color:#ABB2BF;">i) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 不使用连接池的测试</span></span>
<span class="line"><span style="color:#ABB2BF;">    Connection conn;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">conn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">connection</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3306</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;147258&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;chat&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">conn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">update</span><span style="color:#ABB2BF;">(sql);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">clock_t</span><span style="color:#ABB2BF;"> end </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">clock</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;1. 未使用连接池耗时：&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> end </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> begin </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot; ms&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 使用连接池的测试</span></span>
<span class="line"><span style="color:#ABB2BF;">begin </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">clock</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">ConnectionPool</span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> pool </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> ConnectionPool::</span><span style="color:#61AFEF;">getConnectionPool</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">; i </span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;"> M; i</span><span style="color:#C678DD;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    shared_ptr</span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;">Connection</span><span style="color:#C678DD;">&gt;</span><span style="color:#ABB2BF;"> conn </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">pool</span><span style="color:#ABB2BF;">-&gt;</span><span style="color:#61AFEF;">getConnection</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">conn</span><span style="color:#ABB2BF;">-&gt;</span><span style="color:#61AFEF;">update</span><span style="color:#ABB2BF;">(sql);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">end </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">clock</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;2. 使用连接池耗时：&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> end </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> begin </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot; ms&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">func1</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">sql</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1024</span><span style="color:#ABB2BF;">] </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> {</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">sprintf</span><span style="color:#ABB2BF;">(sql, </span><span style="color:#98C379;">&quot;insert into user(name, age, sex) values(&#39;</span><span style="color:#D19A66;">%s</span><span style="color:#98C379;">&#39;, </span><span style="color:#D19A66;">%d</span><span style="color:#98C379;">, &#39;</span><span style="color:#D19A66;">%s</span><span style="color:#98C379;">&#39;)&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#98C379;">&quot;guan yu1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">34</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;M&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">; i </span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">250</span><span style="color:#ABB2BF;">; </span><span style="color:#C678DD;">++</span><span style="color:#ABB2BF;">i) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 不使用连接池的测试</span></span>
<span class="line"><span style="color:#ABB2BF;">        Connection conn;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">conn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">connection</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3306</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;147258&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;chat&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">conn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">update</span><span style="color:#ABB2BF;">(sql);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">func2</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">sql</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1024</span><span style="color:#ABB2BF;">] </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> {</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">sprintf</span><span style="color:#ABB2BF;">(sql, </span><span style="color:#98C379;">&quot;insert into user(name, age, sex) values(&#39;</span><span style="color:#D19A66;">%s</span><span style="color:#98C379;">&#39;, </span><span style="color:#D19A66;">%d</span><span style="color:#98C379;">, &#39;</span><span style="color:#D19A66;">%s</span><span style="color:#98C379;">&#39;)&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#98C379;">&quot;guan yu1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">34</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;M&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    ConnectionPool</span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> pool </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> ConnectionPool::</span><span style="color:#61AFEF;">getConnectionPool</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">; i </span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">250</span><span style="color:#ABB2BF;">; i</span><span style="color:#C678DD;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        shared_ptr</span><span style="color:#C678DD;">&lt;</span><span style="color:#ABB2BF;">Connection</span><span style="color:#C678DD;">&gt;</span><span style="color:#ABB2BF;"> conn </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">pool</span><span style="color:#ABB2BF;">-&gt;</span><span style="color:#61AFEF;">getConnection</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">conn</span><span style="color:#ABB2BF;">-&gt;</span><span style="color:#61AFEF;">update</span><span style="color:#ABB2BF;">(sql);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">main</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //</span></span>
<span class="line"><span style="color:#ABB2BF;">    Connection conn;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">conn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">connection</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;127.0.0.1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3306</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;147258&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;chat&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">clock_t</span><span style="color:#ABB2BF;"> begin </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">clock</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    thread </span><span style="color:#61AFEF;">t1</span><span style="color:#ABB2BF;">(func1);</span></span>
<span class="line"><span style="color:#ABB2BF;">    thread </span><span style="color:#61AFEF;">t2</span><span style="color:#ABB2BF;">(func1);</span></span>
<span class="line"><span style="color:#ABB2BF;">    thread </span><span style="color:#61AFEF;">t3</span><span style="color:#ABB2BF;">(func1);</span></span>
<span class="line"><span style="color:#ABB2BF;">    thread </span><span style="color:#61AFEF;">t4</span><span style="color:#ABB2BF;">(func1);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">t1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">t2</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">t3</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">t4</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">clock_t</span><span style="color:#ABB2BF;"> end </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">clock</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> end </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> begin </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),e=[o];function c(B,t){return n(),l("div",null,e)}const y=s(p,[["render",c],["__file","压力测试.html.vue"]]);export{y as default};
