import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as s,o as r,c as i,d as l,e,f as t,w as o,a as _}from"./app-m9pC5KT-.js";const d="/assets/669d6c6d12b746f18a887e44b9cdda73-f49nUzAH.png",c="/assets/watermark_type_d3F5LXplbmhlaQ_shadow_50_text_Q1NETiBAQnVnTWFrZXItc2hlbg___size_20_color_FFFFFF_t_70_g_se_x_16-x3fb7nPW.png",u="/assets/24d3a8c14d714fa590d2ad93d467493d-p80nJwzH.png",g="/assets/0a9a65c7a2e842b8979b7dd929a2cf9d-Jk7h0Kso.png",h="/assets/watermark_type_d3F5LXplbmhlaQ_shadow_50_text_Q1NETiBAQnVnTWFrZXItc2hlbg___size_20_color_FFFFFF_t_70_g_se_x_16-17136860952919-_GMy_NCz.png",p="/assets/watermark_type_d3F5LXplbmhlaQ_shadow_50_text_Q1NETiBAQnVnTWFrZXItc2hlbg___size_20_color_FFFFFF_t_70_g_se_x_16-171368611517912-D3uX-zdb.png",f="/assets/watermark_type_d3F5LXplbmhlaQ_shadow_50_text_Q1NETiBAQnVnTWFrZXItc2hlbg___size_20_color_FFFFFF_t_70_g_se_x_16-171368616021715-xeCJZ2Bc.png",m="/assets/watermark_type_d3F5LXplbmhlaQ_shadow_50_text_Q1NETiBAQnVnTWFrZXItc2hlbg___size_20_color_FFFFFF_t_70_g_se_x_16-171368617914518-MCs7YVXU.png",b={},F=l("h1",{id:"主从复制原理",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#主从复制原理","aria-hidden":"true"},"#"),e(" 主从复制原理")],-1),x=l("h2",{id:"主从复制概念",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#主从复制概念","aria-hidden":"true"},"#"),e(" 主从复制概念")],-1),y=l("p",null,[l("strong",null,"主库对外提供数据的增删改查服务，主库中涉及到数据的修改都会写binlog")],-1),Q=l("strong",null,"相当于就是主库的所有修改通过主从复制机制体现在从库上",-1),v=l("p",null,"好处是做数据备份以后，通过MySQL中间件mycat，可以实现容灾",-1),L=l("strong",null,"容灾",-1),z=l("u",null,[e("主库挂了，由中间件代理mycat自动把服务的请求映射到从库，由从库继续对外提供服务，体现出了 "),l("strong",null,"高可用性")],-1),S=l("h2",{id:"读写分离概念",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#读写分离概念","aria-hidden":"true"},"#"),e(" 读写分离概念")],-1),w=l("strong",null,"主库专门处理写请求",-1),I=l("figure",null,[l("img",{src:d,alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1),T=l("u",null,"即使没有主从复制，也会写binlog",-1),k=l("h3",{id:"主库介绍",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#主库介绍","aria-hidden":"true"},"#"),e(" 主库介绍")],-1),B=l("strong",null,"binlog转储线程",-1),X=l("strong",null,"将二进制日志内容发送到从服务器",-1),V=l("h4",{id:"从库介绍",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#从库介绍","aria-hidden":"true"},"#"),e(" 从库介绍")],-1),N=l("strong",null,"relay log的作用",-1),A=l("h2",{id:"主从复制流程",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#主从复制流程","aria-hidden":"true"},"#"),e(" 主从复制流程")],-1),O=l("blockquote",null,[l("p",null,[l("strong",null,"两个log：binlog(master)、relay log(slave)，三个thread：dump(master)、IO(slave)、SQL(slave)")])],-1),E=l("li",null,"master服务器创建一个binlog转储线程，将binlog内容发送到从服务器",-1),W=l("code",null,"START SLAVE",-1),M=l("ul",null,[l("li",null,"首先slave开始一个工作线程（I/O线程），I/O线程会主动连接master ，然后主库会开启dump线程，dump线程从master的binlog中读取事件并发送给slave的I/O线程，如果dump线程已经跟上master（主库上的dump线程已经把binlog的内容发完了，而且主库上binlog没有产生更多的内容），dump线程会睡眠并等待binlog产生新的事件，slave的I/O线程接收的事件写入中继日志")],-1),Z=l("li",null,"slave的SQL线程处理该过程的最后一步，SQL线程从relay log中读取事件，并执行其中的事件更新slave的数据，使其与master的数据同步。只要SQL线程与I/O线程保持一致，中继日志通常会位于os缓存中，所以中继日志的开销很小",-1),C=l("h2",{id:"主从复制效果展示",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#主从复制效果展示","aria-hidden":"true"},"#"),e(" 主从复制效果展示")],-1),q=l("p",null,"我们把linux作为一个主库，Win10上的MySQL Server作为从库",-1),J=l("figure",null,[l("img",{src:c,alt:"",tabindex:"0",loading:"lazy"}),l("figcaption")],-1),H=_('<p>master创建mytest数据库</p><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>查看slave，发现mytest同步过来了</p><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>master创建user表，slave也同步了user表</p><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>现在linux端的MySQL（master）删除mytest库</p><figure><img src="'+p+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>此时slave的mytest也不存在了</p><h2 id="查看master当前环境下的工作线程" tabindex="-1"><a class="header-anchor" href="#查看master当前环境下的工作线程" aria-hidden="true">#</a> 查看master当前环境下的工作线程</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">show processlist;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>查看slave当前环境下的工作线程</p><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',14);function U(D,G){const n=s("font");return r(),i("div",null,[F,l("p",null,[e("在实际生产环境中，"),l("u",null,[e("如果对MySQL数据库的读和写都在一台数据库服务器中操作，无论是在安全性、高可用性，还是高并发等各个方面都是不能满足实际需求的，一般要通过数据库集群的"),l("strong",null,[e("主从复制机制来"),t(n,{color:"red"},{default:o(()=>[e("同步")]),_:1}),e("数据")]),e("，再通过"),l("strong",null,[e("读写分离来提升数据库的"),t(n,{color:"red"},{default:o(()=>[e("并发")]),_:1}),e("负载能力")])])]),x,y,l("p",null,[e("从库用来数据的同步和备份，"),t(n,{color:"green"},{default:o(()=>[e("从库通过专门的线程从主库里面的binlog（二进制日志），把主库里跟数据、权限、表结构相关的修改同步到从库里面")]),_:1}),e("，"),Q]),v,l("p",null,[L,e("：如果"),z,e("（"),t(n,{color:"cornflowerblue"},{default:o(()=>[e("后端的服务允许一定的异常发生，但是后端的架构服务要可以容错，把这些异常的错误处理掉，并对外重新提供正常的服务")]),_:1}),e("）")]),S,l("p",null,[e("可以支持更大的并发，"),l("strong",null,[e("提高后端"),t(n,{color:"green"},{default:o(()=>[e("并发能力")]),_:1}),e("和"),t(n,{color:"green"},{default:o(()=>[e("高可用容灾")]),_:1}),e("，基于"),t(n,{color:"green"},{default:o(()=>[e("主从复制")]),_:1}),e("技术实现")]),e("。"),l("u",null,[e("我们读操作多，写操作少，"),w,e("，数据的更新会记录在binlog，然后通过binlog同步到从库，客户端读数据的请求最终会转发到从库上（"),t(n,{color:"red"},{default:o(()=>[e("一主多从")]),_:1}),e("）")])]),I,l("p",null,[e("上图中的binlog，"),T,e("，只不过**"),t(n,{color:"green"},{default:o(()=>[e("主从复制")]),_:1}),e("就是通过"),t(n,{color:"green"},{default:o(()=>[e("binlog")]),_:1}),e("来复制的**")]),k,l("p",null,[e("主库master服务器"),l("u",null,[e("创建一个"),t(n,{color:"green"},{default:o(()=>[B]),_:1}),e("，"),X])]),V,l("p",null,[e("从库专门有一个"),l("u",null,[l("strong",null,[t(n,{color:"green"},{default:o(()=>[e("I/O线程")]),_:1})]),e("，专门读取接收主库发过来的binlog的内容，并写到中继日志relay log")]),e("，"),l("strong",null,[e("中继日志充当"),t(n,{color:"green"},{default:o(()=>[e("缓冲区")]),_:1}),e("，并不是把主库的binlog读过来直接执行，这样 master 就不必等待 slave 执行完成才发送下一个事件")])]),l("p",null,[N,e("： "),t(n,{color:"red"},{default:o(()=>[e("主库的binlog的内容可能很多，而从库接收到binlog的内容，然后再执行，再去接收binlog的内容，会比较慢")]),_:1}),e("。可以把binlog的内容写入relay log，作为缓冲区，等待SQL线程逐条执行。这样SQL线程就不用和dump线程进行读写同步了")]),l("p",null,[e("从库还会启一个"),l("u",null,[l("strong",null,[t(n,{color:"green"},{default:o(()=>[e("SQL线程")]),_:1})]),e("，专门从中继日志读取相应的操作，所有的SQL都执行一遍")]),e("，这样就实现了从库内容和主库内容的同步")]),A,O,l("ol",null,[l("li",null,[e("主库的更新操作写入binlog二进制日志中（"),t(n,{color:"red"},{default:o(()=>[e("主库需要打开binlog开关")]),_:1}),e("）")]),E,l("li",null,[e("slave执行"),W,e("命令会在从服务器创建一个IO线程，接收master的binary log复制到其中继日志（"),t(n,{color:"red"},{default:o(()=>[e("处于内存中，读写快")]),_:1}),e("）。 "),M]),Z]),C,q,J,l("p",null,[l("strong",null,[e("主从复制是"),t(n,{color:"red"},{default:o(()=>[e("单向同步")]),_:1}),e("，master的更改（binlog）往slave同步")]),e("。"),l("u",null,[e("配置好主从复制的时候，两个库的数据可能是不一样的，"),t(n,{color:"red"},{default:o(()=>[e("从配置好主从复制开始")]),_:1}),e("，主库所有的更改都会同步到从库")])]),H])}const R=a(b,[["render",U],["__file","主从复制原理.html.vue"]]);export{R as default};
