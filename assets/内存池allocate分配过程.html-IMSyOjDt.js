const e=JSON.parse('{"key":"v-a2d2b900","path":"/ccpp/19%20SGI%20STL%E4%BA%8C%E7%BA%A7%E7%A9%BA%E9%97%B4%E9%85%8D%E7%BD%AE%E5%99%A8%E5%86%85%E5%AD%98%E6%B1%A0%E6%BA%90%E7%A0%81/%E5%86%85%E5%AD%98%E6%B1%A0allocate%E5%88%86%E9%85%8D%E8%BF%87%E7%A8%8B.html","title":"内存池allocate分配过程","lang":"zh-CN","frontmatter":{"title":"内存池allocate分配过程","icon":"file","order":4,"headerDepth":4,"category":["c/c++"],"tag":["SGI STL源码"],"description":"内存池allocate分配过程 根据想分配的内存大小，先定位到_S_free_list 相应的元素__my_free_list（总共16个元素） 如果__my_free_list下没有挂着空闲的chunk块，那直接从备用内存或者使用malloc申请chunk块，然后分配空间 如果还有空闲的chunk块，那就使得_S_free_list 相应的元素指向__my_free_list下面挂着的下一块空闲的内存块，然后把前一块内存分配出去","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/ccpp/19%20SGI%20STL%E4%BA%8C%E7%BA%A7%E7%A9%BA%E9%97%B4%E9%85%8D%E7%BD%AE%E5%99%A8%E5%86%85%E5%AD%98%E6%B1%A0%E6%BA%90%E7%A0%81/%E5%86%85%E5%AD%98%E6%B1%A0allocate%E5%88%86%E9%85%8D%E8%BF%87%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"内存池allocate分配过程"}],["meta",{"property":"og:description","content":"内存池allocate分配过程 根据想分配的内存大小，先定位到_S_free_list 相应的元素__my_free_list（总共16个元素） 如果__my_free_list下没有挂着空闲的chunk块，那直接从备用内存或者使用malloc申请chunk块，然后分配空间 如果还有空闲的chunk块，那就使得_S_free_list 相应的元素指向__my_free_list下面挂着的下一块空闲的内存块，然后把前一块内存分配出去"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"SGI STL源码"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"内存池allocate分配过程\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":1.65,"words":496},"filePathRelative":"ccpp/19 SGI STL二级空间配置器内存池源码/内存池allocate分配过程.md","excerpt":"<h1> 内存池allocate分配过程</h1>\\n<p>根据想分配的内存大小，先定位到<code>_S_free_list</code> 相应的元素<code>__my_free_list</code>（总共16个元素）</p>\\n<ul>\\n<li>\\n<p>如果<code>__my_free_list</code>下没有挂着空闲的chunk块，那直接从备用内存或者使用malloc申请chunk块，然后分配空间</p>\\n</li>\\n<li>\\n<p>如果还有空闲的chunk块，那就使得<code>_S_free_list</code> 相应的元素指向<code>__my_free_list</code>下面挂着的下一块空闲的内存块，然后把前一块内存分配出去</p>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
