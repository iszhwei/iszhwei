import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as l,c as a,b as p,d as s,e as o,a as e}from"./app-rY1SOIco.js";const t="/assets/1681304245936-ec86952f-0f9e-4bb2-88f5-4413143ec6ce-17067070541361-V3jkAyKr.png",c="/assets/1682176612988-a935bd1b-9e0c-4e91-96d5-61d8dcf55f7e-Os6bYlMW.png",r={},B=s("h1",{id:"string",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#string","aria-hidden":"true"},"#"),o(" string")],-1),i=s("figure",null,[s("img",{src:t,alt:"",tabindex:"0",loading:"lazy"}),s("figcaption")],-1),y=e(`<h2 id="c风格字符串" tabindex="-1"><a class="header-anchor" href="#c风格字符串" aria-hidden="true">#</a> c风格字符串</h2><p>两种定义字符串方式：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//1.数组定义</span></span>
<span class="line"><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> str1</span><span style="color:#C678DD;">[]</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> {</span><span style="color:#98C379;">&#39;h&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;e&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;l&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;l&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;o&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;</span><span style="color:#56B6C2;">\\0</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;">};</span><span style="color:#7F848E;font-style:italic;">//局部变量，栈空间</span></span>
<span class="line"><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> str2</span><span style="color:#C678DD;">[]</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;hello&quot;</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">	//结尾自动包含\\0,等价于str1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//2.指针定义</span></span>
<span class="line"><span style="color:#C678DD;">char*</span><span style="color:#ABB2BF;"> str3 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;world&quot;</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">	//文字常量区</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>数组名</strong><code>char str1[]</code>实际上是<code>char * const str1</code>，<strong>只能修改数组值，不能修改指针指向</strong></li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">str2</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">] </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;H&#39;</span><span style="color:#ABB2BF;">;	</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//str2 = nullptr;	//error</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">str3</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">] </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;W&#39;</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">	//error,说明str3的内容是不可以被修改的，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//所以c++写c风格字符串最好写为const char* ,如果在修改内容编译器会报错提示</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;">str3 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;world&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> len1 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">sizeof</span><span style="color:#ABB2BF;">(str3);</span><span style="color:#7F848E;font-style:italic;">	//表示指针地址大小64位为8，32位为4</span></span>
<span class="line"><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> len2 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">strlen</span><span style="color:#ABB2BF;">(str3);</span><span style="color:#7F848E;font-style:italic;">	//表示存储字符的个数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//如何测试系统是32位还是64位？</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//sizeof(指针)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//size_t与int区别</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//1. size_t 实际上是unsigned int</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//2. size_t 具有跨平台的作用</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字符串处理在程序中应用广泛，C风格字符串是以&#39;\\0&#39;（空字符）来结尾的字符数组。对字符串进行操作的C函数定义在头文件&lt;string.h&gt;或中。常用的库函数如下：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//字符检查函数(非修改式操作)</span></span>
<span class="line"><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">strlen</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">const</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">*</span><span style="color:#E06C75;font-style:italic;">str</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;">//返回str的长度，不包括null结束符</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//比较lhs和rhs是否相同。lhs等于rhs,返回0; lhs大于rhs，返回正数; lhs小于rhs，返回负数</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">strcmp</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">const</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">*</span><span style="color:#E06C75;font-style:italic;">lhs</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">const</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">*</span><span style="color:#E06C75;font-style:italic;">rhs</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">strncmp</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">const</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">*</span><span style="color:#E06C75;font-style:italic;">lhs</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">const</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">*</span><span style="color:#E06C75;font-style:italic;">rhs</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">size_t</span><span style="color:#E06C75;"> </span><span style="color:#E06C75;font-style:italic;">count</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//在str中查找首次出现ch字符的位置；查找不到，返回空指针</span></span>
<span class="line"><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">*</span><span style="color:#61AFEF;">strchr</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">const</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">*</span><span style="color:#E06C75;font-style:italic;">str</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> </span><span style="color:#E06C75;font-style:italic;">ch</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//在str中查找首次出现子串substr的位置；查找不到，返回空指针</span></span>
<span class="line"><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">*</span><span style="color:#61AFEF;">strstr</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">const</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">char*</span><span style="color:#E06C75;"> </span><span style="color:#E06C75;font-style:italic;">str</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">const</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">char*</span><span style="color:#E06C75;"> </span><span style="color:#E06C75;font-style:italic;">substr</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//字符控制函数(修改式操作)</span></span>
<span class="line"><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">*</span><span style="color:#61AFEF;">strcpy</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">*</span><span style="color:#E06C75;font-style:italic;">dest</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">const</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">*</span><span style="color:#E06C75;font-style:italic;">src</span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;">//将src复制给dest，返回dest</span></span>
<span class="line"><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">*</span><span style="color:#61AFEF;">strncpy</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">*</span><span style="color:#E06C75;font-style:italic;">dest</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">const</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">*</span><span style="color:#E06C75;font-style:italic;">src</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">size_t</span><span style="color:#E06C75;"> </span><span style="color:#E06C75;font-style:italic;">count</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">*</span><span style="color:#61AFEF;">strcat</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">*</span><span style="color:#E06C75;font-style:italic;">dest</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">const</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">*</span><span style="color:#E06C75;font-style:italic;">src</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;">//concatenates two strings</span></span>
<span class="line"><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">*</span><span style="color:#61AFEF;">strncat</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">*</span><span style="color:#E06C75;font-style:italic;">dest</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">const</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">char</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">*</span><span style="color:#E06C75;font-style:italic;">src</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span><span style="color:#C678DD;">size_t</span><span style="color:#E06C75;"> </span><span style="color:#E06C75;font-style:italic;">count</span><span style="color:#E06C75;"> </span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在使用时，<u>程序员需要考虑字符数组大小的开辟，结尾空字符的处理</u>，使用起来有诸多不便。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">test0</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> str</span><span style="color:#C678DD;">[]</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;hello&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">*</span><span style="color:#ABB2BF;"> pstr </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;world&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">//求取字符串长度</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">printf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;</span><span style="color:#D19A66;">%d</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">strlen</span><span style="color:#ABB2BF;">(str));</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">//字符串拼接</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">*</span><span style="color:#ABB2BF;"> ptmp </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">char*</span><span style="color:#ABB2BF;">)</span><span style="color:#61AFEF;">malloc</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">strlen</span><span style="color:#ABB2BF;">(str) </span><span style="color:#C678DD;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">strlen</span><span style="color:#ABB2BF;">(pstr) </span><span style="color:#C678DD;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">strcpy</span><span style="color:#ABB2BF;">(ptmp, str);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">strcat</span><span style="color:#ABB2BF;">(ptmp, pstr);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">printf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;</span><span style="color:#D19A66;">%s</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">, ptmp);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">//查找子串</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">*</span><span style="color:#ABB2BF;"> p1 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">strstr</span><span style="color:#ABB2BF;">(ptmp, </span><span style="color:#98C379;">&quot;world&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">free</span><span style="color:#ABB2BF;">(ptmp);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>注意：<u>c/c++字符串使用的是双引号，数据库中字符串使用的是单引号</u></li></ul><h2 id="c-风格字符串" tabindex="-1"><a class="header-anchor" href="#c-风格字符串" aria-hidden="true">#</a> C++风格字符串</h2><p>C++提供了std::string（后面简写为string）类用于字符串的处理。string类定义在C++头文件中，注意和头文件区分，其实是对C标准库中的&lt;string.h&gt;的封装，其定义的是一些对C风格字符串的处理函数。</p><p>尽管C++支持C风格字符串，但在C++程序中最好还是不要使用它们。<u>这是因为C风格字符串不仅使用起来不太方便，而且极易引发程序漏洞</u>，是诸多安全问题的根本原因。**与C风格字符串相比，string不必担心内存是否足够、字符串长度，结尾的空白符等等。**string作为一个类出现，其集成的成员操作函数功能强大，几乎能满足所有的需求。从另一个角度上说，完全可以string当成是C++的内置数据类型，放在和int、double等内置类型同等位置上。<u>string类本质上其实是basic_string类模板关于char型的实例化。</u></p><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">#include</span><span style="color:#98C379;">&lt;string&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">//包含头文件</span></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::string;</span><span style="color:#7F848E;font-style:italic;">	//使用实体</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>我们先来看一个简单的例子：</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">test1</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //C风格字符串转换为C++风格字符串</span></span>
<span class="line"><span style="color:#ABB2BF;">    std::string s1 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;hello&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    std::string </span><span style="color:#61AFEF;">s2</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;world&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //求取字符串长度</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">s1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">size</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">s1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">length</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //字符串的遍历</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> idx </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">; idx </span><span style="color:#C678DD;">!=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">s1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">size</span><span style="color:#ABB2BF;">(); </span><span style="color:#C678DD;">++</span><span style="color:#ABB2BF;">idx) </span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">        cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">s1</span><span style="color:#ABB2BF;">[idx] </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot; &quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //字符串拼接</span></span>
<span class="line"><span style="color:#ABB2BF;">    std::string s3 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> s1 </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> s2;</span><span style="color:#7F848E;font-style:italic;">	//两个C++字符串拼接</span></span>
<span class="line"><span style="color:#ABB2BF;">    std::string s4 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> s1 </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;hahaha&quot;</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//与C字符串拼接</span></span>
<span class="line"><span style="color:#ABB2BF;">    std::string s5 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> s1 </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;A&#39;</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//与字符拼接</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">s1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">append</span><span style="color:#ABB2BF;">(s2);</span><span style="color:#7F848E;font-style:italic;">	//s1 = helloworld</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;s3 = &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> s3 </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;s4 = &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> s4 </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;s5 = &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> s5 </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //查找子串</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> pos </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">s1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;wor&quot;</span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;">	//5</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //截取子串</span></span>
<span class="line"><span style="color:#ABB2BF;">    std::string substr </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">s1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">substr</span><span style="color:#ABB2BF;">(pos);</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;substr = &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> substr </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span><span style="color:#7F848E;font-style:italic;"> //world</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>std::string提供了很多方便字符串操作的方法。</p><h3 id="string对象的构造" tabindex="-1"><a class="header-anchor" href="#string对象的构造" aria-hidden="true">#</a> string对象的构造</h3><p>首先来看一下string类型常用的构造函数</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">string</span><span style="color:#ABB2BF;">();</span><span style="color:#7F848E;font-style:italic;">//默认构造函数，生成一个空字符串</span></span>
<span class="line"><span style="color:#61AFEF;">string</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> rhs);</span><span style="color:#7F848E;font-style:italic;">//通过c风格字符串构造一个string对象</span></span>
<span class="line"><span style="color:#61AFEF;">string</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> rhs, size_type count);</span><span style="color:#7F848E;font-style:italic;">//通过rhs的前count个字符构造一个string对象</span></span>
<span class="line"><span style="color:#61AFEF;">string</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> string </span><span style="color:#56B6C2;">&amp;</span><span style="color:#ABB2BF;"> rhs);</span><span style="color:#7F848E;font-style:italic;">//复制拷贝构造函数</span></span>
<span class="line"><span style="color:#61AFEF;">string</span><span style="color:#ABB2BF;">(size_type count, </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> ch);</span><span style="color:#7F848E;font-style:italic;">//生成一个string对象，该对象包含count个ch字符</span></span>
<span class="line"><span style="color:#61AFEF;">string</span><span style="color:#ABB2BF;">(InputIt first, InputIt last);</span><span style="color:#7F848E;font-style:italic;">//以区间[first, last)内的字符创建一个string对象</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="string与c风格字符串的转换" tabindex="-1"><a class="header-anchor" href="#string与c风格字符串的转换" aria-hidden="true">#</a> string与C风格字符串的转换</h3><p>C风格字符串转换为string字符串相对来说比较简单，通过构造函数即可实现。但由于string字符串实际上是类对象，其并不以空字符&#39;\\0&#39;结尾，因此，string字符串向C风格字符串的转化是通过3个成员函数完成的，分别为:</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">*</span><span style="color:#61AFEF;">c_str</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">// 返回一个C风格字符串</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">*</span><span style="color:#61AFEF;">data</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">// c++11之后与c_str()效果一致</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//字符串的内容复制或写入既有的C风格字符串或字符数组内</span></span>
<span class="line"><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">copy</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">char*</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">dest</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">count</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">pos</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="元素遍历和存取" tabindex="-1"><a class="header-anchor" href="#元素遍历和存取" aria-hidden="true">#</a> 元素遍历和存取</h3><p>string对象可以使用下标操作符[]和函数at()对字符串中包含的字符进行访问。需要注意的是<strong>操作符[]并不检查索引是否有效</strong>，如果索引超出范围，会引起未定义的行为。而at()会检查，如果使用at()的时候索引无效，会抛出out_of_range异常。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">reference</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">operator</span><span style="color:#ABB2BF;">[]( </span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">pos</span><span style="color:#ABB2BF;"> );</span><span style="color:#7F848E;font-style:italic;">// 返回下标为pos的元素</span></span>
<span class="line"><span style="color:#E5C07B;">const_reference</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">operator</span><span style="color:#ABB2BF;">[]( </span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">pos</span><span style="color:#ABB2BF;"> ) </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">reference</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">at</span><span style="color:#ABB2BF;">( </span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">pos</span><span style="color:#ABB2BF;"> );</span><span style="color:#7F848E;font-style:italic;">// 返回下标为pos的元素</span></span>
<span class="line"><span style="color:#E5C07B;">const_reference</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">at</span><span style="color:#ABB2BF;">( </span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">pos</span><span style="color:#ABB2BF;"> ) </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除此以外，还可以使用迭代器进行遍历访问</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">iterator</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">begin</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">const_iterator</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">begin</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">iterator</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">const_iterator</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">reverse_iterator</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">rbegin</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">const_reverse_iterator</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">rbegin</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">reverse_iterator</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">rend</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">const_reverse_iterator</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">rend</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其示意图如下:</p><figure><img src="`+c+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="字符串的长度和容量相关" tabindex="-1"><a class="header-anchor" href="#字符串的长度和容量相关" aria-hidden="true">#</a> 字符串的长度和容量相关</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">empty</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">size</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">length</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">capacity</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">max_size</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="元素追加和相加" tabindex="-1"><a class="header-anchor" href="#元素追加和相加" aria-hidden="true">#</a> 元素追加和相加</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;operator</span><span style="color:#ABB2BF;">+=(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">tr</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;operator</span><span style="color:#ABB2BF;">+=(</span><span style="color:#E5C07B;">CharT</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">ch</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;operator</span><span style="color:#ABB2BF;">+=(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">CharT</span><span style="color:#C678DD;">*</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">s</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#61AFEF;">append</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">count</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">CharT</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">ch</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#61AFEF;">append</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">basic_string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">str</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#61AFEF;">append</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">CharT</span><span style="color:#C678DD;">*</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">s</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#61AFEF;">append</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">InputIt</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">first</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">InputIt</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">last</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//以下为非成员函数</span></span>
<span class="line"><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">operator</span><span style="color:#ABB2BF;">+(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">lhs</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">rhs</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">operator</span><span style="color:#ABB2BF;">+(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">lhs</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">char*</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">rhs</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">operator</span><span style="color:#ABB2BF;">+(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">char*</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">lhs</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">rhs</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">operator</span><span style="color:#ABB2BF;">+(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">lhs</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">rhs</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">operator</span><span style="color:#ABB2BF;">+(</span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">lhs</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">rhs</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="提取子串" tabindex="-1"><a class="header-anchor" href="#提取子串" aria-hidden="true">#</a> 提取子串</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">substr</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">pos</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">count</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> npos) </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="元素删除" tabindex="-1"><a class="header-anchor" href="#元素删除" aria-hidden="true">#</a> 元素删除</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">iterator</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">erase</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">iterator</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">position</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">iterator</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">erase</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">const_iterator</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">position</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">iterator</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">erase</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">iterator</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">first</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">iterator</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">last</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="元素清空" tabindex="-1"><a class="header-anchor" href="#元素清空" aria-hidden="true">#</a> 元素清空</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">clear</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="字符串比较" tabindex="-1"><a class="header-anchor" href="#字符串比较" aria-hidden="true">#</a> 字符串比较</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//非成员函数</span></span>
<span class="line"><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">operator</span><span style="color:#ABB2BF;">==(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">lhs</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">rhs</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">operator</span><span style="color:#ABB2BF;">!=(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">lhs</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">rhs</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">operator</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">lhs</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">rhs</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">operator</span><span style="color:#ABB2BF;">&lt;(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">lhs</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">rhs</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">operator</span><span style="color:#ABB2BF;">&gt;=(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">lhs</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">rhs</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">bool</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">operator</span><span style="color:#ABB2BF;">&lt;=(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">lhs</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">rhs</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="搜索与查找" tabindex="-1"><a class="header-anchor" href="#搜索与查找" aria-hidden="true">#</a> 搜索与查找</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//find系列：</span></span>
<span class="line"><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">basic_string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">str</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">pos</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">CharT</span><span style="color:#C678DD;">*</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">s</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">pos</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">CharT</span><span style="color:#C678DD;">*</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">s</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">pos</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">count</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">ch</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">pos</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> npos ) </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//rfind系列：</span></span>
<span class="line"><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">rfind</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">basic_string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">str</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">pos</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">rfind</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">CharT</span><span style="color:#C678DD;">*</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">s</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">pos</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">rfind</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">CharT</span><span style="color:#C678DD;">*</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">s</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">pos</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">count</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">rfind</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">ch</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">size_type</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">pos</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> npos) </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="课堂代码" tabindex="-1"><a class="header-anchor" href="#课堂代码" aria-hidden="true">#</a> 课堂代码</h2><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;string.h&gt;</span><span style="color:#7F848E;font-style:italic;">//C的头文件</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;iostream&gt;</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;string&gt;</span><span style="color:#7F848E;font-style:italic;">//C++头文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::cout;</span></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::endl;</span></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::string;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">{	</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //C风格字符串两种定义方式</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //1.用数组定义</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //char str1[] = {&#39;h&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;};</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //C风格字符串默认以&#39;\\0&#39;结尾</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;">  str1[] </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;hello&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> str2[] </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;world&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">str1</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">] </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;H&#39;</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//const *p1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /* str1 = nullptr;//error, * const */</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">printf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;str1 = </span><span style="color:#D19A66;">%s</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">, str1);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//2.用指针定义</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;">pstr </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;hello, world&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //debug定位小技巧,多使用printf打印信息</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /* printf(&quot;111\\n&quot;); */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /* pstr[0] = &#39;H&#39;;//error */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /* printf(&quot;222\\n&quot;); */</span></span>
<span class="line"><span style="color:#ABB2BF;">    pstr </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">nullptr</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /* printf(&quot;333\\n&quot;); */</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /* size_t len2 = sizeof(pstr);//8，指针的大小 */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /* size_t len3 = strlen(pstr);//13，以\\0结尾 */</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> len1 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">sizeof</span><span style="color:#ABB2BF;">(str1);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> len2 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">sizeof</span><span style="color:#ABB2BF;">(str2);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">printf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;len1 = </span><span style="color:#D19A66;">%lu</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">, len1);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">printf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;len2 = </span><span style="color:#D19A66;">%lu</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">, len2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> len </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> len1 </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> len2 </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;">pstr2 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> static_cast</span><span style="color:#C678DD;">&lt;char</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">*</span><span style="color:#C678DD;">&gt;</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">malloc</span><span style="color:#ABB2BF;">(len));</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">memset</span><span style="color:#ABB2BF;">(pstr2, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">sizeof</span><span style="color:#ABB2BF;">(len));</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">strcpy</span><span style="color:#ABB2BF;">(pstr2, str1);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">strcat</span><span style="color:#ABB2BF;">(pstr2, str2);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">printf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;pstr2 = </span><span style="color:#D19A66;">%s</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">, pstr2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">free</span><span style="color:#ABB2BF;">(pstr2);</span></span>
<span class="line"><span style="color:#ABB2BF;">    pstr2 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">nullptr</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">#if</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#C678DD;">typedef</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">struct</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> ia;</span></span>
<span class="line"><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> cb;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span><span style="color:#E5C07B;">structAA</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">structAA a;</span></span>
<span class="line"><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ia</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">cb</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;c&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">#endif</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">test2</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">//C++        C</span></span>
<span class="line"><span style="color:#ABB2BF;">    string s1 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;hello&quot;</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//C风格字符串可以转换为C++风格字符串</span></span>
<span class="line"><span style="color:#ABB2BF;">    string s2 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;world&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    string s3 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> s1 </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> s2;</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;s1 = &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> s1 </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl</span></span>
<span class="line"><span style="color:#ABB2BF;">         </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;s2 = &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> s2 </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl</span></span>
<span class="line"><span style="color:#ABB2BF;">         </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;s3 = &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> s3 </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //从C++风格字符串转换为C风格字符串</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;">pstr </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">s3</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">c_str</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;pstr = &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> pstr </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //C++风格字符串的长度</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /* size_t len1 = sizeof(s3);//32，与string的底层实现有关，不同系统不同模型值不同 */</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> len2 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">s3</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">size</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> len3 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">s3</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">length</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /* cout &lt;&lt; &quot;len1 = &quot; &lt;&lt; len1 &lt;&lt; endl; */</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;len2 = &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> len2 </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span><span style="color:#7F848E;font-style:italic;">//10</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;len3 = &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> len3 </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span><span style="color:#7F848E;font-style:italic;">//10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //遍历C++风格字符串</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">size_t</span><span style="color:#ABB2BF;"> idx </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">; idx </span><span style="color:#C678DD;">!=</span><span style="color:#ABB2BF;"> len2; </span><span style="color:#C678DD;">++</span><span style="color:#ABB2BF;">idx)</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">        cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">s3</span><span style="color:#ABB2BF;">[idx] </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;   &quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //C++风格字符串的拼接</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">    string s4 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> s3 </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;wuhan&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;s4 = &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> s4 </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">    string s5 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> s4 </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;A&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;s5 = &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> s5 </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">s5</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">append</span><span style="color:#ABB2BF;">(s1);</span></span>
<span class="line"><span style="color:#ABB2BF;">    cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;s5 = &quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> s5 </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">main</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">argc</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">**</span><span style="color:#E06C75;font-style:italic;">argv</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">test2</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实现一个string类" tabindex="-1"><a class="header-anchor" href="#实现一个string类" aria-hidden="true">#</a> 实现一个String类</h2><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;string.h&gt;</span></span>
<span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;iostream&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::cout;</span></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> std::endl;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">String</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#C678DD;">public:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">String</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">    : </span><span style="color:#61AFEF;">_pstr</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">nullptr</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /* : _pstr(new char[1]())//ok */</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">        cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;String()&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //pstr = nullptr</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">String</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">*</span><span style="color:#E06C75;font-style:italic;">pstr</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    : </span><span style="color:#61AFEF;">_pstr</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;">[</span><span style="color:#61AFEF;">strlen</span><span style="color:#ABB2BF;">(pstr) </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">]())</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">        cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;String(const char *)&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">strcpy</span><span style="color:#ABB2BF;">(_pstr, pstr);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">String</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">rhs</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    : </span><span style="color:#61AFEF;">_pstr</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;">[</span><span style="color:#61AFEF;">strlen</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">rhs</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_pstr</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">]())</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">        cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;String(const char *)&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">strcpy</span><span style="color:#ABB2BF;">(_pstr, </span><span style="color:#E5C07B;">rhs</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_pstr</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //str1 = str2;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">operator</span><span style="color:#ABB2BF;">=(</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">rhs</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">        cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;String &amp;operator=(const String &amp;)&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">!=</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;</span><span style="color:#ABB2BF;">rhs)</span><span style="color:#7F848E;font-style:italic;">//1、自复制</span></span>
<span class="line"><span style="color:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(_pstr)</span></span>
<span class="line"><span style="color:#ABB2BF;">            {</span></span>
<span class="line"><span style="color:#ABB2BF;">               </span><span style="color:#C678DD;">delete</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">[]</span><span style="color:#ABB2BF;"> _pstr;</span><span style="color:#7F848E;font-style:italic;">//2、释放左操作数</span></span>
<span class="line"><span style="color:#ABB2BF;">               _pstr </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">nullptr</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">            _pstr </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;">[</span><span style="color:#61AFEF;">strlen</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">rhs</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_pstr</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">]();</span><span style="color:#7F848E;font-style:italic;">//3、深拷贝</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#61AFEF;">strcpy</span><span style="color:#ABB2BF;">(_pstr, </span><span style="color:#E5C07B;">rhs</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_pstr</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">*</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//4、返回*this</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">~String</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">        cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;~String()&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(_pstr)</span></span>
<span class="line"><span style="color:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">delete</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">[]</span><span style="color:#ABB2BF;"> _pstr;</span></span>
<span class="line"><span style="color:#ABB2BF;">            _pstr </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">nullptr</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">print</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">const</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(_pstr)</span></span>
<span class="line"><span style="color:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#ABB2BF;">            cout </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> _pstr </span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">private:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">char</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> _pstr;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">main</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    String str1;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">str1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">print</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">#if</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">    String str2 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;Hello,world&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    String </span><span style="color:#61AFEF;">str3</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;wangdao&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">str2</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">print</span><span style="color:#ABB2BF;">();       </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">str3</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">print</span><span style="color:#ABB2BF;">();   </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    String str4 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> str3;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">str4</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">print</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    str4 </span><span style="color:#C678DD;">=</span><span style="color:#ABB2BF;"> str2;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">str4</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">print</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">#endif</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,48);function F(d,A){return l(),a("div",null,[B,i,p("more"),y])}const v=n(r,[["render",F],["__file","string.html.vue"]]);export{v as default};
