const e=JSON.parse('{"key":"v-f103c4b8","path":"/ccpp/01%20c%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/do-while(0).html","title":"do-while(0)","lang":"zh-CN","frontmatter":{"title":"do-while(0)","icon":"file","order":12,"headerDepth":4,"category":["c/c++"],"tag":["do-while(0)"],"description":"do-while(0) 为了代码分块，比仅仅使用{}更直观些。例如在cocos2d-x代码中 do { CCImage* pImage = new CCImage(); CC_BREAK_IF(NULL == pImage); bRet = pImage-&gt;initWithString(text, (int)dimensions.width, (int)dimensions.height, eAlign, fontName, (int)fontSize); CC_BREAK_IF(!bRet); bRet = initWithImage(pImage); CC_SAFE_RELEASE(pImage); } while (0);","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/ccpp/01%20c%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/do-while(0).html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"do-while(0)"}],["meta",{"property":"og:description","content":"do-while(0) 为了代码分块，比仅仅使用{}更直观些。例如在cocos2d-x代码中 do { CCImage* pImage = new CCImage(); CC_BREAK_IF(NULL == pImage); bRet = pImage-&gt;initWithString(text, (int)dimensions.width, (int)dimensions.height, eAlign, fontName, (int)fontSize); CC_BREAK_IF(!bRet); bRet = initWithImage(pImage); CC_SAFE_RELEASE(pImage); } while (0);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"do-while(0)"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"do-while(0)\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"为了代码分块，比仅仅使用{}更直观些。例如在cocos2d-x代码中","slug":"为了代码分块-比仅仅使用-更直观些。例如在cocos2d-x代码中","link":"#为了代码分块-比仅仅使用-更直观些。例如在cocos2d-x代码中","children":[]},{"level":2,"title":"宏展开的时候不会出错","slug":"宏展开的时候不会出错","link":"#宏展开的时候不会出错","children":[{"level":3,"title":"不使用{}把action1()、action2()包起来","slug":"不使用-把action1-、action2-包起来","link":"#不使用-把action1-、action2-包起来","children":[]},{"level":3,"title":"使用{}把action1()、action2()包起来","slug":"使用-把action1-、action2-包起来","link":"#使用-把action1-、action2-包起来","children":[]},{"level":3,"title":"使用do{...}while(0)来定义宏","slug":"使用do-while-0-来定义宏","link":"#使用do-while-0-来定义宏","children":[]}]},{"level":2,"title":"用到空宏","slug":"用到空宏","link":"#用到空宏","children":[]},{"level":2,"title":"我想跳到另外一段代码了，剩下的不执行了","slug":"我想跳到另外一段代码了-剩下的不执行了","link":"#我想跳到另外一段代码了-剩下的不执行了","children":[]}],"git":{},"readingTime":{"minutes":2.96,"words":889},"filePathRelative":"ccpp/01 c语言基础/do-while(0).md","excerpt":"<h1> do-while(0)</h1>\\n<h2> 为了代码<strong>分块</strong>，比仅仅使用{}更直观些。例如在<code>cocos2d-x</code>代码中</h2>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #C678DD\\">do</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    CCImage</span><span style=\\"color: #C678DD\\">*</span><span style=\\"color: #ABB2BF\\"> pImage </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> new </span><span style=\\"color: #61AFEF\\">CCImage</span><span style=\\"color: #ABB2BF\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #61AFEF\\">CC_BREAK_IF</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #D19A66\\">NULL</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">==</span><span style=\\"color: #ABB2BF\\"> pImage);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    bRet </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">pImage</span><span style=\\"color: #ABB2BF\\">-&gt;</span><span style=\\"color: #61AFEF\\">initWithString</span><span style=\\"color: #ABB2BF\\">(text, (</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\">)</span><span style=\\"color: #E5C07B\\">dimensions</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #E06C75\\">width</span><span style=\\"color: #ABB2BF\\">, (</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\">)</span><span style=\\"color: #E5C07B\\">dimensions</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #E06C75\\">height</span><span style=\\"color: #ABB2BF\\">, eAlign, fontName, (</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\">)fontSize);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #61AFEF\\">CC_BREAK_IF</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #56B6C2\\">!</span><span style=\\"color: #ABB2BF\\">bRet);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    bRet </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">initWithImage</span><span style=\\"color: #ABB2BF\\">(pImage);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #61AFEF\\">CC_SAFE_RELEASE</span><span style=\\"color: #ABB2BF\\">(pImage);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">} </span><span style=\\"color: #C678DD\\">while</span><span style=\\"color: #ABB2BF\\"> (</span><span style=\\"color: #D19A66\\">0</span><span style=\\"color: #ABB2BF\\">);</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
