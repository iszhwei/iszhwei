const e=JSON.parse('{"key":"v-3945022c","path":"/algo/01%20%E6%95%B0%E7%BB%84/LeetCode%2027.%20%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0.html","title":"LeetCode 27. 移除元素","lang":"zh-CN","frontmatter":{"title":"LeetCode 27. 移除元素","icon":"code","order":2,"category":["数据结构与算法"],"tag":["数组","双指针"],"description":"LeetCode 27. 移除元素 **题目描述：**数组nums中原地移除值为val的元素，返回新数组长度 双指针：一层查找，一层覆盖 双指针：一层查找，一层覆盖 通过这道题大致了解erase()的大致实现 由这道题可知erase()函数的时间复杂度应是O(n)","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/algo/01%20%E6%95%B0%E7%BB%84/LeetCode%2027.%20%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"LeetCode 27. 移除元素"}],["meta",{"property":"og:description","content":"LeetCode 27. 移除元素 **题目描述：**数组nums中原地移除值为val的元素，返回新数组长度 双指针：一层查找，一层覆盖 双指针：一层查找，一层覆盖 通过这道题大致了解erase()的大致实现 由这道题可知erase()函数的时间复杂度应是O(n)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"数组"}],["meta",{"property":"article:tag","content":"双指针"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"LeetCode 27. 移除元素\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"同向双指针法","slug":"同向双指针法","link":"#同向双指针法","children":[]},{"level":2,"title":"相向双指针法","slug":"相向双指针法","link":"#相向双指针法","children":[]}],"git":{},"readingTime":{"minutes":1.64,"words":493},"filePathRelative":"algo/01 数组/LeetCode 27. 移除元素.md","excerpt":"<p><a href=\\"https://leetcode.cn/problems/remove-element/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">LeetCode 27. 移除元素</a></p>\\n<p>**题目描述：**数组nums中<u>原地</u>移除值为val的元素，返回新数组长度</p>\\n<p>双指针：一层查找，一层覆盖</p>\\n<!--more-->\\n<p>双指针：一层查找，一层覆盖</p>\\n<blockquote>\\n<ul>\\n<li>\\n<p>通过这道题大致了解<code>erase()</code>的大致实现</p>\\n</li>\\n<li>\\n<p>由这道题可知<code>erase()</code>函数的时间复杂度应是<code>O(n)</code></p>\\n</li>\\n</ul>\\n</blockquote>","autoDesc":true}');export{e as data};
