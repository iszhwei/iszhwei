const e=JSON.parse('{"key":"v-91127220","path":"/linux/03%20%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/CMake%E7%9A%84%E4%BD%BF%E7%94%A8.html","title":"CMake的使用","lang":"zh-CN","frontmatter":{"title":"CMake的使用","icon":"file","order":4,"headerDepth":4,"category":["linux"],"tag":["编译工具"],"description":"CMake的使用 CMake介绍 CMake： 使用简单方便，可以跨平台，构建项目编译环境。比直接写Makefile简单()，可以通过简单的，一个命令便将我们项目想编译的可执行文件、静态库、动态库都编译出来了。 安装 Linux环境安装CMake sudo apt install cmake cmake -version #查看版本","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/linux/03%20%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/CMake%E7%9A%84%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"CMake的使用"}],["meta",{"property":"og:description","content":"CMake的使用 CMake介绍 CMake： 使用简单方便，可以跨平台，构建项目编译环境。比直接写Makefile简单()，可以通过简单的，一个命令便将我们项目想编译的可执行文件、静态库、动态库都编译出来了。 安装 Linux环境安装CMake sudo apt install cmake cmake -version #查看版本"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"编译工具"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CMake的使用\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"CMake介绍","slug":"cmake介绍","link":"#cmake介绍","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"Linux环境安装CMake","slug":"linux环境安装cmake","link":"#linux环境安装cmake","children":[]},{"level":3,"title":"vscode环境安装CMake","slug":"vscode环境安装cmake","link":"#vscode环境安装cmake","children":[]}]},{"level":2,"title":"使用方法","slug":"使用方法","link":"#使用方法","children":[{"level":3,"title":"Linux上CMake使用","slug":"linux上cmake使用","link":"#linux上cmake使用","children":[]},{"level":3,"title":"vscode使用","slug":"vscode使用","link":"#vscode使用","children":[]},{"level":3,"title":"CMake常用预定义变量","slug":"cmake常用预定义变量","link":"#cmake常用预定义变量","children":[]},{"level":3,"title":"添加可执行文件作为构建目标","slug":"添加可执行文件作为构建目标","link":"#添加可执行文件作为构建目标","children":[]},{"level":3,"title":"添加编译选项","slug":"添加编译选项","link":"#添加编译选项","children":[]},{"level":3,"title":"添加控制选项","slug":"添加控制选项","link":"#添加控制选项","children":[]},{"level":3,"title":"为什么要在 build 目录下运行 cmake？","slug":"为什么要在-build-目录下运行-cmake","link":"#为什么要在-build-目录下运行-cmake","children":[]},{"level":3,"title":"CMAKE_BUILD_TYPE控制构建类型","slug":"cmake-build-type控制构建类型","link":"#cmake-build-type控制构建类型","children":[]},{"level":3,"title":"NDEBUG宏的使用","slug":"ndebug宏的使用","link":"#ndebug宏的使用","children":[]},{"level":3,"title":"几个目录","slug":"几个目录","link":"#几个目录","children":[]}]}],"git":{},"readingTime":{"minutes":9.02,"words":2707},"filePathRelative":"linux/03 编译工具/CMake的使用.md","excerpt":"<h1> CMake的使用</h1>\\n<h2> CMake介绍</h2>\\n<p><strong>CMake： 使用简单方便，可以跨平台，构建项目编译环境。比直接写Makefile简单()，可以通过简单的，一个命令便将我们项目想编译的可执行文件、静态库、动态库都编译出来了。</strong></p>\\n<h2> 安装</h2>\\n<h3> Linux环境安装CMake</h3>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #61AFEF\\">sudo</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">apt</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">install</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">cmake</span></span>\\n<span class=\\"line\\"><span style=\\"color: #61AFEF\\">cmake</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">-version</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #7F848E; font-style: italic\\">#查看版本</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
