const s=JSON.parse('{"key":"v-1073124a","path":"/ccpp/02%20c__%E5%9F%BA%E7%A1%80/c__%E5%88%9D%E6%8E%A2.html","title":"c++初探","lang":"zh-CN","frontmatter":{"title":"c++初探","icon":"file","order":1,"headerDepth":4,"category":["c/c++"],"tag":["c++基础"],"description":"#include &lt;stdio.h&gt; #include &lt;iostream&gt;//C++头文件没有加.h，因为C++头文件都是用模板写的， //而模板有个特点：必须要知道所有实现之后才能正常编译 using namespace std;//命名空间 //函数的声明 //函数声明可以有多次，函数定义只能有一次 void test(); void test(); void test(); void test(); void test(); void test() { } int main(int argc, char **argv) { /* &amp;10;//error,字面值常量,右值，不能取地址 */ /* &amp;\\"Hello, world\\";//ok */ //cout,标准输出 //&lt;&lt;,输出流运算符 //\\"Hello world\\",字符串常量 //endl end of line cout &lt;&lt; \\"Hello world\\" &lt;&lt; endl; operator&lt;&lt;(cout, \\"Hello world\\").operator&lt;&lt;(endl);//运算符重载 int number = 0; //cin，标准输入 //&gt;&gt;，输入流运算符 cin &gt;&gt; number; cout &lt;&lt; \\"number = \\" &lt;&lt; number &lt;&lt; endl; return 0; }","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/ccpp/02%20c__%E5%9F%BA%E7%A1%80/c__%E5%88%9D%E6%8E%A2.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"c++初探"}],["meta",{"property":"og:description","content":"#include &lt;stdio.h&gt; #include &lt;iostream&gt;//C++头文件没有加.h，因为C++头文件都是用模板写的， //而模板有个特点：必须要知道所有实现之后才能正常编译 using namespace std;//命名空间 //函数的声明 //函数声明可以有多次，函数定义只能有一次 void test(); void test(); void test(); void test(); void test(); void test() { } int main(int argc, char **argv) { /* &amp;10;//error,字面值常量,右值，不能取地址 */ /* &amp;\\"Hello, world\\";//ok */ //cout,标准输出 //&lt;&lt;,输出流运算符 //\\"Hello world\\",字符串常量 //endl end of line cout &lt;&lt; \\"Hello world\\" &lt;&lt; endl; operator&lt;&lt;(cout, \\"Hello world\\").operator&lt;&lt;(endl);//运算符重载 int number = 0; //cin，标准输入 //&gt;&gt;，输入流运算符 cin &gt;&gt; number; cout &lt;&lt; \\"number = \\" &lt;&lt; number &lt;&lt; endl; return 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"c++基础"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++初探\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":0.89,"words":267},"filePathRelative":"ccpp/02 c++基础/c++初探.md","excerpt":"<!--more-->\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;stdio.h&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;iostream&gt;</span><span style=\\"color: #7F848E; font-style: italic\\">//C++头文件没有加.h，因为C++头文件都是用模板写的，</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">                   </span><span style=\\"color: #7F848E; font-style: italic\\">//而模板有个特点：必须要知道所有实现之后才能正常编译</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">using namespace std;</span><span style=\\"color: #7F848E; font-style: italic\\">//命名空间</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">//函数的声明</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">//函数声明可以有多次，函数定义只能有一次</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">test</span><span style=\\"color: #ABB2BF\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">test</span><span style=\\"color: #ABB2BF\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">test</span><span style=\\"color: #ABB2BF\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">test</span><span style=\\"color: #ABB2BF\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">test</span><span style=\\"color: #ABB2BF\\">();</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">test</span><span style=\\"color: #ABB2BF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">{</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">main</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #E06C75\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">argc</span><span style=\\"color: #ABB2BF\\">,</span><span style=\\"color: #E06C75\\"> </span><span style=\\"color: #C678DD\\">char</span><span style=\\"color: #E06C75\\"> </span><span style=\\"color: #C678DD\\">**</span><span style=\\"color: #E06C75; font-style: italic\\">argv</span><span style=\\"color: #ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">    /* &amp;10;//error,字面值常量,右值，不能取地址 */</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">    /* &amp;\\"Hello, world\\";//ok */</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #7F848E; font-style: italic\\">//cout,标准输出</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #7F848E; font-style: italic\\">//&lt;&lt;,输出流运算符</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #7F848E; font-style: italic\\">//\\"Hello world\\",字符串常量</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #7F848E; font-style: italic\\">//endl end of line</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"Hello world\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    operator</span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\">(cout, </span><span style=\\"color: #98C379\\">\\"Hello world\\"</span><span style=\\"color: #ABB2BF\\">).</span><span style=\\"color: #E06C75\\">operator</span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\">(endl);</span><span style=\\"color: #7F848E; font-style: italic\\">//运算符重载</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> number </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">0</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #7F848E; font-style: italic\\">//cin，标准输入</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #7F848E; font-style: italic\\">//&gt;&gt;，输入流运算符</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    cin </span><span style=\\"color: #C678DD\\">&gt;&gt;</span><span style=\\"color: #ABB2BF\\"> number;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"number = \\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> number </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">0</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{s as data};
