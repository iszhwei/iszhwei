const e=JSON.parse('{"key":"v-1155c5a0","path":"/ccpp/02%20c__%E5%9F%BA%E7%A1%80/%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4.html","title":"命名空间","lang":"zh-CN","frontmatter":{"title":"命名空间","icon":"file","order":2,"headerDepth":4,"category":["c/c++"],"tag":["c++基础"],"description":"命名空间 image-20240101150131801 为什么要使用命名空间？ 一个大型的工程往往是由若干个人独立完成的，不同的人分别完成不同的部分，最后再组合成一个完整的程序。由于各个头文件是由不同的人设计的，有可能在不同的头文件中用了相同的名字来命名所定义的类或函数，这样在程序中就会出现名字冲突。不仅如此，有可能我们自己定义的名字会与C++库中的名字发生冲突。 名字冲突就是在同一个作用域中有两个或多个同名的实体，为了解决 ，C++中引入了命名空间，所谓命名空间就是一个可以由用户自己定义的作用域，在不同的作用域中可以定义相同名字的变量，互不干扰，系统能够区分它们。","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/ccpp/02%20c__%E5%9F%BA%E7%A1%80/%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"命名空间"}],["meta",{"property":"og:description","content":"命名空间 image-20240101150131801 为什么要使用命名空间？ 一个大型的工程往往是由若干个人独立完成的，不同的人分别完成不同的部分，最后再组合成一个完整的程序。由于各个头文件是由不同的人设计的，有可能在不同的头文件中用了相同的名字来命名所定义的类或函数，这样在程序中就会出现名字冲突。不仅如此，有可能我们自己定义的名字会与C++库中的名字发生冲突。 名字冲突就是在同一个作用域中有两个或多个同名的实体，为了解决 ，C++中引入了命名空间，所谓命名空间就是一个可以由用户自己定义的作用域，在不同的作用域中可以定义相同名字的变量，互不干扰，系统能够区分它们。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"c++基础"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"命名空间\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"为什么要使用命名空间？","slug":"为什么要使用命名空间","link":"#为什么要使用命名空间","children":[]},{"level":2,"title":"什么是命名空间","slug":"什么是命名空间","link":"#什么是命名空间","children":[{"level":3,"title":"基本格式","slug":"基本格式","link":"#基本格式","children":[]},{"level":3,"title":"存放的类型","slug":"存放的类型","link":"#存放的类型","children":[]},{"level":3,"title":"可见域","slug":"可见域","link":"#可见域","children":[]}]},{"level":2,"title":"命名空间的使用方式","slug":"命名空间的使用方式","link":"#命名空间的使用方式","children":[{"level":3,"title":"using编译指令","slug":"using编译指令","link":"#using编译指令","children":[]},{"level":3,"title":"作用域限定符","slug":"作用域限定符","link":"#作用域限定符","children":[]},{"level":3,"title":"using声明机制👍","slug":"using声明机制👍","link":"#using声明机制👍","children":[]},{"level":3,"title":"匿名命名空间","slug":"匿名命名空间","link":"#匿名命名空间","children":[]}]},{"level":2,"title":"命名空间的嵌套及覆盖","slug":"命名空间的嵌套及覆盖","link":"#命名空间的嵌套及覆盖","children":[]},{"level":2,"title":"对命名空间的思考和总结","slug":"对命名空间的思考和总结","link":"#对命名空间的思考和总结","children":[]},{"level":2,"title":"课内代码","slug":"课内代码","link":"#课内代码","children":[]}],"git":{},"readingTime":{"minutes":8.92,"words":2675},"filePathRelative":"ccpp/02 c++基础/命名空间.md","excerpt":"<h1> 命名空间</h1>\\n<figure><figcaption>image-20240101150131801</figcaption></figure>\\n<!--more-->\\n<h2> 为什么要使用命名空间？</h2>\\n<p>一个大型的工程往往是由若干个人独立完成的，不同的人分别完成不同的部分，最后再组合成一个完整的程序。由于各个头文件是由不同的人设计的，有可能在不同的头文件中用了相同的名字来命名所定义的类或函数，这样在程序中就会出现名字冲突。不仅如此，有可能我们自己定义的名字会与C++库中的名字发生冲突。</p>\\n<p>名字冲突就是在同一个作用域中有两个或多个同名的实体，<u>为了解决 ，C++中引入了<strong>命名空间</strong></u>，所谓命名空间就是一个可以由用户自己定义的作用域，在不同的作用域中可以定义相同名字的变量，互不干扰，系统能够区分它们。</p>","autoDesc":true}');export{e as data};
