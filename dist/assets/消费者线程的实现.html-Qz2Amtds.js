const n=JSON.parse('{"key":"v-51fa1311","path":"/mysql/12%20%E8%BF%9E%E6%8E%A5%E6%B1%A0/%E6%B6%88%E8%B4%B9%E8%80%85%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%AE%9E%E7%8E%B0.html","title":"消费者线程的实现","lang":"zh-CN","frontmatter":{"title":"消费者线程的实现","icon":"file","order":6,"headerDepth":4,"category":["mysql"],"tag":["mysql连接池"],"description":"消费者线程的实现 //消费者线程函数，从队列中获取连接 shared_ptr&lt;Connection&gt; ConnectionPool::getConnection() { unique_lock&lt;mutex&gt; lock(_queueMutex); while(_connectionQue.empty()) { cond.wait_for(lock, std::chrono::milliseconds(_connectionTimeout)); if(_connectionQue.empty()) { LOG(\\"获取空闲连接超时了...获取连接失败!\\"); return nullptr; } } shared_ptr&lt;Connection&gt; sp(_connectionQue.front()); _connectionQue.pop(); if(_connectionQue.empty()) { cond.notify_all(); } }","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/mysql/12%20%E8%BF%9E%E6%8E%A5%E6%B1%A0/%E6%B6%88%E8%B4%B9%E8%80%85%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%AE%9E%E7%8E%B0.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"消费者线程的实现"}],["meta",{"property":"og:description","content":"消费者线程的实现 //消费者线程函数，从队列中获取连接 shared_ptr&lt;Connection&gt; ConnectionPool::getConnection() { unique_lock&lt;mutex&gt; lock(_queueMutex); while(_connectionQue.empty()) { cond.wait_for(lock, std::chrono::milliseconds(_connectionTimeout)); if(_connectionQue.empty()) { LOG(\\"获取空闲连接超时了...获取连接失败!\\"); return nullptr; } } shared_ptr&lt;Connection&gt; sp(_connectionQue.front()); _connectionQue.pop(); if(_connectionQue.empty()) { cond.notify_all(); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"mysql连接池"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"消费者线程的实现\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"重置智能指针析构","slug":"重置智能指针析构","link":"#重置智能指针析构","children":[]},{"level":2,"title":"wait_for() 优化","slug":"wait-for-优化","link":"#wait-for-优化","children":[]},{"level":2,"title":"最终版 消费者线程处理函数","slug":"最终版-消费者线程处理函数","link":"#最终版-消费者线程处理函数","children":[]}],"git":{},"readingTime":{"minutes":1.98,"words":593},"filePathRelative":"mysql/12 连接池/消费者线程的实现.md","excerpt":"<h1> 消费者线程的实现</h1>\\n<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">//消费者线程函数，从队列中获取连接</span></span>\\n<span class=\\"line\\"><span style=\\"color: #E5C07B\\">shared_ptr</span><span style=\\"color: #ABB2BF\\">&lt;</span><span style=\\"color: #E5C07B\\">Connection</span><span style=\\"color: #ABB2BF\\">&gt; </span><span style=\\"color: #E5C07B\\">ConnectionPool</span><span style=\\"color: #ABB2BF\\">::</span><span style=\\"color: #61AFEF\\">getConnection</span><span style=\\"color: #ABB2BF\\">() {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    unique_lock</span><span style=\\"color: #C678DD\\">&lt;</span><span style=\\"color: #ABB2BF\\">mutex</span><span style=\\"color: #C678DD\\">&gt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">lock</span><span style=\\"color: #ABB2BF\\">(_queueMutex);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">while</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">_connectionQue</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">empty</span><span style=\\"color: #ABB2BF\\">()) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #E5C07B\\">cond</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">wait_for</span><span style=\\"color: #ABB2BF\\">(lock, std::</span><span style=\\"color: #E5C07B\\">chrono</span><span style=\\"color: #ABB2BF\\">::</span><span style=\\"color: #61AFEF\\">milliseconds</span><span style=\\"color: #ABB2BF\\">(_connectionTimeout));</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">_connectionQue</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">empty</span><span style=\\"color: #ABB2BF\\">()) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            </span><span style=\\"color: #61AFEF\\">LOG</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #98C379\\">\\"获取空闲连接超时了...获取连接失败!\\"</span><span style=\\"color: #ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">nullptr</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        } </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    shared_ptr</span><span style=\\"color: #C678DD\\">&lt;</span><span style=\\"color: #ABB2BF\\">Connection</span><span style=\\"color: #C678DD\\">&gt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">sp</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">_connectionQue</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">front</span><span style=\\"color: #ABB2BF\\">());</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #E5C07B\\">_connectionQue</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">pop</span><span style=\\"color: #ABB2BF\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">_connectionQue</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">empty</span><span style=\\"color: #ABB2BF\\">()) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #E5C07B\\">cond</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">notify_all</span><span style=\\"color: #ABB2BF\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
