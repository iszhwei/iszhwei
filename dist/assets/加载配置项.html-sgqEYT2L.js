const n=JSON.parse('{"key":"v-fb24ca0e","path":"/mysql/12%20%E8%BF%9E%E6%8E%A5%E6%B1%A0/%E5%8A%A0%E8%BD%BD%E9%85%8D%E7%BD%AE%E9%A1%B9.html","title":"加载配置项","lang":"zh-CN","frontmatter":{"title":"加载配置项","icon":"file","order":4,"headerDepth":4,"category":["mysql"],"tag":["mysql连接池"],"description":"加载配置项 #ifndef _CONNECTIONPOOL_H #define _CONNECTIONPOOL_H #include &lt;string&gt; #include &lt;queue&gt; #include &lt;mutex&gt; #include &lt;atomic&gt; //atomic_int 原子类型 #include \\"connection.h\\" using std::string; using std::queue; using std::mutex; class ConnectionPool { public: static ConnectionPool* getConnectionPool(); private: ConnectionPool(); ~ConnectionPool(); public: //测试的时候可以先变成共有的 bool loadConfigFile(); private: \\tstring _ip; // mysql的ip地址 \\tunsigned short _port; // mysql的端口号 3306 \\tstring _username; // mysql登录用户名 \\tstring _password; // mysql登录密码 \\tstring _dbname; // 连接的数据库名称 \\tint _initSize; // 连接池的初始连接量 \\tint _maxSize; // 连接池的最大连接量 \\tint _maxIdleTime; // 连接池最大空闲时间 \\tint _connectionTimeout; // 连接池获取连接的超时时间 queue&lt;Connection*&gt; _connectionQue; // 存储mysql连接的队列 mutex _queueMutex; // 维护连接队列的线程安全互斥锁 std::atomic_int _connectionCnt; // 记录连接所创建的connection连接的总数量 }; #endif //_CONNECTIONPOOL_H","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/mysql/12%20%E8%BF%9E%E6%8E%A5%E6%B1%A0/%E5%8A%A0%E8%BD%BD%E9%85%8D%E7%BD%AE%E9%A1%B9.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"加载配置项"}],["meta",{"property":"og:description","content":"加载配置项 #ifndef _CONNECTIONPOOL_H #define _CONNECTIONPOOL_H #include &lt;string&gt; #include &lt;queue&gt; #include &lt;mutex&gt; #include &lt;atomic&gt; //atomic_int 原子类型 #include \\"connection.h\\" using std::string; using std::queue; using std::mutex; class ConnectionPool { public: static ConnectionPool* getConnectionPool(); private: ConnectionPool(); ~ConnectionPool(); public: //测试的时候可以先变成共有的 bool loadConfigFile(); private: \\tstring _ip; // mysql的ip地址 \\tunsigned short _port; // mysql的端口号 3306 \\tstring _username; // mysql登录用户名 \\tstring _password; // mysql登录密码 \\tstring _dbname; // 连接的数据库名称 \\tint _initSize; // 连接池的初始连接量 \\tint _maxSize; // 连接池的最大连接量 \\tint _maxIdleTime; // 连接池最大空闲时间 \\tint _connectionTimeout; // 连接池获取连接的超时时间 queue&lt;Connection*&gt; _connectionQue; // 存储mysql连接的队列 mutex _queueMutex; // 维护连接队列的线程安全互斥锁 std::atomic_int _connectionCnt; // 记录连接所创建的connection连接的总数量 }; #endif //_CONNECTIONPOOL_H"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"mysql连接池"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"加载配置项\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":2.07,"words":621},"filePathRelative":"mysql/12 连接池/加载配置项.md","excerpt":"<h1> 加载配置项</h1>\\n<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #C678DD\\">#ifndef</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">_CONNECTIONPOOL_H</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#define</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">_CONNECTIONPOOL_H</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;string&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;queue&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;mutex&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;atomic&gt;</span><span style=\\"color: #ABB2BF\\">   </span><span style=\\"color: #7F848E; font-style: italic\\">//atomic_int  原子类型</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"connection.h\\"</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::string;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::queue;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::mutex;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">class</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">ConnectionPool</span><span style=\\"color: #ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">public:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">static</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">ConnectionPool</span><span style=\\"color: #C678DD\\">*</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">getConnectionPool</span><span style=\\"color: #ABB2BF\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">private:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #61AFEF\\">ConnectionPool</span><span style=\\"color: #ABB2BF\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #61AFEF\\">~ConnectionPool</span><span style=\\"color: #ABB2BF\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">public:</span><span style=\\"color: #7F848E; font-style: italic\\"> //测试的时候可以先变成共有的</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">bool</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">loadConfigFile</span><span style=\\"color: #ABB2BF\\">();</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">private:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\tstring _ip;</span><span style=\\"color: #7F848E; font-style: italic\\"> // mysql的ip地址</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t</span><span style=\\"color: #C678DD\\">unsigned</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">short</span><span style=\\"color: #ABB2BF\\"> _port;</span><span style=\\"color: #7F848E; font-style: italic\\"> // mysql的端口号 3306</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\tstring _username;</span><span style=\\"color: #7F848E; font-style: italic\\"> // mysql登录用户名</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\tstring _password;</span><span style=\\"color: #7F848E; font-style: italic\\"> // mysql登录密码</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\tstring _dbname;</span><span style=\\"color: #7F848E; font-style: italic\\"> // 连接的数据库名称</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> _initSize;</span><span style=\\"color: #7F848E; font-style: italic\\"> // 连接池的初始连接量</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> _maxSize;</span><span style=\\"color: #7F848E; font-style: italic\\"> // 连接池的最大连接量</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> _maxIdleTime;</span><span style=\\"color: #7F848E; font-style: italic\\"> // 连接池最大空闲时间</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">\\t</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> _connectionTimeout;</span><span style=\\"color: #7F848E; font-style: italic\\"> // 连接池获取连接的超时时间</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    queue</span><span style=\\"color: #C678DD\\">&lt;</span><span style=\\"color: #ABB2BF\\">Connection</span><span style=\\"color: #56B6C2\\">*</span><span style=\\"color: #C678DD\\">&gt;</span><span style=\\"color: #ABB2BF\\"> _connectionQue;</span><span style=\\"color: #7F848E; font-style: italic\\">  // 存储mysql连接的队列</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    mutex _queueMutex;</span><span style=\\"color: #7F848E; font-style: italic\\">  // 维护连接队列的线程安全互斥锁</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    std::atomic_int _connectionCnt;</span><span style=\\"color: #7F848E; font-style: italic\\"> // 记录连接所创建的connection连接的总数量 </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">};</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#endif</span><span style=\\"color: #7F848E; font-style: italic\\"> //_CONNECTIONPOOL_H</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
