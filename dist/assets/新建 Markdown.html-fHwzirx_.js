const s=JSON.parse('{"key":"v-f1165cc2","path":"/algo/%E6%A0%88/%E6%96%B0%E5%BB%BA%20Markdown.html","title":"页面配置","lang":"zh-CN","frontmatter":{"title":"页面配置","icon":"file","order":3,"headerDepth":4,"category":["使用指南"],"tag":["页面配置","使用指南"],"description":"顺序栈的实现 #include &lt;iostream&gt; #include &lt;stdexcept&gt; #include &lt;cstring&gt; using std::cout; using std::endl; class SeqStack { public: SeqStack(int cap = 3) :_top(0) ,_cap(cap) { _pstack = new int[_cap](); } ~SeqStack() { delete[] _pstack;//不要用delete _pstack = nullptr; } void push(int val) { if(_top == _cap) { //栈满了 expand(2*_cap); } _pstack[_top] = val; ++_top; } void pop() { if(_top == 0){ throw \\"Stack is empty!!!\\"; } --_top; } int top() { if(_top == 0) { throw \\"Stack is empty!!!\\"; } return _pstack[_top-1]; } bool empty() { return _top == 0; } private: void expand(int size) { int* newStack = new int[size]; memcpy(newStack, _pstack, _top*sizeof(int)); delete[] _pstack; //这里也是delete[] _pstack = newStack; _cap = size; } public: int* _pstack; //指向数据域 int _top; //指向栈顶,也是栈的大小 int _cap; //栈的容量 }; int main() { SeqStack s; s.push(12); s.push(17); s.push(100); s.push(78); //cout &lt;&lt; s.top() &lt;&lt; endl; //s.pop(); //cout &lt;&lt; s.top() &lt;&lt; endl; //s.pop(); //cout &lt;&lt; s.top() &lt;&lt; endl; //s.pop(); //cout &lt;&lt; s.top() &lt;&lt; endl; //s.pop(); while(!s.empty()) { cout &lt;&lt; s.top() &lt;&lt; endl; s.pop(); } return 0; }","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/algo/%E6%A0%88/%E6%96%B0%E5%BB%BA%20Markdown.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"页面配置"}],["meta",{"property":"og:description","content":"顺序栈的实现 #include &lt;iostream&gt; #include &lt;stdexcept&gt; #include &lt;cstring&gt; using std::cout; using std::endl; class SeqStack { public: SeqStack(int cap = 3) :_top(0) ,_cap(cap) { _pstack = new int[_cap](); } ~SeqStack() { delete[] _pstack;//不要用delete _pstack = nullptr; } void push(int val) { if(_top == _cap) { //栈满了 expand(2*_cap); } _pstack[_top] = val; ++_top; } void pop() { if(_top == 0){ throw \\"Stack is empty!!!\\"; } --_top; } int top() { if(_top == 0) { throw \\"Stack is empty!!!\\"; } return _pstack[_top-1]; } bool empty() { return _top == 0; } private: void expand(int size) { int* newStack = new int[size]; memcpy(newStack, _pstack, _top*sizeof(int)); delete[] _pstack; //这里也是delete[] _pstack = newStack; _cap = size; } public: int* _pstack; //指向数据域 int _top; //指向栈顶,也是栈的大小 int _cap; //栈的容量 }; int main() { SeqStack s; s.push(12); s.push(17); s.push(100); s.push(78); //cout &lt;&lt; s.top() &lt;&lt; endl; //s.pop(); //cout &lt;&lt; s.top() &lt;&lt; endl; //s.pop(); //cout &lt;&lt; s.top() &lt;&lt; endl; //s.pop(); //cout &lt;&lt; s.top() &lt;&lt; endl; //s.pop(); while(!s.empty()) { cout &lt;&lt; s.top() &lt;&lt; endl; s.pop(); } return 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"页面配置"}],["meta",{"property":"article:tag","content":"使用指南"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"页面配置\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"顺序栈的实现","slug":"顺序栈的实现","link":"#顺序栈的实现","children":[]}],"git":{},"readingTime":{"minutes":0.88,"words":265},"filePathRelative":"algo/栈/新建 Markdown.md","excerpt":"<!--more-->\\n<h2> 顺序栈的实现</h2>\\n<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;iostream&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;stdexcept&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;cstring&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::cout;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::endl;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">class</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">SeqStack</span><span style=\\"color: #ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">public:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #61AFEF\\">SeqStack</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">cap</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">3</span><span style=\\"color: #ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        :</span><span style=\\"color: #61AFEF\\">_top</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #D19A66\\">0</span><span style=\\"color: #ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        ,</span><span style=\\"color: #61AFEF\\">_cap</span><span style=\\"color: #ABB2BF\\">(cap)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        _pstack </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">new</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\">[_cap]();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #61AFEF\\">~SeqStack</span><span style=\\"color: #ABB2BF\\">() {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">delete[]</span><span style=\\"color: #ABB2BF\\"> _pstack;</span><span style=\\"color: #7F848E; font-style: italic\\">//不要用delete</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        _pstack </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">nullptr</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">push</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">val</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\">(_top </span><span style=\\"color: #C678DD\\">==</span><span style=\\"color: #ABB2BF\\"> _cap) {</span><span style=\\"color: #7F848E; font-style: italic\\"> //栈满了</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            </span><span style=\\"color: #61AFEF\\">expand</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #D19A66\\">2</span><span style=\\"color: #56B6C2\\">*</span><span style=\\"color: #ABB2BF\\">_cap);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #E5C07B\\">_pstack</span><span style=\\"color: #ABB2BF\\">[_top] </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> val;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">++</span><span style=\\"color: #ABB2BF\\">_top;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">pop</span><span style=\\"color: #ABB2BF\\">() {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\">(_top </span><span style=\\"color: #C678DD\\">==</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">0</span><span style=\\"color: #ABB2BF\\">){</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            </span><span style=\\"color: #C678DD\\">throw</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"Stack is empty!!!\\"</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">--</span><span style=\\"color: #ABB2BF\\">_top;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">top</span><span style=\\"color: #ABB2BF\\">() {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\">(_top </span><span style=\\"color: #C678DD\\">==</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">0</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            </span><span style=\\"color: #C678DD\\">throw</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"Stack is empty!!!\\"</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">_pstack</span><span style=\\"color: #ABB2BF\\">[_top</span><span style=\\"color: #56B6C2\\">-</span><span style=\\"color: #D19A66\\">1</span><span style=\\"color: #ABB2BF\\">];</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">bool</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">empty</span><span style=\\"color: #ABB2BF\\">() {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> _top </span><span style=\\"color: #C678DD\\">==</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">0</span><span style=\\"color: #ABB2BF\\">;    </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">private:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">expand</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">size</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #56B6C2\\">*</span><span style=\\"color: #ABB2BF\\"> newStack </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">new</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\">[size];</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #61AFEF\\">memcpy</span><span style=\\"color: #ABB2BF\\">(newStack, _pstack, _top</span><span style=\\"color: #56B6C2\\">*</span><span style=\\"color: #C678DD\\">sizeof</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\">));</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">delete[]</span><span style=\\"color: #ABB2BF\\"> _pstack;</span><span style=\\"color: #7F848E; font-style: italic\\">   //这里也是delete[]</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        _pstack </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> newStack;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        _cap </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> size;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">public:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #56B6C2\\">*</span><span style=\\"color: #ABB2BF\\"> _pstack;</span><span style=\\"color: #7F848E; font-style: italic\\">   //指向数据域</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> _top;</span><span style=\\"color: #7F848E; font-style: italic\\">  //指向栈顶,也是栈的大小</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> _cap;</span><span style=\\"color: #7F848E; font-style: italic\\">    //栈的容量</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">};</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">main</span><span style=\\"color: #ABB2BF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    SeqStack s;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #E5C07B\\">s</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">push</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #D19A66\\">12</span><span style=\\"color: #ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #E5C07B\\">s</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">push</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #D19A66\\">17</span><span style=\\"color: #ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #E5C07B\\">s</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">push</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #D19A66\\">100</span><span style=\\"color: #ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #E5C07B\\">s</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">push</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #D19A66\\">78</span><span style=\\"color: #ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">    //cout &lt;&lt; s.top() &lt;&lt; endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">    //s.pop();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">    //cout &lt;&lt; s.top() &lt;&lt; endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">    //s.pop();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">    //cout &lt;&lt; s.top() &lt;&lt; endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">    //s.pop();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">    //cout &lt;&lt; s.top() &lt;&lt; endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">    //s.pop();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">while</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #56B6C2\\">!</span><span style=\\"color: #E5C07B\\">s</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">empty</span><span style=\\"color: #ABB2BF\\">()) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">s</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">top</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #E5C07B\\">s</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">pop</span><span style=\\"color: #ABB2BF\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">0</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{s as data};
