const l=JSON.parse('{"key":"v-01408bc4","path":"/ccpp/02%20c__%E5%9F%BA%E7%A1%80/%E9%BB%98%E8%AE%A4%E5%8F%82%E6%95%B0.html","title":"默认参数","lang":"zh-CN","frontmatter":{"title":"默认参数","icon":"file","order":8,"headerDepth":4,"category":["c/c++"],"tag":["c++基础"],"description":"默认参数 1681304023862-96f676ac-4269-4aa5-bf35-9cf222f1743c 默认参数的目的 C++可以给函数定义默认参数值。通常，调用函数时，要为函数的每个参数给定对应的实参 void func1(int x, int y); void func1(int x, int y) { cout &lt;&lt; \\"x = \\" &lt;&lt; x &lt;&lt; endl; cout &lt;&lt; \\"y = \\" &lt;&lt; y &lt;&lt; endl; }","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/ccpp/02%20c__%E5%9F%BA%E7%A1%80/%E9%BB%98%E8%AE%A4%E5%8F%82%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"默认参数"}],["meta",{"property":"og:description","content":"默认参数 1681304023862-96f676ac-4269-4aa5-bf35-9cf222f1743c 默认参数的目的 C++可以给函数定义默认参数值。通常，调用函数时，要为函数的每个参数给定对应的实参 void func1(int x, int y); void func1(int x, int y) { cout &lt;&lt; \\"x = \\" &lt;&lt; x &lt;&lt; endl; cout &lt;&lt; \\"y = \\" &lt;&lt; y &lt;&lt; endl; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"c++基础"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"默认参数\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"默认参数的目的","slug":"默认参数的目的","link":"#默认参数的目的","children":[{"level":3,"title":"调用效率问题（汇编）","slug":"调用效率问题-汇编","link":"#调用效率问题-汇编","children":[]}]},{"level":2,"title":"默认参数的声明","slug":"默认参数的声明","link":"#默认参数的声明","children":[]},{"level":2,"title":"默认参数的顺序规定","slug":"默认参数的顺序规定","link":"#默认参数的顺序规定","children":[]},{"level":2,"title":"默认参数与函数重载","slug":"默认参数与函数重载","link":"#默认参数与函数重载","children":[]},{"level":2,"title":"课堂代码","slug":"课堂代码","link":"#课堂代码","children":[]}],"git":{},"readingTime":{"minutes":4.68,"words":1404},"filePathRelative":"ccpp/02 c++基础/默认参数.md","excerpt":"<h1> 默认参数</h1>\\n<figure><figcaption>1681304023862-96f676ac-4269-4aa5-bf35-9cf222f1743c</figcaption></figure>\\n<ol>\\n<li>\\n</li>\\n<li>\\n</li>\\n<li>\\n</li>\\n<li>\\n</li>\\n</ol>\\n<!--more-->\\n<h2> 默认参数的目的</h2>\\n<p>C++可以给函数定义默认参数值。通常，调用函数时，要为函数的每个参数给定对应的实参</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">func1</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">x</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">y</span><span style=\\"color: #ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">func1</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">x</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">y</span><span style=\\"color: #ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"x = \\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> x </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"y = \\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> y </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{l as data};
