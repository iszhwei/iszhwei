const t=JSON.parse('{"key":"v-0359a68f","path":"/mysql/05%20MySQL%E4%BA%8B%E5%8A%A1/%E4%BA%8B%E5%8A%A1%E7%9A%84ACID%E7%89%B9%E6%80%A7.html","title":"事务的ACID特性","lang":"zh-CN","frontmatter":{"title":"事务的ACID特性","icon":"file","order":2,"headerDepth":4,"category":["mysql"],"tag":["事务"],"description":"事务的ACID特性 ACID特性 每一个事务必须满足下面的4个特性： 原子性（Atomic）：事务是一个不可分割的整体，事务必须具有原子特性。当修改数据时，要么全执行，要么全不执行，即不允许部分事务完成 一致性（Consistency）：事务执行之前和执行之后，数据库数据必须保持一致性状态。数据库的一致性状态必须由用户来负责，由并发控制机制实现。拿银行转账来说，只有让一个用户的余额减少，又让一个用户的余额增加才能构成一个完整的事务 隔离性（Isolation）：当两个或者多个事务并发执行时，为了保证数据的安全性，将一个事物内部的操作与其它事务的操作隔离起来，不被其它正在执行的事务所看到，使得并发执行的各个事务之间不能互相影响。隔离级别：数据的安全性和事务的并发性。隔离越严格，安全性越高，并发性越低（就是并发控制，保证数据安全） 持久性（Durability）：事务完成（事务commit成功）以后，DBMS保证它对数据库中的数据的修改是永久性的，即使数据库因为故障出错，也应该能够恢复数据","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/mysql/05%20MySQL%E4%BA%8B%E5%8A%A1/%E4%BA%8B%E5%8A%A1%E7%9A%84ACID%E7%89%B9%E6%80%A7.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"事务的ACID特性"}],["meta",{"property":"og:description","content":"事务的ACID特性 ACID特性 每一个事务必须满足下面的4个特性： 原子性（Atomic）：事务是一个不可分割的整体，事务必须具有原子特性。当修改数据时，要么全执行，要么全不执行，即不允许部分事务完成 一致性（Consistency）：事务执行之前和执行之后，数据库数据必须保持一致性状态。数据库的一致性状态必须由用户来负责，由并发控制机制实现。拿银行转账来说，只有让一个用户的余额减少，又让一个用户的余额增加才能构成一个完整的事务 隔离性（Isolation）：当两个或者多个事务并发执行时，为了保证数据的安全性，将一个事物内部的操作与其它事务的操作隔离起来，不被其它正在执行的事务所看到，使得并发执行的各个事务之间不能互相影响。隔离级别：数据的安全性和事务的并发性。隔离越严格，安全性越高，并发性越低（就是并发控制，保证数据安全） 持久性（Durability）：事务完成（事务commit成功）以后，DBMS保证它对数据库中的数据的修改是永久性的，即使数据库因为故障出错，也应该能够恢复数据"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"事务"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"事务的ACID特性\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[{"level":2,"title":"ACID特性","slug":"acid特性","link":"#acid特性","children":[]},{"level":2,"title":"InnoDB 引擎通过什么技术来保证事务的这四个特性的呢？","slug":"innodb-引擎通过什么技术来保证事务的这四个特性的呢","link":"#innodb-引擎通过什么技术来保证事务的这四个特性的呢","children":[]}],"git":{},"readingTime":{"minutes":2.84,"words":853},"filePathRelative":"mysql/05 MySQL事务/事务的ACID特性.md","excerpt":"<h1> 事务的ACID特性</h1>\\n<h2> ACID特性</h2>\\n<p>每一个事务必须满足下面的4个特性：</p>\\n<ul>\\n<li>\\n<p><strong>原子性（Atomic）</strong>：事务是一个不可分割的整体，事务必须具有原子特性。当修改数据时，<u>要么全执行，要么全不执行</u>，即不允许部分事务完成</p>\\n</li>\\n<li>\\n<p><strong>一致性（Consistency）</strong>：事务执行之前和执行之后，数据库<u><strong>数据</strong>必须保持一致性状态</u>。数据库的一致性状态必须由用户来负责，由<strong>并发</strong>控制机制实现。拿银行转账来说，只有让一个用户的余额减少，又让一个用户的余额增加才能构成一个完整的事务</p>\\n</li>\\n<li>\\n<p><strong>隔离性（Isolation）</strong>：当两个或者多个<strong>事务并发执行时</strong>，为了保证数据的安全性，将<u>一个事物内部的操作</u>与其它事务的操作隔离起来，<u>不被其它正在执行的事务所看到</u>，使得并发执行的各个事务之间不能互相影响。隔离级别：数据的安全性和事务的并发性。<u>隔离越严格，安全性越高，并发性越低</u>（就是并发控制，保证数据安全）</p>\\n</li>\\n<li>\\n<p><strong>持久性（Durability）</strong>：<u>事务完成（<strong>事务commit成功</strong>）以后</u>，DBMS保证它对数据库中的数据的修改是永久性的，<u>即使数据库因为故障出错，也应该能够恢复数据</u></p>\\n</li>\\n</ul>","autoDesc":true}');export{t as data};
