const s=JSON.parse('{"key":"v-c84ce682","path":"/algo/%E9%98%9F/%E6%96%B0%E5%BB%BA%20Markdown.html","title":"页面配置","lang":"zh-CN","frontmatter":{"title":"页面配置","icon":"file","order":3,"headerDepth":4,"category":["使用指南"],"tag":["页面配置","使用指南"],"description":"#include &lt;iostream&gt; using std::cout; using std::endl; //对头指针_front与队尾指针_rear在进行变化的时候，需要考虑边界条件 class Queue { public: Queue(int sz = 10) : _size(sz) , _front(0) , _rear(0) , _data(new int[_size]()) { cout &lt;&lt; \\"Queue(int = 10)\\" &lt;&lt; endl; } bool empty() { return _front == _rear; } bool full() { return _front == (_rear + 1)% _size; } void push(const int &amp;value) { if(!full()) { _data[_rear++] = value; _rear %= _size; } else { cout &lt;&lt; \\"The queue is full\\" &lt;&lt; endl; return; } } void pop() { if(!empty()) { ++_front; _front %= _size; } else { cout &lt;&lt; \\"The queue is empty\\" &lt;&lt; endl; return; } } int front() const { return _data[_front]; } int back() const { return _data[(_rear - 1 + _size)%_size]; } int getFront() const { return _front; } int getRear() const { return _rear; } ~Queue() { cout &lt;&lt; \\"~Queue()\\" &lt;&lt; endl; if(_data) { delete [] _data; _data = nullptr; } } private: int _size; int _front; int _rear; int *_data; }; int main(int argc, char **argv) { Queue que; cout &lt;&lt; \\"此时队列是否为空?\\" &lt;&lt; que.empty() &lt;&lt; endl; que.push(1); cout &lt;&lt; \\"此时队列是否为满?\\" &lt;&lt; que.full() &lt;&lt; endl; for(size_t idx = 2; idx != 12; ++idx) { que.push(idx); } cout &lt;&lt; \\"此时队列是否为满?\\" &lt;&lt; que.full() &lt;&lt; endl; cout &lt;&lt; \\"打印队列头尾\\" &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; \\"队头元素\\" &lt;&lt; que.front() &lt;&lt; endl; cout &lt;&lt; \\"对头指针\\" &lt;&lt; que.getFront() &lt;&lt; endl; cout &lt;&lt; \\"队尾元素\\" &lt;&lt; que.back() &lt;&lt; endl; cout &lt;&lt; \\"对尾指针\\" &lt;&lt; que.getRear() &lt;&lt; endl; while(!que.empty()) { cout &lt;&lt; que.front() &lt;&lt; endl; que.pop(); } cout &lt;&lt; \\"此时队列是否为空?\\" &lt;&lt; que.empty() &lt;&lt; endl; return 0; }","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/algo/%E9%98%9F/%E6%96%B0%E5%BB%BA%20Markdown.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"页面配置"}],["meta",{"property":"og:description","content":"#include &lt;iostream&gt; using std::cout; using std::endl; //对头指针_front与队尾指针_rear在进行变化的时候，需要考虑边界条件 class Queue { public: Queue(int sz = 10) : _size(sz) , _front(0) , _rear(0) , _data(new int[_size]()) { cout &lt;&lt; \\"Queue(int = 10)\\" &lt;&lt; endl; } bool empty() { return _front == _rear; } bool full() { return _front == (_rear + 1)% _size; } void push(const int &amp;value) { if(!full()) { _data[_rear++] = value; _rear %= _size; } else { cout &lt;&lt; \\"The queue is full\\" &lt;&lt; endl; return; } } void pop() { if(!empty()) { ++_front; _front %= _size; } else { cout &lt;&lt; \\"The queue is empty\\" &lt;&lt; endl; return; } } int front() const { return _data[_front]; } int back() const { return _data[(_rear - 1 + _size)%_size]; } int getFront() const { return _front; } int getRear() const { return _rear; } ~Queue() { cout &lt;&lt; \\"~Queue()\\" &lt;&lt; endl; if(_data) { delete [] _data; _data = nullptr; } } private: int _size; int _front; int _rear; int *_data; }; int main(int argc, char **argv) { Queue que; cout &lt;&lt; \\"此时队列是否为空?\\" &lt;&lt; que.empty() &lt;&lt; endl; que.push(1); cout &lt;&lt; \\"此时队列是否为满?\\" &lt;&lt; que.full() &lt;&lt; endl; for(size_t idx = 2; idx != 12; ++idx) { que.push(idx); } cout &lt;&lt; \\"此时队列是否为满?\\" &lt;&lt; que.full() &lt;&lt; endl; cout &lt;&lt; \\"打印队列头尾\\" &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; \\"队头元素\\" &lt;&lt; que.front() &lt;&lt; endl; cout &lt;&lt; \\"对头指针\\" &lt;&lt; que.getFront() &lt;&lt; endl; cout &lt;&lt; \\"队尾元素\\" &lt;&lt; que.back() &lt;&lt; endl; cout &lt;&lt; \\"对尾指针\\" &lt;&lt; que.getRear() &lt;&lt; endl; while(!que.empty()) { cout &lt;&lt; que.front() &lt;&lt; endl; que.pop(); } cout &lt;&lt; \\"此时队列是否为空?\\" &lt;&lt; que.empty() &lt;&lt; endl; return 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"页面配置"}],["meta",{"property":"article:tag","content":"使用指南"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"页面配置\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":1.11,"words":333},"filePathRelative":"algo/队/新建 Markdown.md","excerpt":"<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;iostream&gt;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::cout;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::endl;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">//对头指针_front与队尾指针_rear在进行变化的时候，需要考虑边界条件</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">class</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">Queue</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">public:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #61AFEF\\">Queue</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">sz</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">10</span><span style=\\"color: #ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    : </span><span style=\\"color: #61AFEF\\">_size</span><span style=\\"color: #ABB2BF\\">(sz)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    , </span><span style=\\"color: #61AFEF\\">_front</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #D19A66\\">0</span><span style=\\"color: #ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    , </span><span style=\\"color: #61AFEF\\">_rear</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #D19A66\\">0</span><span style=\\"color: #ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    , </span><span style=\\"color: #61AFEF\\">_data</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">new</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\">[_size]())</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"Queue(int = 10)\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">bool</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">empty</span><span style=\\"color: #ABB2BF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> _front </span><span style=\\"color: #C678DD\\">==</span><span style=\\"color: #ABB2BF\\"> _rear;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">bool</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">full</span><span style=\\"color: #ABB2BF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> _front </span><span style=\\"color: #C678DD\\">==</span><span style=\\"color: #ABB2BF\\"> (_rear </span><span style=\\"color: #56B6C2\\">+</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">1</span><span style=\\"color: #ABB2BF\\">)</span><span style=\\"color: #56B6C2\\">%</span><span style=\\"color: #ABB2BF\\"> _size;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">push</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">const</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&amp;</span><span style=\\"color: #E06C75; font-style: italic\\">value</span><span style=\\"color: #ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #56B6C2\\">!</span><span style=\\"color: #61AFEF\\">full</span><span style=\\"color: #ABB2BF\\">())</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            </span><span style=\\"color: #E5C07B\\">_data</span><span style=\\"color: #ABB2BF\\">[_rear</span><span style=\\"color: #C678DD\\">++</span><span style=\\"color: #ABB2BF\\">] </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> value;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            _rear </span><span style=\\"color: #C678DD\\">%=</span><span style=\\"color: #ABB2BF\\"> _size;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">else</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"The queue is full\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">pop</span><span style=\\"color: #ABB2BF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #56B6C2\\">!</span><span style=\\"color: #61AFEF\\">empty</span><span style=\\"color: #ABB2BF\\">())</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            </span><span style=\\"color: #C678DD\\">++</span><span style=\\"color: #ABB2BF\\">_front;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            _front </span><span style=\\"color: #C678DD\\">%=</span><span style=\\"color: #ABB2BF\\"> _size;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">else</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"The queue is empty\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">front</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #C678DD\\">const</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">_data</span><span style=\\"color: #ABB2BF\\">[_front];</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">back</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #C678DD\\">const</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">_data</span><span style=\\"color: #ABB2BF\\">[(_rear </span><span style=\\"color: #56B6C2\\">-</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">1</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">+</span><span style=\\"color: #ABB2BF\\"> _size)</span><span style=\\"color: #56B6C2\\">%</span><span style=\\"color: #ABB2BF\\">_size];</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">getFront</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #C678DD\\">const</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> _front;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">getRear</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #C678DD\\">const</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> _rear;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #61AFEF\\">~Queue</span><span style=\\"color: #ABB2BF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"~Queue()\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\">(_data)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            </span><span style=\\"color: #C678DD\\">delete</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">[]</span><span style=\\"color: #ABB2BF\\"> _data;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">            _data </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">nullptr</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">private:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> _size;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> _front;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> _rear;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">*</span><span style=\\"color: #ABB2BF\\">_data;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">};</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">main</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">argc</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #C678DD\\">char</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">**</span><span style=\\"color: #E06C75; font-style: italic\\">argv</span><span style=\\"color: #ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    Queue que;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"此时队列是否为空?\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">que</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">empty</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #E5C07B\\">que</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">push</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #D19A66\\">1</span><span style=\\"color: #ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"此时队列是否为满?\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">que</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">full</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">for</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">size_t</span><span style=\\"color: #ABB2BF\\"> idx </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">2</span><span style=\\"color: #ABB2BF\\">; idx </span><span style=\\"color: #C678DD\\">!=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">12</span><span style=\\"color: #ABB2BF\\">; </span><span style=\\"color: #C678DD\\">++</span><span style=\\"color: #ABB2BF\\">idx)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #E5C07B\\">que</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">push</span><span style=\\"color: #ABB2BF\\">(idx);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"此时队列是否为满?\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">que</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">full</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"打印队列头尾\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"队头元素\\"</span><span style=\\"color: #ABB2BF\\">  </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">que</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">front</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"对头指针\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">que</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">getFront</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"队尾元素\\"</span><span style=\\"color: #ABB2BF\\">  </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">que</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">back</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"对尾指针\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">que</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">getRear</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">while</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #56B6C2\\">!</span><span style=\\"color: #E5C07B\\">que</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">empty</span><span style=\\"color: #ABB2BF\\">())</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">que</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">front</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #E5C07B\\">que</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">pop</span><span style=\\"color: #ABB2BF\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"此时队列是否为空?\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">que</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">empty</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">0</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{s as data};
