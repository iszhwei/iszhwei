const s=JSON.parse(`{"key":"v-c01690d8","path":"/algo/01%20%E6%95%B0%E7%BB%84/%E6%9F%A5%E6%89%BE%E6%9C%80%E5%A4%A7%E5%92%8C%E6%AC%A1%E5%A4%A7%E7%9A%84%E5%85%83%E7%B4%A0.html","title":"查找最大和次大的元素","lang":"zh-CN","frontmatter":{"title":"查找最大和次大的元素","icon":"file","order":13,"headerDepth":4,"category":["数据结构与算法"],"tag":["数组"],"description":"#include &lt;iostream&gt; #include &lt;vector&gt; #include &lt;climits&gt; //INT_MIN using std::cout; using std::endl; using std::vector; void find1and2big(vector&lt;int&gt;&amp; nums, int&amp; big1, int&amp; big2) { if(nums.size() &lt; 2) { return; } big1 = INT_MIN; big2 = INT_MIN; for(int num : nums) { if(num &gt; big1) { big2 = big1; big1 = num; } else if(num &gt; big2 &amp;&amp; num &lt; big1) { big2 = num; } } if(big2 == INT_MIN) { cout &lt;&lt; \\"数组中所有元素都相同或数组大小小于2，无法找到次大值\\" &lt;&lt; endl; } } int main() { vector&lt;int&gt; vec = {12, 13, 1, 10, 34, 2}; for(int i : vec) { cout &lt;&lt; i &lt;&lt; ' '; } cout &lt;&lt; endl; int big1, big2; find1and2big(vec, big1, big2); cout &lt;&lt; big1 &lt;&lt; ' ' &lt;&lt; big2 &lt;&lt; endl; return 0; }","head":[["meta",{"property":"og:url","content":"https://iszhwei.gitee.io/algo/01%20%E6%95%B0%E7%BB%84/%E6%9F%A5%E6%89%BE%E6%9C%80%E5%A4%A7%E5%92%8C%E6%AC%A1%E5%A4%A7%E7%9A%84%E5%85%83%E7%B4%A0.html"}],["meta",{"property":"og:site_name","content":"张威的编程学习笔记"}],["meta",{"property":"og:title","content":"查找最大和次大的元素"}],["meta",{"property":"og:description","content":"#include &lt;iostream&gt; #include &lt;vector&gt; #include &lt;climits&gt; //INT_MIN using std::cout; using std::endl; using std::vector; void find1and2big(vector&lt;int&gt;&amp; nums, int&amp; big1, int&amp; big2) { if(nums.size() &lt; 2) { return; } big1 = INT_MIN; big2 = INT_MIN; for(int num : nums) { if(num &gt; big1) { big2 = big1; big1 = num; } else if(num &gt; big2 &amp;&amp; num &lt; big1) { big2 = num; } } if(big2 == INT_MIN) { cout &lt;&lt; \\"数组中所有元素都相同或数组大小小于2，无法找到次大值\\" &lt;&lt; endl; } } int main() { vector&lt;int&gt; vec = {12, 13, 1, 10, 34, 2}; for(int i : vec) { cout &lt;&lt; i &lt;&lt; ' '; } cout &lt;&lt; endl; int big1, big2; find1and2big(vec, big1, big2); cout &lt;&lt; big1 &lt;&lt; ' ' &lt;&lt; big2 &lt;&lt; endl; return 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"张威"}],["meta",{"property":"article:tag","content":"数组"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"查找最大和次大的元素\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"张威\\",\\"url\\":\\"https://iszhwei.gitee.io\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":0.64,"words":193},"filePathRelative":"algo/01 数组/查找最大和次大的元素.md","excerpt":"<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;iostream&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;vector&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">#include</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">&lt;climits&gt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #7F848E; font-style: italic\\">//INT_MIN</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::cout;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">using</span><span style=\\"color: #ABB2BF\\"> std::vector;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">void</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">find1and2big</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">vector</span><span style=\\"color: #ABB2BF\\">&lt;</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\">&gt;</span><span style=\\"color: #C678DD\\">&amp;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">nums</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #C678DD\\">int&amp;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">big1</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #C678DD\\">int&amp;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75; font-style: italic\\">big2</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">nums</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">size</span><span style=\\"color: #ABB2BF\\">() </span><span style=\\"color: #C678DD\\">&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">2</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">         </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     big1 </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> INT_MIN;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     big2 </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> INT_MIN;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     </span><span style=\\"color: #C678DD\\">for</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> num : nums) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">         </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\">(num </span><span style=\\"color: #C678DD\\">&gt;</span><span style=\\"color: #ABB2BF\\"> big1) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">             big2 </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> big1;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">             big1 </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> num;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">         }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">         </span><span style=\\"color: #C678DD\\">else</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\">(num </span><span style=\\"color: #C678DD\\">&gt;</span><span style=\\"color: #ABB2BF\\"> big2 </span><span style=\\"color: #56B6C2\\">&amp;&amp;</span><span style=\\"color: #ABB2BF\\"> num </span><span style=\\"color: #C678DD\\">&lt;</span><span style=\\"color: #ABB2BF\\"> big1) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">             big2 </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> num;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">         }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\">(big2 </span><span style=\\"color: #C678DD\\">==</span><span style=\\"color: #ABB2BF\\"> INT_MIN) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">         cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"数组中所有元素都相同或数组大小小于2，无法找到次大值\\"</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">main</span><span style=\\"color: #ABB2BF\\">() {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     vector</span><span style=\\"color: #C678DD\\">&lt;int&gt;</span><span style=\\"color: #ABB2BF\\"> vec </span><span style=\\"color: #C678DD\\">=</span><span style=\\"color: #ABB2BF\\"> {</span><span style=\\"color: #D19A66\\">12</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #D19A66\\">13</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #D19A66\\">1</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #D19A66\\">10</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #D19A66\\">34</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #D19A66\\">2</span><span style=\\"color: #ABB2BF\\">};</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     </span><span style=\\"color: #C678DD\\">for</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> i : vec) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">         cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> i </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">' '</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     </span><span style=\\"color: #C678DD\\">int</span><span style=\\"color: #ABB2BF\\"> big1, big2;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     </span><span style=\\"color: #61AFEF\\">find1and2big</span><span style=\\"color: #ABB2BF\\">(vec, big1, big2);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     cout </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> big1 </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">' '</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> big2 </span><span style=\\"color: #C678DD\\">&lt;&lt;</span><span style=\\"color: #ABB2BF\\"> endl;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">     </span><span style=\\"color: #C678DD\\">return</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">0</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\"> }                                                                            </span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{s as data};
